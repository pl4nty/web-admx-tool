<?xml version="1.0" ?><policyDefinitionResources revision="1.0" schemaVersion="1.0"><!--chrome version: 136.0.7103.114--><displayName/><description/><resources><stringTable><string id="SUPPORTED_WIN7">Microsoft Windows 7 or later</string><string id="SUPPORTED_WIN7_ONLY">Microsoft Windows 7</string><string id="googlechrome">Google Chrome</string><string id="googlechrome_recommended">Google Chrome - Default Settings (users can override)</string><string id="Accessibility_group">Accessibility settings</string><string id="LiveTranslateEnabled">Enable Live Translate</string><string id="LiveTranslateEnabled_Explain">Enable translation of live captions. Captions will be sent to Google for translation.

If this policy is set to Enabled, Live Translate will always be turned on.

If this policy is set to Disabled, Live Translate will always be turned off.

If you set this policy as mandatory, users cannot change or override it.

If this policy is left unset, Live Translate is disabled initially but can be enabled by the user anytime.</string><string id="UiAutomationProviderEnabled">Enable the browser's UI Automation accessibility framework provider on Windows</string><string id="UiAutomationProviderEnabled_Explain">Enables the UI Automation accessibility framework
provider in Google Chrome for use by
accessibility tools.

This policy is supported in
Google Chrome for a one-year
transition period to allow enterprise administrators to control the deployment
of the browser's UI Automation accessibility
framework provider. Accessibility and other tools that use the
UI Automation accessibility framework to interoperate
with the browser may require updates to function properly with the browser's
UI Automation provider. Administrators can use this
policy to temporarily disable the browser's
UI Automation provider (thereby reverting to the old
behavior) while they work with vendors to provide updates to impacted tools.

When set to false, Google Chrome only
enables its Microsoft Active Accessibility
provider. Accessibility and other tools that use the newer
UI Automation accessibility framework to interoperate
with the browser will communicate with it by way of a compatibility shim in
Microsoft® Windows®.

When set to true, Google Chrome
enables its UI Automation provider in addition to its
Microsoft Active Accessibility provider.
Accessibility and other tools that use the newer
UI Automation accessibility framework to interoperate
with the browser will communicate directly with it.

When left unset, the variations framework in Google Chrome is used to enable or disable
the provider.

Support for this policy setting will end in Google Chrome 146.</string><string id="ScreenCapture_group">Allow or deny screen capture</string><string id="SameOriginTabCaptureAllowedByOrigins">Allow Same Origin Tab capture by these origins</string><string id="SameOriginTabCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can capture tabs with their same Origin.

Leaving the policy unset means that sites will not be considered for an override at this level of capture.

Note that windowed Chrome Apps with the same origin as this site will still be allowed to be captured.

If a site matches a URL pattern in this policy, the following policies will not be considered: TabCaptureAllowedByOrigins, WindowCaptureAllowedByOrigins, ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SameOriginTabCaptureAllowedByOriginsDesc">Allow Same Origin Tab capture by these origins</string><string id="ScreenCaptureAllowed">Allow or deny screen capture</string><string id="ScreenCaptureAllowed_Explain">If enabled or not configured (default), a Web page can use
screen-share APIs (e.g., getDisplayMedia() or the Desktop Capture extension API)
to prompt the user to select a tab, window or desktop to capture.

When this policy is disabled, any calls to screen-share APIs will fail
with an error; however this policy is not considered (and a site will be
allowed to use screen-share APIs) if the site matches an origin pattern in
any of the following policies:
ScreenCaptureAllowedByOrigins,
WindowCaptureAllowedByOrigins,
TabCaptureAllowedByOrigins,
SameOriginTabCaptureAllowedByOrigins.
</string><string id="ScreenCaptureAllowedByOrigins">Allow Desktop, Window, and Tab capture by these origins</string><string id="ScreenCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Desktop, Window, and Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of Capture.

This policy is not considered if a site matches a URL pattern in any of the following policies: WindowCaptureAllowedByOrigins, TabCaptureAllowedByOrigins, SameOriginTabCaptureAllowedByOrigins.

If a site matches a URL pattern in this policy, the ScreenCaptureAllowed will not be considered.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ScreenCaptureAllowedByOriginsDesc">Allow Desktop, Window, and Tab capture by these origins</string><string id="TabCaptureAllowedByOrigins">Allow Tab capture by these origins</string><string id="TabCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of capture.

Note that windowed Chrome Apps will still be allowed to be captured.

This policy is not considered if a site matches a URL pattern in the SameOriginTabCaptureAllowedByOrigins policy.

If a site matches a URL pattern in this policy, the following policies will not be considered: WindowCaptureAllowedByOrigins, ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string><string id="TabCaptureAllowedByOriginsDesc">Allow Tab capture by these origins</string><string id="WindowCaptureAllowedByOrigins">Allow Window and Tab capture by these origins</string><string id="WindowCaptureAllowedByOrigins_Explain">Setting the policy lets you set a list of URL patterns that can use Window and Tab Capture.

Leaving the policy unset means that sites will not be considered for an override at this level of Capture.

This policy is not considered if a site matches a URL pattern in any of the following policies: TabCaptureAllowedByOrigins, SameOriginTabCaptureAllowedByOrigins.

If a site matches a URL pattern in this policy, the following policies will not be considered: ScreenCaptureAllowedByOrigins, ScreenCaptureAllowed.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.  This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WindowCaptureAllowedByOriginsDesc">Allow Window and Tab capture by these origins</string><string id="CertificateManagement_group">Certificate management settings</string><string id="CACertificateManagementAllowed">Allow users to manage installed CA certificates.</string><string id="CACertificateManagementAllowed_Explain">Setting the policy to All (0) or leaving it unset lets users edit trust settings for all CA certificates, remove user-imported certificates, and import certificates using Certificate Manager. Setting the policy to UserOnly (1) lets users manage only user-imported certificates, but not change trust settings of built-in certificates. Setting it to None (2) lets users view (not manage) CA certificates.</string><string id="CACertificateManagementAllowed_All">Allow users to manage all certificates</string><string id="CACertificateManagementAllowed_UserOnly">Allow users to manage user certificates</string><string id="CACertificateManagementAllowed_None">Disallow users from managing certificates</string><string id="CACertificates">TLS certificates that should be trusted by Google Chrome for server authentication</string><string id="CACertificates_Explain">A list of TLS certificates that should be trusted by Google Chrome for server authentication.
Certificates should be base64-encoded.

Example value:

MIICCTCCAY6gAwIBAgINAgPluILrIPglJ209ZjAKBggqhkjOPQQDAzBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfTzOHMymKoYTey8chWEGJ6ladK0uFxh1MJ7x/JlFyb+Kf1qPKzEUURout736GjOyxfi//qXGdGIRFBEFVbivqJn+7kAHjSxm65FSWRQmx1WyRRK2EE46ajA2ADDL24CejQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTB8Sa6oC2uhYHP0/EqEr24Cmf9vDAKBggqhkjOPQQDAwNpADBmAjEA9uEglRR7VKOQFhG/hMjqb2sXnh5GmCCbn9MN2azTL818+FsuVbu/3ZL3pAzcMeGiAjEA/JdmZuVDFhOD3cffL74UOO0BzrEXGhF16b0DjyZ+hOXJYKaV11RZt+cRLInUue4X</string><string id="CACertificatesDesc">TLS certificates that should be trusted by Google Chrome for server authentication</string><string id="CACertificatesWithConstraints">TLS certificates that should be trusted by Google Chrome for server authentication with constraints</string><string id="CACertificatesWithConstraints_Explain">A list of TLS certificates that should be trusted by Google Chrome for server authentication, with constraints added outside the certificate. If no constraint of a certain type is present, then any name of that type is allowed.
Certificates should be base64-encoded. At least one constraint must be specified for each certificate.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=CACertificatesWithConstraints for more information about schema and formatting.


Example value:

[
  {
    &quot;certificate&quot;: &quot;MIICCTCCAY6gAwIBAgINAgPluILrIPglJ209ZjAKBggqhkjOPQQDAzBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfTzOHMymKoYTey8chWEGJ6ladK0uFxh1MJ7x/JlFyb+Kf1qPKzEUURout736GjOyxfi//qXGdGIRFBEFVbivqJn+7kAHjSxm65FSWRQmx1WyRRK2EE46ajA2ADDL24CejQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTB8Sa6oC2uhYHP0/EqEr24Cmf9vDAKBggqhkjOPQQDAwNpADBmAjEA9uEglRR7VKOQFhG/hMjqb2sXnh5GmCCbn9MN2azTL818+FsuVbu/3ZL3pAzcMeGiAjEA/JdmZuVDFhOD3cffL74UOO0BzrEXGhF16b0DjyZ+hOXJYKaV11RZt+cRLInUue4X&quot;,
    &quot;constraints&quot;: {
      &quot;permitted_dns_names&quot;: [
        &quot;example.org&quot;
      ],
      &quot;permitted_cidrs&quot;: [
        &quot;10.1.1.0/24&quot;
      ]
    }
  }
]</string><string id="CADistrustedCertificates">TLS certificates that should be distrusted by Google Chrome for server authentication</string><string id="CADistrustedCertificates_Explain">A list of certificate public keys that should be distrusted by Google Chrome for TLS server
authentication.

The policy value is a list of base64-encoded X.509 certificates. Any
certificate with a matching SPKI (SubjectPublicKeyInfo) will be distrusted.

Example value:

MIIB/TCCAaOgAwIBAgIUQthnWVsd1jWpUCNBf/uILjXC+t4wCgYIKoZIzj0EAwIwVDELMAkGA1UEBhMCVVMxETAPBgNVBAgMCFZpcmdpbmlhMQ8wDQYDVQQHDAZSZXN0b24xITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0yMzEyMDcxNjE5NTVaFw0yMzEyMjExNjE5NTVaMFQxCzAJBgNVBAYTAlVTMREwDwYDVQQIDAhWaXJnaW5pYTEPMA0GA1UEBwwGUmVzdG9uMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ9Akav/KB0aVA9FM1QK4J1CEHn5rFOyY/nxcr5HG3+Fom0Kwu5zTR/kz9eOYgtG/1NmCzbiEKaULDfzA8V9aJ7o1MwUTAdBgNVHQ4EFgQUq37bLKiuw8Y/G+rurMf46hw7EekwHwYDVR0jBBgwFoAUq37bLKiuw8Y/G+rurMf46hw7EekwDwYDVR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAgNIADBFAiEA/JhtLSgtVOcXkgFJ9V5Vb6lhGdiKQFfzO9wTxPeCxCECIFePYPucys2n/r9MOBMHiX/8068ssv+uceqokzUg0mAb</string><string id="CADistrustedCertificatesDesc">TLS certificates that should be distrusted by Google Chrome for server authentication</string><string id="CAHintCertificates">TLS certificates that are not trusted or distrusted but can be used in path-building for server authentication</string><string id="CAHintCertificates_Explain">A list of certificates that are not trusted or distrusted in Google Chrome
but can be used as hints for path-building. Certificates should be base64-encoded.

Example value:

MIIFljCCA36gAwIBAgINAgO8U1lrNMcY9QFQZjANBgkqhkiG9w0BAQsFADBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjEwHhcNMjAwODEzMDAwMDQyWhcNMjcwOTMwMDAwMDQyWjBGMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzETMBEGA1UEAxMKR1RTIENBIDFDMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAPWI3+dijB43+DdCkH9sh9D7ZYIl/ejLa6T/belaI+KZ9hzpkgOZE3wJCor6QtZeViSqejOEH9Hpabu5dOxXTGZok3c3VVP+ORBNtzS7XyV3NzsXlOo85Z3VvMO0Q+sup0fvsEQRY9i0QYXdQTBIkxu/t/bgRQIh4JZCF8/ZK2VWNAcmBA2o/X3KLu/qSHw3TT8An4Pf73WELnlXXPxXbhqW//yMmqaZviXZf5YsBvcRKgKAgOtjGDxQSYflispfGStZloEAoPtR28p3CwvJlk/vcEnHXG0g/Zm0tOLKLnf9LdwLtmsTDIwZKxeWmLnwi/agJ7u2441Rj72ux5uxiZ0CAwEAAaOCAYAwggF8MA4GA1UdDwEB/wQEAwIBhjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUinR/r4XN7pXNPZzQ4kYU83E1HScwHwYDVR0jBBgwFoAU5K8rJnEaK0gnhS9SZizv8IkTcT4waAYIKwYBBQUHAQEEXDBaMCYGCCsGAQUFBzABhhpodHRwOi8vb2NzcC5wa2kuZ29vZy9ndHNyMTAwBggrBgEFBQcwAoYkaHR0cDovL3BraS5nb29nL3JlcG8vY2VydHMvZ3RzcjEuZGVyMDQGA1UdHwQtMCswKaAnoCWGI2h0dHA6Ly9jcmwucGtpLmdvb2cvZ3RzcjEvZ3RzcjEuY3JsMFcGA1UdIARQME4wOAYKKwYBBAHWeQIFAzAqMCgGCCsGAQUFBwIBFhxodHRwczovL3BraS5nb29nL3JlcG9zaXRvcnkvMAgGBmeBDAECATAIBgZngQwBAgIwDQYJKoZIhvcNAQELBQADggIBAIl9rCBcDDy+mqhXlRu0rvqrpXJxtDaV/d9AEQNMwkYUuxQkq/BQcSLbrcRuf8/xam/IgxvYzolfh2yHuKkMo5uhYpSTld9brmYZCwKWnvy15xBpPnrLRklfRuFBsdeYTWU0AIAaP0+fbH9JAIFTQaSSIYKCGvGjRFsqUBITTcFTNvNCCK9U+o53UxtkOCcXCb1YyRt8OS1b887U7ZfbFAO/CVMkH8IMBHmYJvJh8VNS/UKMG2YrPxWhu//2m+OBmgEGcYk1KCTd4b3rGS3hSMs9WYNRtHTGnXzGsYZbr8w0xNPM1IERlQCh9BIiAfq0g3GvjLeMcySsN1PCAJA/Ef5c7TaUEDu9Ka7ixzpiO2xj2YC/WXGsYye5TBeg2vZzFb8q3o/zpWwygTMD0IZRcZk0upONXbVRWPeyk+gB9lm+cZv9TSjOz23HFtz30dZGm6fKa+l3D/2gthsjgx0QGtkJAITgRNOidSOzNIb2ILCkXhAd4FJGAJ2xDx8hcFH1mt0G/FX0Kw4zd8NLQsLxdxP8c4CU6x+7Nz/OAipmsHMdMqUybDKwjuDEI/9bfU1lcKwrmz3O2+BtjjKAvpafkmO8l7tdufThcV4q5O8DIrGKZTqPwJNl1IXNDw9bg1kWRxYtnCQ6yICmJhSFm/Y3m6xv+cXDBlHz4n/FsRC6UfTd</string><string id="CAHintCertificatesDesc">TLS certificates that are not trusted or distrusted but can be used in path-building for server authentication</string><string id="CAPlatformIntegrationEnabled">Use user-added TLS certificates from platform trust stores for server authentication</string><string id="CAPlatformIntegrationEnabled_Explain">If enabled(or not set), user-added TLS certificates from platform trust stores will be used in path-building for TLS server authentication.

If disabled, user-added TLS certificates from platform trust stores will not be used in path-building for TLS server authentication.</string><string id="ContentSettings_group">Content settings</string><string id="AutoSelectCertificateForUrls">Automatically select client certificates for these sites</string><string id="AutoSelectCertificateForUrls_Explain">Setting the policy lets you make a list of URL patterns that specify sites for which Chrome can automatically select a client certificate. The value is an array of stringified JSON dictionaries, each with the form { &quot;pattern&quot;: &quot;$URL_PATTERN&quot;, &quot;filter&quot; : $FILTER }, where $URL_PATTERN is a content setting pattern. $FILTER restricts the client certificates the browser automatically selects from. Independent of the filter, only certificates that match the server's certificate request are selected.

Examples for the usage of the $FILTER section:

* When $FILTER is set to { &quot;ISSUER&quot;: { &quot;CN&quot;: &quot;$ISSUER_CN&quot; } }, only client certificates issued by a certificate with the CommonName $ISSUER_CN are selected.

* When $FILTER contains both the &quot;ISSUER&quot; and the &quot;SUBJECT&quot; sections, only client certificates that satisfy both conditions are selected.

* When $FILTER contains a &quot;SUBJECT&quot; section with the &quot;O&quot; value, a certificate needs at least one organization matching the specified value to be selected.

* When $FILTER contains a &quot;SUBJECT&quot; section with a &quot;OU&quot; value, a certificate needs at least one organizational unit matching the specified value to be selected.

* When $FILTER is set to {}, the selection of client certificates is not additionally restricted. Note that filters provided by the web server still apply.

Leaving the policy unset means there's no autoselection for any site.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=AutoSelectCertificateForUrls for more information about schema and formatting.


Example value:

{&quot;pattern&quot;:&quot;https://www.example.com&quot;,&quot;filter&quot;:{&quot;ISSUER&quot;:{&quot;CN&quot;:&quot;certificate issuer name&quot;, &quot;L&quot;: &quot;certificate issuer location&quot;, &quot;O&quot;: &quot;certificate issuer org&quot;, &quot;OU&quot;: &quot;certificate issuer org unit&quot;}, &quot;SUBJECT&quot;:{&quot;CN&quot;:&quot;certificate subject name&quot;, &quot;L&quot;: &quot;certificate subject location&quot;, &quot;O&quot;: &quot;certificate subject org&quot;, &quot;OU&quot;: &quot;certificate subject org unit&quot;}}}</string><string id="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</string><string id="AutomaticFullscreenAllowedForUrls">Allow automatic fullscreen on these sites</string><string id="AutomaticFullscreenAllowedForUrls_Explain">For security reasons, the
requestFullscreen() web API
requires a prior user gesture (&quot;transient activation&quot;) to be called or will
otherwise fail. Users' personal settings may allow certain origins to call
this API without a prior user gesture, as described in
https://chromestatus.com/feature/6218822004768768.

This policy supersedes users' personal settings and allows matching origins to
call the API without a prior user gesture.

For detailed information on valid url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.
Wildcards, *, are allowed.

Origins matching both blocked and allowed policy patterns will be blocked.
Origins not specified by policy nor user settings will require a prior user
gesture to call this API.

Example value:

https://www.example.com
[*.]example.edu</string><string id="AutomaticFullscreenAllowedForUrlsDesc">Allow automatic fullscreen on these sites</string><string id="AutomaticFullscreenBlockedForUrls">Block automatic fullscreen on these sites</string><string id="AutomaticFullscreenBlockedForUrls_Explain">For security reasons, the
requestFullscreen() web API
requires a prior user gesture (&quot;transient activation&quot;) to be called or will
otherwise fail. Users' personal settings may allow certain origins to call
this API without a prior user gesture, as described in
https://chromestatus.com/feature/6218822004768768.

This policy supersedes users' personal settings and blocks matching origins
from calling the API without a prior user gesture.

For detailed information on valid url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.
Wildcards, *, are allowed.

Origins matching both blocked and allowed policy patterns will be blocked.
Origins not specified by policy nor user settings will require a prior user
gesture to call this API.

Example value:

https://www.example.com
[*.]example.edu</string><string id="AutomaticFullscreenBlockedForUrlsDesc">Block automatic fullscreen on these sites</string><string id="ClipboardAllowedForUrls">Allow clipboard on these sites</string><string id="ClipboardAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that can use the clipboard site permission. This does not include all clipboard operations on origins matching the patterns. For instance, users will still be able to paste using keyboard shortcuts as this isn't gated by the clipboard site permission.


Leaving the policy unset means DefaultClipboardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ClipboardAllowedForUrlsDesc">Allow clipboard on these sites</string><string id="ClipboardBlockedForUrls">Block clipboard on these sites</string><string id="ClipboardBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that can't use the clipboard site permission. This does not include all clipboard operations on origins matching the patterns. For instance, users will still be able to paste using keyboard shortcuts as this isn't gated by the clipboard site permission.

Leaving the policy unset means DefaultClipboardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ClipboardBlockedForUrlsDesc">Block clipboard on these sites</string><string id="CookiesAllowedForUrls">Allow cookies on these sites</string><string id="CookiesAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to set cookies.

URL patterns may be a single URL indicating that the site may use cookies on all top-level sites.

Patterns may also be two URLs delimited by a comma. The first specifies the site that should be allowed to use cookies. The second specifies the top-level site that the first value should be applied on.

If you use a pair of URLs, the first value in the pair supports * but the second value does not. Using * for the first value indicates that all sites may use cookies when the second URL is the top-level site.

If this policy is left not set the global default value will be used for all sites either from the DefaultCookiesSetting or BlockThirdPartyCookies policies if they are set, or the user's personal configuration otherwise.

See also policies CookiesBlockedForUrls and CookiesSessionOnlyForUrls. Note that there must be no conflicting URL patterns between these three policies - it is unspecified which policy takes precedence.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu
https://www.example.com/,https://www.toplevel.com/
*,https://www.toplevel.com/</string><string id="CookiesAllowedForUrlsDesc">Allow cookies on these sites</string><string id="CookiesBlockedForUrls">Block cookies on these sites</string><string id="CookiesBlockedForUrls_Explain">Setting the policy lets you make a list of URL patterns that specify sites that can't set cookies.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies.

While no specific policy takes precedence, see CookiesAllowedForUrls and CookiesSessionOnlyForUrls. URL patterns among these 3 policies must not conflict.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="CookiesBlockedForUrlsDesc">Block cookies on these sites</string><string id="CookiesSessionOnlyForUrls">Limit cookies from matching URLs to the current session</string><string id="CookiesSessionOnlyForUrls_Explain">Unless the RestoreOnStartup policy is set to permanently restore URLs from previous sessions, then setting CookiesSessionOnlyForUrls lets you make a list of URL patterns that specify sites that can and can't set cookies for one session.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies. URLs not covered by the patterns specified also result in the use of defaults.

While no specific policy takes precedence, see CookiesBlockedForUrls and CookiesAllowedForUrls. URL patterns among these 3 policies must not conflict.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</string><string id="DataUrlInSvgUseEnabled">Data URL support for SVGUseElement.</string><string id="DataUrlInSvgUseEnabled_Explain">This policy enables Data URL support for SVGUseElement, which will be disabled
by default starting in M119.
If this policy is set to Enabled, Data URLs will continue to work in SVGUseElement.
If this policy is set to Disabled or not set, Data URLs won't work in SVGUseElement.</string><string id="DefaultClipboardSetting">Default clipboard setting</string><string id="DefaultClipboardSetting_Explain">Setting the policy to 2 blocks sites from using the clipboard site permission. Setting the policy to 3 or leaving it unset lets the user change the setting and decide if the clipboard APIs are available when a site wants to use one.

This policy can be overridden for specific URL patterns using the ClipboardAllowedForUrls and ClipboardBlockedForUrls policies.

This policy only affects clipboard operations controlled by the clipboard site permission, and does not affect sanitized clipboard writes or trusted copy and paste operations.</string><string id="DefaultClipboardSetting_BlockClipboard">Do not allow any site to use the clipboard site permission</string><string id="DefaultClipboardSetting_AskClipboard">Allow sites to ask the user to grant the clipboard site permission</string><string id="DefaultCookiesSetting">Default cookies setting</string><string id="DefaultCookiesSetting_Explain">Unless the RestoreOnStartup policy is set to permanently restore URLs from previous sessions, then setting CookiesSessionOnlyForUrls lets you make a list of URL patterns that specify sites that can and can't set cookies for one session.

Leaving the policy unset results in the use of DefaultCookiesSetting for all sites, if it's set. If not, the user's personal setting applies. URLs not covered by the patterns specified also result in the use of defaults.

While no specific policy takes precedence, see CookiesBlockedForUrls and CookiesAllowedForUrls. URL patterns among these 3 policies must not conflict.</string><string id="DefaultCookiesSetting_AllowCookies">Allow all sites to set local data</string><string id="DefaultCookiesSetting_BlockCookies">Do not allow any site to set local data</string><string id="DefaultCookiesSetting_SessionOnly">Keep cookies for the duration of the session</string><string id="DefaultFileSystemReadGuardSetting">Control use of the File System API for reading</string><string id="DefaultFileSystemReadGuardSetting_Explain">Setting the policy to 3 lets websites ask for read access to files and directories in the host operating system's file system via the File System API. Setting the policy to 2 denies access.

Leaving it unset lets websites ask for access, but users can change this setting.</string><string id="DefaultFileSystemReadGuardSetting_BlockFileSystemRead">Do not allow any site to request read access to files and directories via the File System API</string><string id="DefaultFileSystemReadGuardSetting_AskFileSystemRead">Allow sites to ask the user to grant read access to files and directories via the File System API</string><string id="DefaultFileSystemWriteGuardSetting">Control use of the File System API for writing</string><string id="DefaultFileSystemWriteGuardSetting_Explain">Setting the policy to 3 lets websites ask for write access to files and directories in the host operating system's file system. Setting the policy to 2 denies access.

Leaving it unset lets websites ask for access, but users can change this setting.</string><string id="DefaultFileSystemWriteGuardSetting_BlockFileSystemWrite">Do not allow any site to request write access to files and directories</string><string id="DefaultFileSystemWriteGuardSetting_AskFileSystemWrite">Allow sites to ask the user to grant write access to files and directories</string><string id="DefaultGeolocationSetting">Default geolocation setting</string><string id="DefaultGeolocationSetting_Explain">Setting the policy to 1 lets sites track the users' physical location as the default state. Setting the policy to 2 denies this tracking by default. You can set the policy to ask whenever a site wants to track the users' physical location.

Leaving the policy unset means the AskGeolocation policy applies, but users can change this setting.</string><string id="DefaultGeolocationSetting_AllowGeolocation">Allow sites to track the users' physical location</string><string id="DefaultGeolocationSetting_BlockGeolocation">Do not allow any site to track the users' physical location</string><string id="DefaultGeolocationSetting_AskGeolocation">Ask whenever a site wants to track the users' physical location</string><string id="DefaultImagesSetting">Default images setting</string><string id="DefaultImagesSetting_Explain">Setting the policy to 1 lets all websites display images. Setting the policy to 2 denies image display.

Leaving it unset allows images, but users can change this setting.</string><string id="DefaultImagesSetting_AllowImages">Allow all sites to show all images</string><string id="DefaultImagesSetting_BlockImages">Do not allow any site to show images</string><string id="DefaultInsecureContentSetting">Control use of insecure content exceptions</string><string id="DefaultInsecureContentSetting_Explain">Allows you to set whether users can add exceptions to allow mixed content for specific sites.

This policy can be overridden for specific URL patterns using the 'InsecureContentAllowedForUrls' and 'InsecureContentBlockedForUrls' policies.

If this policy is left not set, users will be allowed to add exceptions to allow blockable mixed content and disable autoupgrades for optionally blockable mixed content.</string><string id="DefaultInsecureContentSetting_BlockInsecureContent">Do not allow any site to load mixed content</string><string id="DefaultInsecureContentSetting_AllowExceptionsInsecureContent">Allow users to add exceptions to allow mixed content</string><string id="DefaultJavaScriptJitSetting">Control use of JavaScript JIT</string><string id="DefaultJavaScriptJitSetting_Explain">Allows you to set whether Google Chrome will run the v8 JavaScript engine with JIT (Just In Time) compiler enabled or not.

Disabling the JavaScript JIT will mean that Google Chrome may render web content more slowly, and may also disable parts of JavaScript including WebAssembly. Disabling the JavaScript JIT may allow Google Chrome to render web content in a more secure configuration.

This policy can be overridden for specific URL patterns using the JavaScriptJitAllowedForSites and JavaScriptJitBlockedForSites policies.

If this policy is left not set, JavaScript JIT is enabled.</string><string id="DefaultJavaScriptJitSetting_AllowJavaScriptJit">Allow any site to run JavaScript JIT</string><string id="DefaultJavaScriptJitSetting_BlockJavaScriptJit">Do not allow any site to run JavaScript JIT</string><string id="DefaultJavaScriptOptimizerSetting">Control use of JavaScript optimizers</string><string id="DefaultJavaScriptOptimizerSetting_Explain">Allows you to set whether Google Chrome
will run the v8 JavaScript engine with more advanced JavaScript optimizations enabled.

Disabling JavaScript optimizations (by setting this policy's value to 2) will
mean that Google Chrome may render web
content more slowly.

This policy can be overridden for specific URL patterns using the JavaScriptOptimizerAllowedForSites and JavaScriptOptimizerBlockedForSites policies.

If this policy is left not set, JavaScript optimizations are enabled.</string><string id="DefaultJavaScriptOptimizerSetting_AllowJavaScriptOptimizer">Enable advanced JavaScript optimizations on all sites</string><string id="DefaultJavaScriptOptimizerSetting_BlockJavaScriptOptimizer">Disable advanced JavaScript optimizations on all sites</string><string id="DefaultJavaScriptSetting">Default JavaScript setting</string><string id="DefaultJavaScriptSetting_Explain">Setting the policy to 1 lets websites run JavaScript. Setting the policy to 2 denies JavaScript.

Leaving it unset allows JavaScript, but users can change this setting.</string><string id="DefaultJavaScriptSetting_AllowJavaScript">Allow all sites to run JavaScript</string><string id="DefaultJavaScriptSetting_BlockJavaScript">Do not allow any site to run JavaScript</string><string id="DefaultLocalFontsSetting">Default Local Fonts permission setting</string><string id="DefaultLocalFontsSetting_Explain">Setting the policy to BlockLocalFonts (value 2) automatically denies the local fonts permission to sites by default. This will limit the ability of sites to see information about local fonts.

Setting the policy to AskLocalFonts (value 3) will prompt the user when the local fonts permission is requested by default. If users allow the permission, it will extend the ability of sites to see information about local fonts.

Leaving the policy unset means the default behavior applies which is to prompt the user, but users can change this setting</string><string id="DefaultLocalFontsSetting_BlockLocalFonts">Denies the Local Fonts permission on all sites by default</string><string id="DefaultLocalFontsSetting_AskLocalFonts">Ask every time a site wants obtain the Local Fonts permission</string><string id="DefaultNotificationsSetting">Default notification setting</string><string id="DefaultNotificationsSetting_Explain">Setting the policy to 1 lets websites display desktop notifications. Setting the policy to 2 denies desktop notifications.

Leaving it unset means AskNotifications applies, but users can change this setting.</string><string id="DefaultNotificationsSetting_AllowNotifications">Allow sites to show desktop notifications</string><string id="DefaultNotificationsSetting_BlockNotifications">Do not allow any site to show desktop notifications</string><string id="DefaultNotificationsSetting_AskNotifications">Ask every time a site wants to show desktop notifications</string><string id="DefaultPopupsSetting">Default pop-ups setting</string><string id="DefaultPopupsSetting_Explain">Setting the policy to 1 lets websites display pop-ups. Setting the policy to 2 denies pop-ups.

Leaving it unset means BlockPopups applies, but users can change this setting.</string><string id="DefaultPopupsSetting_AllowPopups">Allow all sites to show pop-ups</string><string id="DefaultPopupsSetting_BlockPopups">Do not allow any site to show pop-ups</string><string id="DefaultSensorsSetting">Default sensors setting</string><string id="DefaultSensorsSetting_Explain">Setting the policy to 1 lets websites access and use sensors such as motion and light. Setting the policy to 2 denies access to sensors.

Leaving it unset means AllowSensors applies, but users can change this setting.</string><string id="DefaultSensorsSetting_AllowSensors">Allow sites to access sensors</string><string id="DefaultSensorsSetting_BlockSensors">Do not allow any site to access sensors</string><string id="DefaultSerialGuardSetting">Control use of the Serial API</string><string id="DefaultSerialGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to serial ports. Setting the policy to 2 denies access to serial ports.

Leaving it unset lets websites ask for access, but users can change this setting.</string><string id="DefaultSerialGuardSetting_BlockSerial">Do not allow any site to request access to serial ports via the Serial API</string><string id="DefaultSerialGuardSetting_AskSerial">Allow sites to ask the user to grant access to a serial port</string><string id="DefaultThirdPartyStoragePartitioningSetting">Default third-party storage partitioning setting</string><string id="DefaultThirdPartyStoragePartitioningSetting_Explain">This policy controls whether third-party storage partitioning is allowed by default.

If this policy is set to 1 - AllowPartitioning, or unset, third-party storage partitioning will be allowed by default. This default may be overridden for specific top-level origins by other means.

If this policy is set to 2 - BlockPartitioning, third-party storage partitioning will be disabled for all contexts.

Use ThirdPartyStoragePartitioningBlockedForOrigins to disable third-party storage partitioning for specific top-level origins. For detailed information on third-party storage partitioning, please see https://developers.google.com/privacy-sandbox/cookies/storage-partitioning.</string><string id="DefaultThirdPartyStoragePartitioningSetting_AllowPartitioning">Allow third-party storage partitioning by default.</string><string id="DefaultThirdPartyStoragePartitioningSetting_BlockPartitioning">Disable third-party storage partitioning.</string><string id="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to nearby Bluetooth devices. Setting the policy to 2 denies access to nearby Bluetooth devices.

Leaving the policy unset lets sites ask for access, but users can change this setting.</string><string id="DefaultWebBluetoothGuardSetting_BlockWebBluetooth">Do not allow any site to request access to Bluetooth devices via the Web Bluetooth API</string><string id="DefaultWebBluetoothGuardSetting_AskWebBluetooth">Allow sites to ask the user to grant access to a nearby Bluetooth device</string><string id="DefaultWebHidGuardSetting">Control use of the WebHID API</string><string id="DefaultWebHidGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to HID devices. Setting the policy to 2 denies access to HID devices.

Leaving it unset lets websites ask for access, but users can change this setting.

This policy can be overridden for specific url patterns using the WebHidAskForUrls and WebHidBlockedForUrls policies.</string><string id="DefaultWebHidGuardSetting_BlockWebHid">Do not allow any site to request access to HID devices via the WebHID API</string><string id="DefaultWebHidGuardSetting_AskWebHid">Allow sites to ask the user to grant access to a HID device</string><string id="DefaultWebUsbGuardSetting">Control use of the WebUSB API</string><string id="DefaultWebUsbGuardSetting_Explain">Setting the policy to 3 lets websites ask for access to connected USB devices. Setting the policy to 2 denies access to connected USB devices.

Leaving it unset lets websites ask for access, but users can change this setting.</string><string id="DefaultWebUsbGuardSetting_BlockWebUsb">Do not allow any site to request access to USB devices via the WebUSB API</string><string id="DefaultWebUsbGuardSetting_AskWebUsb">Allow sites to ask the user to grant access to a connected USB device</string><string id="DefaultWindowManagementSetting">Default Window Management permission setting</string><string id="DefaultWindowManagementSetting_Explain">Setting the policy to BlockWindowManagement (value 2) automatically denies the window management permission to sites by default. This will limit the ability of sites to see information about the device's screens and use that information to open and place windows or request fullscreen on specific screens.

Setting the policy to AskWindowManagement (value 3) will prompt the user when the window management permission is requested by default. If users allow the permission, it will extend the ability of sites to see information about the device's screens and use that information to open and place windows or request fullscreen on specific screens.

Leaving the policy unset means the AskWindowManagement policy applies, but users can change this setting.

This replaces the deprecated DefaultWindowPlacementSetting policy.</string><string id="DefaultWindowManagementSetting_BlockWindowManagement">Denies the Window Management permission on all sites by default</string><string id="DefaultWindowManagementSetting_AskWindowManagement">Ask every time a site wants obtain the Window Management permission</string><string id="FileSystemReadAskForUrls">Allow read access via the File System API on these sites</string><string id="FileSystemReadAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them read access to files or directories in the host operating system's file system via the File System API.

Leaving the policy unset means DefaultFileSystemReadGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with FileSystemReadBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="FileSystemReadAskForUrlsDesc">Allow read access via the File System API on these sites</string><string id="FileSystemReadBlockedForUrls">Block read access via the File System API on these sites</string><string id="FileSystemReadBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them read access to files or directories in the host operating system's file system via the File System API.

Leaving the policy unset means DefaultFileSystemReadGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns can't conflict with FileSystemReadAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="FileSystemReadBlockedForUrlsDesc">Block read access via the File System API on these sites</string><string id="FileSystemWriteAskForUrls">Allow write access to files and directories on these sites</string><string id="FileSystemWriteAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them write access to files or directories in the host operating system's file system.

Leaving the policy unset means DefaultFileSystemWriteGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with FileSystemWriteBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="FileSystemWriteAskForUrlsDesc">Allow write access to files and directories on these sites</string><string id="FileSystemWriteBlockedForUrls">Block write access to files and directories on these sites</string><string id="FileSystemWriteBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them write access to files or directories in the host operating system's file system.

Leaving the policy unset means DefaultFileSystemWriteGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns can't conflict with FileSystemWriteAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="FileSystemWriteBlockedForUrlsDesc">Block write access to files and directories on these sites</string><string id="ImagesAllowedForUrls">Allow images on these sites</string><string id="ImagesAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that may display images.

Leaving the policy unset means DefaultImagesSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ImagesAllowedForUrlsDesc">Allow images on these sites</string><string id="ImagesBlockedForUrls">Block images on these sites</string><string id="ImagesBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify sites that can't display images.

Leaving the policy unset means DefaultImagesSetting applies for all sites, if it's set. If not, the user's personal setting applies.

 For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

 Note that previously this policy was erroneously enabled on Android, but this functionality has never been fully supported on Android.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ImagesBlockedForUrlsDesc">Block images on these sites</string><string id="InsecureContentAllowedForUrls">Allow insecure content on these sites</string><string id="InsecureContentAllowedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites) and for which optionally blockable mixed content upgrades will be disabled.

If this policy is left not set blockable mixed content will be blocked and optionally blockable mixed content will be upgraded, and users will be allowed to set exceptions to allow it for specific sites.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="InsecureContentAllowedForUrlsDesc">Allow insecure content on these sites</string><string id="InsecureContentBlockedForUrls">Block insecure content on these sites</string><string id="InsecureContentBlockedForUrls_Explain">Allows you to set a list of url patterns that specify sites which are not allowed to display blockable (i.e. active) mixed content (i.e. HTTP content on HTTPS sites), and for which optionally blockable (i.e. passive) mixed content will be upgraded.

If this policy is left not set blockable mixed content will be blocked and optionally blockable mixed content will be upgraded, but users will be allowed to set exceptions to allow it for specific sites.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="InsecureContentBlockedForUrlsDesc">Block insecure content on these sites</string><string id="JavaScriptAllowedForUrls">Allow JavaScript on these sites</string><string id="JavaScriptAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can run JavaScript.

Leaving the policy unset means DefaultJavaScriptSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</string><string id="JavaScriptBlockedForUrls">Block JavaScript on these sites</string><string id="JavaScriptBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't run JavaScript.

Leaving the policy unset means DefaultJavaScriptSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Note that this policy blocks JavaScript based on whether the origin of the top-level document (usually the page URL that is also displayed in the address bar) matches any of the patterns. Therefore this policy is not appropriate for mitigating web supply-chain attacks. For example, supplying the pattern &quot;https://[*.]foo.com/&quot; will not prevent a page hosted on, say, https://example.com from running a script loaded from https://www.foo.com/example.js. Furthermore, supplying the pattern &quot;https://example.com/&quot; will not prevent a document from https://example.com from running scripts if it is not the top-level document, but embedded as a sub-frame into a page hosted on another origin, say, https://www.bar.com.

Example value:

https://www.example.com
[*.]example.edu</string><string id="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</string><string id="JavaScriptJitAllowedForSites">Allow JavaScript to use JIT on these sites</string><string id="JavaScriptJitAllowedForSites_Explain">Allows you to set a list of site url patterns that specify sites which are allowed to run JavaScript with JIT (Just In Time) compiler enabled.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

JavaScript JIT policy exceptions will only be enforced at a site granularity (eTLD+1). A policy set for only subdomain.site.com will not correctly apply to site.com or subdomain.site.com since they both resolve to the same eTLD+1 (site.com) for which there is no policy. In this case, policy must be set on site.com to apply correctly for both site.com and subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level origin url alone, so e.g. if site-one.com is listed in the JavaScriptJitAllowedForSites policy but site-one.com loads a frame containing site-two.com then site-one.com will have JavaScript JIT enabled, but site-two.com will use the policy from DefaultJavaScriptJitSetting, if set, or default to JavaScript JIT enabled.

If this policy is not set for a site then the policy from DefaultJavaScriptJitSetting applies to the site, if set, otherwise Javascript JIT is enabled for the site.

Example value:

[*.]example.edu</string><string id="JavaScriptJitAllowedForSitesDesc">Allow JavaScript to use JIT on these sites</string><string id="JavaScriptJitBlockedForSites">Block JavaScript from using JIT on these sites</string><string id="JavaScriptJitBlockedForSites_Explain">Allows you to set a list of site url patterns that specify sites which are not allowed to run JavaScript JIT (Just In Time) compiler enabled.

Disabling the JavaScript JIT will mean that Google Chrome may render web content more slowly, and may also disable parts of JavaScript including WebAssembly. Disabling the JavaScript JIT may allow Google Chrome to render web content in a more secure configuration.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

JavaScript JIT policy exceptions will only be enforced at a site granularity (eTLD+1). A policy set for only subdomain.site.com will not correctly apply to site.com or subdomain.site.com since they both resolve to the same eTLD+1 (site.com) for which there is no policy. In this case, policy must be set on site.com to apply correctly for both site.com and subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level origin url alone, so e.g. if site-one.com is listed in the JavaScriptJitBlockedForSites policy but site-one.com loads a frame containing site-two.com then site-one.com will have JavaScript JIT disabled, but site-two.com will use the policy from DefaultJavaScriptJitSetting, if set, or default to JavaScript JIT enabled.

If this policy is not set for a site then the policy from DefaultJavaScriptJitSetting applies to the site, if set, otherwise JavaScript JIT is enabled for the site.

Example value:

[*.]example.edu</string><string id="JavaScriptJitBlockedForSitesDesc">Block JavaScript from using JIT on these sites</string><string id="JavaScriptOptimizerAllowedForSites">Allow JavaScript optimization on these sites</string><string id="JavaScriptOptimizerAllowedForSites_Explain">Allows you to set a list of site url patterns that specify sites for which
advanced JavaScript optimizations are enabled.

For detailed information on valid site url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.
Wildcards, *, are allowed.

JavaScript optimization policy exceptions will only be enforced at a site
granularity (eTLD+1). A policy set for only subdomain.site.com will not
correctly apply to site.com or subdomain.site.com since they both resolve to
the same eTLD+1 (site.com) for which there is no policy. In this case, policy
must be set on site.com to apply correctly for both site.com and
subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level
origin url alone, so e.g. if site-one.com is listed in the JavaScriptOptimizerAllowedForSites policy but site-one.com loads a frame   containing site-two.com then site-one.com will have JavaScript optimizations
enabled, but site-two.com will use the policy from DefaultJavaScriptOptimizerSetting, if set, or default to JavaScript
optimizations enabled. Blocklist entries have higher priority than allowlist
entries, which in turn have higher priority than the configured default value.

If this policy is not set for a site then the policy from DefaultJavaScriptOptimizerSetting applies to the site, if set, otherwise
Javascript optimization is enabled for the site.

Example value:

[*.]example.edu</string><string id="JavaScriptOptimizerAllowedForSitesDesc">Allow JavaScript optimization on these sites</string><string id="JavaScriptOptimizerBlockedForSites">Block JavaScript optimizations on these sites</string><string id="JavaScriptOptimizerBlockedForSites_Explain">Allows you to set a list of site url patterns that specify sites for which
advanced JavaScript optimizations are disabled.

Disabling JavaScript optimizations will mean that Google Chrome may render web content more slowly.

For detailed information on valid url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.
Wildcards, *, are allowed.

JavaScript optimization policy exceptions will only be enforced at a site
granularity (eTLD+1). A policy set for only subdomain.site.com will not
correctly apply to site.com or subdomain.site.com since they both resolve to
the same eTLD+1 (site.com) for which there is no policy. In this case, policy
must be set on site.com to apply correctly for both site.com and
subdomain.site.com.

This policy applies on a frame-by-frame basis and not based on top level
origin url alone, so e.g. if site-one.com is listed in the JavaScriptOptimizerBlockedForSites policy but site-one.com loads a frame
containing site-two.com then site-one.com will have JavaScript optimizations
disabled, but site-two.com will use the policy from DefaultJavaScriptOptimizerSetting, if set, or default to JavaScript
optimizations enabled. Blocklist entries have higher priority than allowlist
entries, which in turn have higher priority than the configured default value.

If this policy is not set for a site then the policy from DefaultJavaScriptOptimizerSetting applies to the site, if set, otherwise
JavaScript optimization is enabled for the site.

Example value:

[*.]example.edu</string><string id="JavaScriptOptimizerBlockedForSitesDesc">Block JavaScript optimizations on these sites</string><string id="LocalFontsAllowedForUrls">Allow Local Fonts permission on these sites</string><string id="LocalFontsAllowedForUrls_Explain">Sets a list of site url patterns that specify sites which will automatically grant the local fonts permission. This will extend the ability of sites to see information about local fonts.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed. This policy only matches based on origin, so any path in the URL pattern is ignored.

If this policy is not set for a site then the policy from DefaultLocalFontsSetting applies to the site, if set, otherwise the permission will follow the browser's defaults and allow users to choose this permission per site.

Example value:

https://www.example.com
[*.]example.edu</string><string id="LocalFontsAllowedForUrlsDesc">Allow Local Fonts permission on these sites</string><string id="LocalFontsBlockedForUrls">Block Local Fonts permission on these sites</string><string id="LocalFontsBlockedForUrls_Explain">Sets a list of site url patterns that specify sites which will automatically deny the local fonts permission. This will limit the ability of sites to see information about local fonts.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed. This policy only matches based on origin, so any path in the URL pattern is ignored.

If this policy is not set for a site then the policy from DefaultLocalFontsSetting applies to the site, if set, otherwise the permission will follow the browser's defaults and allow users to choose this permission per site.

Example value:

https://www.example.com
[*.]example.edu</string><string id="LocalFontsBlockedForUrlsDesc">Block Local Fonts permission on these sites</string><string id="NotificationsAllowedForUrls">Allow notifications on these sites</string><string id="NotificationsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can display notifications.

Leaving the policy unset means DefaultNotificationsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</string><string id="NotificationsBlockedForUrls">Block notifications on these sites</string><string id="NotificationsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't display notifications.

Leaving the policy unset means DefaultNotificationsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="NotificationsBlockedForUrlsDesc">Block notifications on these sites</string><string id="PartitionedBlobUrlUsage">Choose whether Blob URLs are partitioned during fetching and navigations</string><string id="PartitionedBlobUrlUsage_Explain">This policy controls whether Blob URLs are partitioned during fetching and navigation.
If this policy is set to Enabled or not set, Blob URLs will be partitioned.
If this policy is set to Disabled, Blob URLs won't be partitioned.

If storage partitioning is disabled for a given top-level origin by either
ThirdPartyStoragePartitioningBlockedForOrigins
or DefaultThirdPartyStoragePartitioningSetting,
then Blob URLs will also not be partitioned.

If you must use the policy, please file a bug on crbug.com explaining your
use case and CC {janiceliu, awillia}@chromium.org. The policy is scheduled to
be offered through Google Chrome
version 140, after which the old implementation will be removed.

NOTE: Only newly-started renderer processes will reflect changes to this
policy while the browser is running.

For detailed information on third-party storage partitioning, please see https://developers.google.com/privacy-sandbox/cookies/storage-partitioning.</string><string id="PdfLocalFileAccessAllowedForDomains">Allow local file access to file:// URLs on these sites in the PDF Viewer</string><string id="PdfLocalFileAccessAllowedForDomains_Explain">Setting this policy allows the domains listed to access file:// URLs in the PDF Viewer.
Adding to the policy allows the domain to access file:// URLs in the PDF Viewer.
Removing from the policy disallows the domain from accessing file:// URLs in the PDF Viewer.
Leaving the policy unset disallows all domains from accessing file:// URLs in the PDF Viewer.

Example value:

example.com
google.com</string><string id="PdfLocalFileAccessAllowedForDomainsDesc">Allow local file access to file:// URLs on these sites in the PDF Viewer</string><string id="PopupsAllowedForUrls">Allow pop-ups on these sites</string><string id="PopupsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can open pop-ups.

Leaving the policy unset means DefaultPopupsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PopupsAllowedForUrlsDesc">Allow pop-ups on these sites</string><string id="PopupsBlockedForUrls">Block pop-ups on these sites</string><string id="PopupsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't open pop-ups.

Leaving the policy unset means DefaultPopupsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="PopupsBlockedForUrlsDesc">Block pop-ups on these sites</string><string id="RegisteredProtocolHandlers">Register protocol handlers</string><string id="RegisteredProtocolHandlers_Explain">Setting the policy (as recommended only) lets you register a list of protocol handlers, which merge with the ones that the user registers, putting both sets in use. Set the property &quot;protocol&quot; to the scheme, such as &quot;mailto&quot;, and set the property &quot;URL&quot; to the URL pattern of the application that handles the scheme specified in the &quot;protocol&quot; field. The pattern can include a &quot;%s&quot; placeholder, which the handled URL replaces.

Users can't remove a protocol handler registered by policy. However, by installing a new default handler, they can change the protocol handlers installed by policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=RegisteredProtocolHandlers for more information about schema and formatting.


Example value:

[
  {
    &quot;default&quot;: true,
    &quot;protocol&quot;: &quot;mailto&quot;,
    &quot;url&quot;: &quot;https://mail.google.com/mail/?extsrc=mailto&amp;url=%s&quot;
  }
]</string><string id="SensorsAllowedForUrls">Allow access to sensors on these sites</string><string id="SensorsAllowedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can access sensors like motion and light sensors.

Leaving the policy unset means DefaultSensorsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

If the same URL pattern exists in both this policy and the SensorsBlockedForUrls policy, the latter is prioritized and access to motion or light sensors will be blocked.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SensorsAllowedForUrlsDesc">Allow access to sensors on these sites</string><string id="SensorsBlockedForUrls">Block access to sensors on these sites</string><string id="SensorsBlockedForUrls_Explain">Setting the policy lets you set a list of URL patterns that specify the sites that can't access sensors like motion and light sensors.

Leaving the policy unset means DefaultSensorsSetting applies for all sites, if it's set. If not, the user's personal setting applies.

If the same URL pattern exists in both this policy and the SensorsAllowedForUrls policy, this policy is prioritized and access to motion or light sensors will be blocked.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SensorsBlockedForUrlsDesc">Block access to sensors on these sites</string><string id="SerialAllowAllPortsForUrls">Automatically grant permission to sites to connect all serial ports.</string><string id="SerialAllowAllPortsForUrls_Explain">Setting the policy allows you to list sites which are automatically granted permission to access all available serial ports.

The URLs must be valid, otherwise the policy is ignored. Only the origin (scheme, host and port) of the URL is considered.

On Google ChromeOS, this policy only applies to affiliated users.

This policy overrides DefaultSerialGuardSetting, SerialAskForUrls, SerialBlockedForUrls and the user's preferences.

Example value:

https://www.example.com</string><string id="SerialAllowAllPortsForUrlsDesc">Automatically grant permission to sites to connect all serial ports.</string><string id="SerialAllowUsbDevicesForUrls">Automatically grant permission to sites to connect to USB serial devices.</string><string id="SerialAllowUsbDevicesForUrls_Explain">Setting the policy allows you to list sites which are automatically granted permission to access USB serial devices with vendor and product IDs matching the vendor_id and product_id fields. Omitting the product_id field allows the given sites permission to access devices with a vendor ID matching the vendor_id field and any product ID.

The URLs must be valid, otherwise the policy is ignored. Only the origin (scheme, host and port) of the URL is considered.

On ChromeOS, this policy only applies to affiliated users.

This policy overrides DefaultSerialGuardSetting, SerialAskForUrls, SerialBlockedForUrls and the user's preferences.

This policy only affects access to USB devices through the Web Serial API. To grant access to USB devices through the WebUSB API see the WebUsbAllowDevicesForUrls policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=SerialAllowUsbDevicesForUrls for more information about schema and formatting.


Example value:

[
  {
    &quot;devices&quot;: [
      {
        &quot;product_id&quot;: 5678,
        &quot;vendor_id&quot;: 1234
      }
    ],
    &quot;urls&quot;: [
      &quot;https://specific-device.example.com&quot;
    ]
  },
  {
    &quot;devices&quot;: [
      {
        &quot;vendor_id&quot;: 1234
      }
    ],
    &quot;urls&quot;: [
      &quot;https://all-vendor-devices.example.com&quot;
    ]
  }
]</string><string id="SerialAskForUrls">Allow the Serial API on these sites</string><string id="SerialAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them access to a serial port.

Leaving the policy unset means DefaultSerialGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

For URL patterns which do not match the policy SerialBlockedForUrls (if there is a match), DefaultSerialGuardSetting (if set), or the users' personal settings take precedence, in that order.

If URL patterns conflict with SerialBlockedForUrls they will be ignored.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SerialAskForUrlsDesc">Allow the Serial API on these sites</string><string id="SerialBlockedForUrls">Block the Serial API on these sites</string><string id="SerialBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them access to a serial port.

Leaving the policy unset means DefaultSerialGuardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

For URL patterns which do not match the policy SerialAskForUrls (if there is a match), DefaultSerialGuardSetting (if set), or the users' personal settings take precedence, in that order.

If URL patterns conflict with SerialAskForUrls this policy will take precedence.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SerialBlockedForUrlsDesc">Block the Serial API on these sites</string><string id="ThirdPartyStoragePartitioningBlockedForOrigins">Disable third-party storage partitioning for specific top-level origins</string><string id="ThirdPartyStoragePartitioningBlockedForOrigins_Explain">This policy allows you to set a list of URL patterns that specify top-level origins for which third-party storage partitioning (partitioning of cross-origin iframe storage) should be disabled.

If this policy is left unset or if a top-level origin doesn't match one of the URL patterns, DefaultThirdPartyStoragePartitioningSetting will apply.

For detailed information on valid patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Note that patterns you list here are treated as origins, not URLs, so you should not specify a path.

For detailed information on third-party storage partitioning, please see https://developers.google.com/privacy-sandbox/cookies/storage-partitioning.

Example value:

www.example.com
[*.]example.edu</string><string id="ThirdPartyStoragePartitioningBlockedForOriginsDesc">Disable third-party storage partitioning for specific top-level origins</string><string id="WebHidAllowAllDevicesForUrls">Automatically grant permission to sites to connect to any HID device.</string><string id="WebHidAllowAllDevicesForUrls_Explain">Setting the policy allows you to list sites which are automatically granted permission to access all available devices.

The URLs must be valid, otherwise the policy is ignored. Only the origin (scheme, host and port) of the URL is considered.

On ChromeOS, this policy only applies to affiliated users.

This policy overrides DefaultWebHidGuardSetting, WebHidAskForUrls, WebHidBlockedForUrls and the user's preferences.

Example value:

https://google.com
https://chromium.org</string><string id="WebHidAllowAllDevicesForUrlsDesc">Automatically grant permission to sites to connect to any HID device.</string><string id="WebHidAllowDevicesForUrls">Automatically grant permission to these sites to connect to HID devices with the given vendor and product IDs.</string><string id="WebHidAllowDevicesForUrls_Explain">Setting the policy lets you list the URLs that specify which sites are automatically granted permission to access a HID device with the given vendor and product IDs. Each item in the list requires both devices and urls fields for the item to be valid, otherwise the item is ignored. Each item in the devices field must have a vendor_id and may have a product_id field. Omitting the product_id field will create a policy matching any device with the specified vendor ID. An item which has a product_id field without a vendor_id field is invalid and is ignored.

Leaving the policy unset means DefaultWebHidGuardSetting applies, if it's set. If not, the user's personal setting applies.

URLs in this policy shouldn't conflict with those configured through WebHidBlockedForUrls. If they do, this policy takes precedence over WebHidBlockedForUrls.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebHidAllowDevicesForUrls for more information about schema and formatting.


Example value:

[
  {
    &quot;devices&quot;: [
      {
        &quot;product_id&quot;: 5678,
        &quot;vendor_id&quot;: 1234
      }
    ],
    &quot;urls&quot;: [
      &quot;https://google.com&quot;,
      &quot;https://chromium.org&quot;
    ]
  }
]</string><string id="WebHidAllowDevicesWithHidUsagesForUrls">Automatically grant permission to these sites to connect to HID devices containing top-level collections with the given HID usage.</string><string id="WebHidAllowDevicesWithHidUsagesForUrls_Explain">Setting the policy lets you list the URLs that specify which sites are automatically granted permission to access a HID device containing a top-level collection with the given HID usage. Each item in the list requires both usages and urls fields for the policy to be valid. Each item in the usages field must have a usage_page and may have a usage field. Omitting the usage field will create a policy matching any device containing a top-level collection with a usage from the specified usage page. An item which has a usage field without a usage_page field is invalid and is ignored.

Leaving the policy unset means DefaultWebHidGuardSetting applies, if it's set. If not, the user's personal setting applies.

URLs in this policy shouldn't conflict with those configured through WebHidBlockedForUrls. If they do, this policy takes precedence over WebHidBlockedForUrls.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebHidAllowDevicesWithHidUsagesForUrls for more information about schema and formatting.


Example value:

[
  {
    &quot;urls&quot;: [
      &quot;https://google.com&quot;,
      &quot;https://chromium.org&quot;
    ],
    &quot;usages&quot;: [
      {
        &quot;usage&quot;: 5678,
        &quot;usage_page&quot;: 1234
      }
    ]
  }
]</string><string id="WebHidAskForUrls">Allow the WebHID API on these sites</string><string id="WebHidAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them access to a HID device.

Leaving the policy unset means DefaultWebHidGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

For URL patterns which do not match the policy, the following take precedence, in this order:

  * WebHidBlockedForUrls (if there is a match),

  * DefaultWebHidGuardSetting (if set), or

  * Users' personal settings.

URL patterns must not conflict with WebHidBlockedForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://google.com
https://chromium.org</string><string id="WebHidAskForUrlsDesc">Allow the WebHID API on these sites</string><string id="WebHidBlockedForUrls">Block the WebHID API on these sites</string><string id="WebHidBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them access to a HID device.

Leaving the policy unset means DefaultWebHidGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

For URL patterns which do not match the policy, the following take precedence, in this order:

  * WebHidAskForUrls (if there is a match),

  * DefaultWebHidGuardSetting (if set), or

  * Users' personal settings.

URL patterns can't conflict with WebHidAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://google.com
https://chromium.org</string><string id="WebHidBlockedForUrlsDesc">Block the WebHID API on these sites</string><string id="WebUsbAllowDevicesForUrls">Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</string><string id="WebUsbAllowDevicesForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites are automatically granted permission to access a USB device with the given vendor and product IDs. Each item in the list requires both devices and urls fields for the policy to be valid. Each item in the devices field can have a vendor_id and product_id field. Omitting the vendor_id field will create a policy matching any device. Omitting the product_id field will create a policy matching any device with the given vendor ID. A policy which has a product_id field without a vendor_id field is invalid.

The USB permission model will grant the specified URL permission to access the USB device as a top-level origin. If embedded frames need to access USB devices, the 'usb' feature-policy header should be used to grant access. The URL must be valid, otherwise the policy is ignored.

Deprecated: The USB permission model used to support specifying both the requesting and embedding URLs. This is deprecated and only supported for backwards compatibility in this manner: if both a requesting and embedding URL is specified, then the embedding URL will be granted the permission as top-level origin and the requesting URL will be ignored entirely.

This policy overrides DefaultWebUsbGuardSetting, WebUsbAskForUrls, WebUsbBlockedForUrls and the user's preferences.

This policy only affects access to USB devices through the WebUSB API. To grant access to USB devices through the Web Serial API see the SerialAllowUsbDevicesForUrls policy.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebUsbAllowDevicesForUrls for more information about schema and formatting.


Example value:

[
  {
    &quot;devices&quot;: [
      {
        &quot;product_id&quot;: 5678,
        &quot;vendor_id&quot;: 1234
      }
    ],
    &quot;urls&quot;: [
      &quot;https://google.com&quot;
    ]
  }
]</string><string id="WebUsbAskForUrls">Allow WebUSB on these sites</string><string id="WebUsbAskForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can ask users to grant them access to a USB device.

Leaving the policy unset means DefaultWebUsbGuardSetting applies for all sites, if it's set. If not, users' personal settings apply.

URL patterns must not conflict with WebUsbAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</string><string id="WebUsbBlockedForUrls">Block WebUSB on these sites</string><string id="WebUsbBlockedForUrls_Explain">Setting the policy lets you list the URL patterns that specify which sites can't ask users to grant them access to a USB device.

Leaving the policy unset means DefaultWebUsbGuardSetting applies for all sites, if it's set. If not, the user's personal setting applies.

URL patterns can't conflict with WebUsbAskForUrls. Neither policy takes precedence if a URL matches with both.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</string><string id="WindowManagementAllowedForUrls">Allow Window Management permission on these sites</string><string id="WindowManagementAllowedForUrls_Explain">Allows you to set a list of site url patterns that specify sites which will automatically grant the window management permission. This will extend the ability of sites to see information about the device's screens and use that information to open and place windows or request fullscreen on specific screens.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed. This policy only matches based on origin, so any path in the URL pattern is ignored.

If this policy is not set for a site then the policy from DefaultWindowManagementSetting applies to the site, if set, otherwise the permission will follow the browser's defaults and allow users to choose this permission per site.

This replaces the deprecated WindowPlacementAllowedForUrls policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WindowManagementAllowedForUrlsDesc">Allow Window Management permission on these sites</string><string id="WindowManagementBlockedForUrls">Block Window Management permission on these sites</string><string id="WindowManagementBlockedForUrls_Explain">Allows you to set a list of site url patterns that specify sites which will automatically deny the window management permission. This will limit the ability of sites to see information about the device's screens and use that information to open and place windows or request fullscreen on specific screens.

For detailed information on valid site url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed. This policy only matches based on origin, so any path in the URL pattern is ignored.

If this policy is not set for a site then the policy from DefaultWindowManagementSetting applies to the site, if set, otherwise the permission will follow the browser's defaults and allow users to choose this permission per site.

This replaces the deprecated WindowPlacementBlockedForUrls policy.

Example value:

https://www.example.com
[*.]example.edu</string><string id="WindowManagementBlockedForUrlsDesc">Block Window Management permission on these sites</string><string id="DefaultSearchProvider_group">Default search provider</string><string id="DefaultSearchProviderAlternateURLs">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderAlternateURLs_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderAlternateURLs specifies a list of alternate URLs for extracting search terms from the search engine. The URLs should include the string '{searchTerms}'.

Leaving DefaultSearchProviderAlternateURLs unset means no alternate URLs are used to extract search terms.

Example value:

https://search.my.company/suggest#q={searchTerms}
https://search.my.company/suggest/search#q={searchTerms}</string><string id="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</string><string id="DefaultSearchProviderEnabled">Enable the default search provider</string><string id="DefaultSearchProviderEnabled_Explain">Setting the policy to Enabled means a default search is performed when a user enters non-URL text in the address bar. To specify the default search provider, set the rest of the default search policies. If you leave those policies empty, the user can choose the default provider. Setting the policy to Disabled means there's no search when the user enters non-URL text in the address bar. The Disabled value is not supported by the Google Admin console.

If you set the policy, users can't change it in Google Chrome. If not set, the default search provider is on, and users can set the search provider list.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.</string><string id="DefaultSearchProviderEncodings">Default search provider encodings</string><string id="DefaultSearchProviderEncodings_Explain">If DefaultSearchProviderEnabled is on, setting DefaultSearchProviderEncodings specifies the character encodings supported by the search provider. Encodings are code page names such as UTF-8, GB2312, and ISO-8859-1. They're tried in the order provided.

Leaving DefaultSearchProviderEncodings unset puts UTF-8 in use.

Example value:

UTF-8
UTF-16
GB2312
ISO-8859-1</string><string id="DefaultSearchProviderEncodingsDesc">Default search provider encodings</string><string id="DefaultSearchProviderImageURL">Parameter providing search-by-image feature for the default search provider</string><string id="DefaultSearchProviderImageURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderImageURL specifies the URL of the search engine used for image search. (If DefaultSearchProviderImageURLPostParams is set, then image search requests use the POST method instead.)

Leaving DefaultSearchProviderImageURL unset means no image search is used.

If image search uses the GET method, then the URL must specify image
parameters using a valid combination of the following placeholders:
'{google:imageURL}',
'{google:imageOriginalHeight}',
'{google:imageOriginalWidth}',
'{google:processedImageDimensions}',
'{google:imageSearchSource}',
'{google:imageThumbnail}',
'{google:imageThumbnailBase64}'.

Example value: https://search.my.company/searchbyimage/upload</string><string id="DefaultSearchProviderImageURLPostParams">Parameters for image URL which uses POST</string><string id="DefaultSearchProviderImageURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderImageURLPostParams specifies the parameters during image search with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as {imageThumbnail}, real image thumbnail data replaces it.

Leaving DefaultSearchProviderImageURLPostParams unset means image search request is sent using the GET method.

The URL must specify the image parameter using a valid combination of
the following placeholders depending on what the search provider supports:
'{google:imageURL}',
'{google:imageOriginalHeight}',
'{google:imageOriginalWidth}',
'{google:processedImageDimensions}',
'{google:imageSearchSource}',
'{google:imageThumbnail}',
'{google:imageThumbnailBase64}'.

Example value: content={google:imageThumbnail},url={google:imageURL},sbisrc={google:imageSearchSource}</string><string id="DefaultSearchProviderKeyword">Default search provider keyword</string><string id="DefaultSearchProviderKeyword_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderKeyword specifies the keyword or shortcut used in the address bar to trigger the search for this provider.

Leaving DefaultSearchProviderKeyword unset means no keyword activates the search provider.

Example value: mis</string><string id="DefaultSearchProviderName">Default search provider name</string><string id="DefaultSearchProviderName_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderName specifies the default search provider's name.

Leaving DefaultSearchProviderName unset means the hostname specified by the search URL is used.

Example value: My Intranet Search</string><string id="DefaultSearchProviderNewTabURL">Default search provider new tab page URL</string><string id="DefaultSearchProviderNewTabURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderNewTabURL specifies the URL of the search engine used to provide a New Tab page.

Leaving DefaultSearchProviderNewTabURL unset means no new tab page is provided.

Example value: https://search.my.company/newtab</string><string id="DefaultSearchProviderSearchURL">Default search provider search URL</string><string id="DefaultSearchProviderSearchURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSearchURL specifies the URL of the search engine used during a default search. The URL should include the string '{searchTerms}', replaced in the query by the user's search terms.

You can specify Google's search URL as: '{google:baseURL}search?q={searchTerms}&amp;{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:searchClient}{google:sourceId}ie={inputEncoding}'.

Example value: https://search.my.company/search?q={searchTerms}</string><string id="DefaultSearchProviderSearchURLPostParams">Parameters for search URL which uses POST</string><string id="DefaultSearchProviderSearchURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSearchURLPostParams specifies the parameters when searching a URL with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as '{searchTerms}', real search terms data replaces it.

Leaving DefaultSearchProviderSearchURLPostParams unset means search requests are sent using the GET method.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string><string id="DefaultSearchProviderSuggestURL">Default search provider suggest URL</string><string id="DefaultSearchProviderSuggestURL_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSuggestURL specifies the URL of the search engine to provide search suggestions. The URL should include the string '{searchTerms}', replaced in the query by the user's search terms.

You can specify Google's search URL as: '{google:baseURL}complete/search?output=chrome&amp;q={searchTerms}'.

Example value: https://search.my.company/suggest?q={searchTerms}</string><string id="DefaultSearchProviderSuggestURLPostParams">Parameters for suggest URL which uses POST</string><string id="DefaultSearchProviderSuggestURLPostParams_Explain">If DefaultSearchProviderEnabled is on, then setting DefaultSearchProviderSuggestURLPostParams specifies the parameters during suggestion search with POST. It consists of comma-separated, name-value pairs. If a value is a template parameter, such as '{searchTerms}', real search terms data replaces it.

Leaving DefaultSearchProviderSuggestURLPostParams unset unset means suggest search requests are sent using the GET method.

Example value: q={searchTerms},ie=utf-8,oe=utf-8</string><string id="DeprecatedPolicies_group">Deprecated policies</string><string id="DefaultMediaStreamSetting">Default mediastream setting</string><string id="DefaultMediaStreamSetting_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultMediaStreamSetting_BlockAccess">Do not allow any site to access the camera and microphone</string><string id="DefaultMediaStreamSetting_PromptOnAccess">Ask every time a site wants to access the camera and/or microphone</string><string id="DefaultWindowPlacementSetting">Default Window Placement permission setting</string><string id="DefaultWindowPlacementSetting_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultWindowPlacementSetting_BlockWindowPlacement">Denies the Window Placement permission on all sites by default</string><string id="DefaultWindowPlacementSetting_AskWindowPlacement">Ask every time a site wants obtain the Window Placement permission</string><string id="WindowPlacementAllowedForUrls">Allow Window Placement permission on these sites</string><string id="WindowPlacementAllowedForUrls_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

https://www.example.com
[*.]example.edu</string><string id="WindowPlacementAllowedForUrlsDesc">Allow Window Placement permission on these sites</string><string id="WindowPlacementBlockedForUrls">Block Window Placement permission on these sites</string><string id="WindowPlacementBlockedForUrls_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

https://www.example.com
[*.]example.edu</string><string id="WindowPlacementBlockedForUrlsDesc">Block Window Placement permission on these sites</string><string id="TabOrganizerSettings">Settings for Tab Organizer</string><string id="TabOrganizerSettings_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="TabOrganizerSettings_Allowed">Allow Tab Organizer and improve AI models.</string><string id="TabOrganizerSettings_AllowedWithoutLogging">Allow Tab Organizer without improving AI models.</string><string id="TabOrganizerSettings_Disabled">Do not allow Tab Organizer.</string><string id="AutoFillEnabled">Enable AutoFill</string><string id="AutoFillEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DeveloperToolsDisabled">Disable Developer Tools</string><string id="DeveloperToolsDisabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledSchemes">Disable URL protocol schemes</string><string id="DisabledSchemes_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

file
https</string><string id="DisabledSchemesDesc">Disable URL protocol schemes</string><string id="ForceBrowserSignin">Enable force sign in for Google Chrome</string><string id="ForceBrowserSignin_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceSafeSearch">Force SafeSearch</string><string id="ForceSafeSearch_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceYouTubeSafetyMode">Force YouTube Safety Mode</string><string id="ForceYouTubeSafetyMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="IncognitoEnabled">Enable Incognito mode</string><string id="IncognitoEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="InsecureFormsWarningsEnabled">Enable warnings for insecure forms</string><string id="InsecureFormsWarningsEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="JavascriptEnabled">Enable JavaScript</string><string id="JavascriptEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="MutationEventsEnabled">Re-enable deprecated/removed Mutation Events</string><string id="MutationEventsEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PromotionalTabsEnabled">Enable showing full-tab promotional content</string><string id="PromotionalTabsEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RendererCodeIntegrityEnabled">Enable Renderer Code Integrity</string><string id="RendererCodeIntegrityEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SigninAllowed">Allow sign in to Google Chrome</string><string id="SigninAllowed_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UnsafelyTreatInsecureOriginAsSecure">Origins or hostname patterns for which restrictions on insecure origins should not apply</string><string id="UnsafelyTreatInsecureOriginAsSecure_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value:

http://testserver.example.com/
*.example.org</string><string id="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on insecure origins should not apply</string><string id="ProxyBypassList">Proxy bypass rules</string><string id="ProxyBypassList_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://www.example1.com,https://www.example2.com,https://internalsite/</string><string id="ProxyMode">Choose how to specify proxy server settings</string><string id="ProxyMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: direct</string><string id="ProxyMode_ProxyDisabled">Never use a proxy</string><string id="ProxyMode_ProxyAutoDetect">Auto detect proxy settings</string><string id="ProxyMode_ProxyPacScript">Use a .pac proxy script</string><string id="ProxyMode_ProxyFixedServers">Use fixed proxy servers</string><string id="ProxyMode_ProxyUseSystem">Use system proxy settings</string><string id="ProxyPacUrl">URL to a proxy .pac file</string><string id="ProxyPacUrl_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: https://internal.site/example.pac</string><string id="ProxyServer">Address or URL of proxy server</string><string id="ProxyServer_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: 123.123.123.123:8080</string><string id="ProxyServerMode">Choose how to specify proxy server settings</string><string id="ProxyServerMode_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ProxyServerMode_ProxyServerDisabled">Never use a proxy</string><string id="ProxyServerMode_ProxyServerAutoDetect">Auto detect proxy settings</string><string id="ProxyServerMode_ProxyServerManual">Manually specify proxy settings</string><string id="ProxyServerMode_ProxyServerUseSystem">Use system proxy settings</string><string id="RemoteAccessHostClientDomain">Configure the required domain name for remote access clients</string><string id="RemoteAccessHostClientDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string><string id="RemoteAccessHostDomain">Configure the required domain name for remote access hosts</string><string id="RemoteAccessHostDomain_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500

Example value: my-awesome-domain.com</string><string id="SafeBrowsingEnabled">Enable Safe Browsing</string><string id="SafeBrowsingEnabled_Explain">This policy is deprecated. Its usage is discouraged. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="Extensions_group">Extensions</string><string id="BlockExternalExtensions">Blocks external extensions from being installed</string><string id="BlockExternalExtensions_Explain">Controls external extensions installation.

Setting this policy to Enabled blocks external extensions from being installed.

Setting this policy to Disabled or leaving it unset allows external extensions to be installed.

External extensions and their installation are documented at https://developer.chrome.com/docs/extensions/how-to/distribute/install-extensions.</string><string id="ExtensionAllowedTypes">Configure allowed app/extension types</string><string id="ExtensionAllowedTypes_Explain">Setting the policy controls which apps and extensions may be installed in Google Chrome, which hosts they can interact with, and limits runtime access.

Leaving the policy unset results in no restrictions on the acceptable extension and app types.

Extensions and apps which have a type that's not on the list won't be installed. Each value should be one of these strings:

* &quot;extension&quot;

* &quot;theme&quot;

* &quot;user_script&quot;

* &quot;hosted_app&quot;

* &quot;legacy_packaged_app&quot;

* &quot;platform_app&quot;

See the Google Chrome extensions documentation for more information on these types.

Versions earlier than 75 that use multiple comma separated extension IDs aren't supported and are skipped. The rest of the policy applies.

Note: This policy also affects extensions and apps to be force-installed using ExtensionInstallForcelist.

Example value:

hosted_app</string><string id="ExtensionAllowedTypesDesc">Configure allowed app/extension types</string><string id="ExtensionDeveloperModeSettings">Control the availability of developer mode on extensions page</string><string id="ExtensionDeveloperModeSettings_Explain">Control if users can turn on Developer Mode on chrome://extensions.

If the policy is not set, users can turn on developer mode on extension page unless DeveloperToolsAvailability policy is set to DeveloperToolsDisallowed (2).
If the policy is set to Allow (0), users can turn on developer mode on extensions page.
If the policy is set to Disallow (1), users can not turn on developer mode on extensions page.

If this policy is set, DeveloperToolsAvailability can no longer control extensions developer mode.</string><string id="ExtensionDeveloperModeSettings_Allow">Allow the usage of developer mode on extensions page</string><string id="ExtensionDeveloperModeSettings_Disallow">Do not allow the usage of developer mode on extensions page</string><string id="ExtensionExtendedBackgroundLifetimeForPortConnectionsToUrls">Configure a list of origins that grant extended background lifetime to the connecting extensions.</string><string id="ExtensionExtendedBackgroundLifetimeForPortConnectionsToUrls_Explain">Extensions that connect to one of these origins will be be kept running as long as the port is connected.

If unset, the policy's default values will be used. These are app origins that offer SDKs that are known to not offer the possibility to restart a closed connection to a previous state:
- Smart Card Connector
- Citrix Receiver (stable, beta, back-up)
- VMware Horizon (stable, beta)

If set, the default value list is extended with the newly configured values. Both defaults and the policy-provided entries will grant the exception to the connecting extensions, as long as the port is connected.

Example value:

chrome-extension://abcdefghijklmnopabcdefghijklmnop/
chrome-extension://bcdefghijklmnopabcdefghijklmnopa/</string><string id="ExtensionExtendedBackgroundLifetimeForPortConnectionsToUrlsDesc">Configure a list of origins that grant extended background lifetime to the connecting extensions.</string><string id="ExtensionInstallAllowlist">Configure extension installation allow list</string><string id="ExtensionInstallAllowlist_Explain">Setting the policy specifies which extensions are not subject to the blocklist.

A blocklist value of * means all extensions are blocked and users can only install extensions listed in the allow list.

By default, all extensions are allowed. But, if you prohibited extensions by policy, use the list of allowed extensions to change that policy.

Example value:

extension_id1
extension_id2</string><string id="ExtensionInstallAllowlistDesc">Configure extension installation allow list</string><string id="ExtensionInstallBlocklist">Configure extension installation blocklist</string><string id="ExtensionInstallBlocklist_Explain">Allows you to specify which extensions the users can NOT install. Extensions already installed will be disabled if blocked, without a way for the user to enable them. Once an extension disabled due to the blocklist is removed from it, it will automatically get re-enabled.

A blocklist value of '*' means all extensions are blocked unless they are explicitly listed in the allowlist.

If this policy is left not set the user can install any extension in Google Chrome.

Example value:

extension_id1
extension_id2</string><string id="ExtensionInstallBlocklistDesc">Configure extension installation blocklist</string><string id="ExtensionInstallForcelist">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallForcelist_Explain">Setting the policy specifies a list of apps and extensions that install silently, without user interaction, and which users can't uninstall or turn off through the Google Chrome interface. Permissions are granted implicitly, including for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These 2 APIs aren't available to apps and extensions that aren't force-installed.)

Although Google Chrome aims to prevent users from uninstalling these extensions, some operating systems make it impossible for Google Chrome to defend robustly against extensions being modified externally, so this prevention is best efforts.

Leaving the policy unset means no apps or extensions are autoinstalled, and users can uninstall any app or extension in Google Chrome.

This policy supersedes ExtensionInstallBlocklist policy. If a previously force-installed app or extension is removed from this list, Google Chrome automatically uninstalls it.

The source code of any extension may be altered by users through developer tools, potentially rendering the extension dysfunctional. If this is a concern, set the DeveloperToolsDisabled policy.

Each list item of the policy is a string that contains an extension ID and, optionally, an update URL separated by a semicolon (;). The extension ID is the 32-letter string found, for example, on chrome://extensions when in Developer mode. If specified, the update URL should point to an Update Manifest XML document ( https://developer.chrome.com/extensions/autoupdate ). The update URL should use one of the following schemes: http, https or file. By default, the Chrome Web Store's update URL is used. The update URL set in this policy is only used for the initial installation; subsequent updates of the extension use the update URL in the extension's manifest. The update url for subsequent updates can be overridden using the ExtensionSettings policy, see http://support.google.com/chrome/a?p=Configure_ExtensionSettings_policy.

On Microsoft® Windows® instances, apps and extensions from outside the Chrome Web Store can only be forced installed if the instance is joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS instances, apps and extensions from outside the Chrome Web Store can only be force installed if the instance is managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Note: This policy doesn't apply to Incognito mode. Read about hosting extensions ( https://developer.chrome.com/extensions/hosting ).

Example value:

aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;https://clients2.google.com/service/update2/crx
abcdefghijklmnopabcdefghijklmnop</string><string id="ExtensionInstallForcelistDesc">Configure the list of force-installed apps and extensions</string><string id="ExtensionInstallSources">Configure extension, app, and user script install sources</string><string id="ExtensionInstallSources_Explain">Setting the policy specifies which URLs may install extensions, apps, and themes. Before Google Chrome 21, users could click on a link to a *.crx file, and Google Chrome would offer to install the file after a few warnings. Afterwards, such files must be downloaded and dragged to the Google Chrome settings page. This setting allows specific URLs to have the old, easier installation flow.

Each item in this list is an extension-style match pattern (see https://developer.chrome.com/extensions/match_patterns). Users can easily install items from any URL that matches an item in this list. Both the location of the *.crx file and the page where the download is started from (the referrer) must be allowed by these patterns.

ExtensionInstallBlocklist takes precedence over this policy. That is, an extension on the blocklist won't be installed, even if it happens from a site on this list.

Example value:

https://corp.mycompany.com/*</string><string id="ExtensionInstallSourcesDesc">Configure extension, app, and user script install sources</string><string id="ExtensionInstallTypeBlocklist">Blocklist for install types of extensions</string><string id="ExtensionInstallTypeBlocklist_Explain">The blocklist controls which extensions install types are disallowed.

Setting &quot;command_line&quot; will block extension from being loaded from
command line.

Example value:

command_line</string><string id="ExtensionInstallTypeBlocklistDesc">Blocklist for install types of extensions</string><string id="ExtensionManifestV2Availability">Control Manifest v2 extension availability</string><string id="ExtensionManifestV2Availability_Explain">Control if Manifest v2 extensions can be used by browser.

Manifest v2 extensions support will be deprecated and all extensions need
to be migrated to v3 in the future. More information and timeline of the
migration can be found at https://developer.chrome.com/docs/extensions/mv3/mv2-sunset/.

If the policy is set to Default (0) or not set, v2 extensions loading are decided by browser, following the timeline above.
If the policy is set to Disable (1), v2 extensions installation are blocked, existing ones are disabled. The option is going to be treated the same as if the policy is not set after v2 support is turned off by default.
If the policy is set to Enable (2), v2 extensions are allowed. The option is going to be treated the same as if the policy is not set before v2 support is turned off by default.
If the policy is set to EnableForForcedExtensions (3), force installed v2 extensions are allowed. This includes extensions that are listed by ExtensionInstallForcelist or ExtensionSettings with installation_mode &quot;force_installed&quot; or &quot;normal_installed&quot;. All other v2 extensions are disabled. The option is always available regardless of the migration state.


Extensions availability are still controlled by other policies.</string><string id="ExtensionManifestV2Availability_Default">Default browser behavior</string><string id="ExtensionManifestV2Availability_Disable">Manifest v2 is disabled</string><string id="ExtensionManifestV2Availability_Enable">Manifest v2 is enabled</string><string id="ExtensionManifestV2Availability_EnableForForcedExtensions">Manifest v2 is enabled for forced extensions only</string><string id="ExtensionSettings">Extension management settings</string><string id="ExtensionSettings_Explain">Setting the policy controls extension management settings for Google Chrome, including any controlled by existing extension-related policies. The policy supersedes any legacy policies that might be set.

This policy maps an extension ID or an update URL to its specific setting only. A default configuration can be set for the special ID &quot;*&quot;, which applies to all extensions without a custom configuration in this policy. With an update URL, configuration applies to extensions with the exact update URL stated in the extension manifest ( http://support.google.com/chrome/a?p=Configure_ExtensionSettings_policy ). If the 'override_update_url' flag is set to true, the extension is installed and updated using the &quot;update&quot; URL specified in the ExtensionInstallForcelist policy or in 'update_url' field in this policy. The flag 'override_update_url' is ignored if the 'update_url' is a Chrome Web Store url.

On Microsoft® Windows® instances, apps and extensions from outside the Chrome Web Store can only be forced installed if the instance is joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS instances, apps and extensions from outside the Chrome Web Store can only be force installed if the instance is managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ExtensionSettings for more information about schema and formatting.


Example value:

{
  &quot;*&quot;: {
    &quot;allowed_types&quot;: [
      &quot;hosted_app&quot;
    ],
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;,
    &quot;blocked_permissions&quot;: [
      &quot;downloads&quot;,
      &quot;bookmarks&quot;
    ],
    &quot;install_sources&quot;: [
      &quot;https://company-intranet/chromeapps&quot;
    ],
    &quot;installation_mode&quot;: &quot;blocked&quot;,
    &quot;runtime_allowed_hosts&quot;: [
      &quot;*://good.example.com&quot;
    ],
    &quot;runtime_blocked_hosts&quot;: [
      &quot;*://*.example.com&quot;
    ]
  },
  &quot;abcdefghijklmnopabcdefghijklmnop&quot;: {
    &quot;blocked_permissions&quot;: [
      &quot;history&quot;
    ],
    &quot;installation_mode&quot;: &quot;allowed&quot;,
    &quot;minimum_version_required&quot;: &quot;1.0.1&quot;,
    &quot;toolbar_pin&quot;: &quot;force_pinned&quot;,
    &quot;file_url_navigation_allowed&quot;: true
  },
  &quot;bcdefghijklmnopabcdefghijklmnopa&quot;: {
    &quot;allowed_permissions&quot;: [
      &quot;downloads&quot;
    ],
    &quot;installation_mode&quot;: &quot;force_installed&quot;,
    &quot;runtime_allowed_hosts&quot;: [
      &quot;*://good.example.com&quot;
    ],
    &quot;runtime_blocked_hosts&quot;: [
      &quot;*://*.example.com&quot;
    ],
    &quot;update_url&quot;: &quot;https://example.com/update_url&quot;
  },
  &quot;cdefghijklmnopabcdefghijklmnopab&quot;: {
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;,
    &quot;installation_mode&quot;: &quot;blocked&quot;
  },
  &quot;defghijklmnopabcdefghijklmnopabc,efghijklmnopabcdefghijklmnopabcd&quot;: {
    &quot;blocked_install_message&quot;: &quot;Custom error message.&quot;,
    &quot;installation_mode&quot;: &quot;blocked&quot;
  },
  &quot;fghijklmnopabcdefghijklmnopabcde&quot;: {
    &quot;blocked_install_message&quot;: &quot;Custom removal message.&quot;,
    &quot;installation_mode&quot;: &quot;removed&quot;
  },
  &quot;ghijklmnopabcdefghijklmnopabcdef&quot;: {
    &quot;installation_mode&quot;: &quot;force_installed&quot;,
    &quot;override_update_url&quot;: true,
    &quot;update_url&quot;: &quot;https://example.com/update_url&quot;
  },
  &quot;update_url:https://www.example.com/update.xml&quot;: {
    &quot;allowed_permissions&quot;: [
      &quot;downloads&quot;
    ],
    &quot;blocked_permissions&quot;: [
      &quot;wallpaper&quot;
    ],
    &quot;installation_mode&quot;: &quot;allowed&quot;
  }
}</string><string id="ExtensionUnpublishedAvailability">Control availability of extensions unpublished on the Chrome Web Store.</string><string id="ExtensionUnpublishedAvailability_Explain">If this policy is enabled, extensions that are unpublished on the Chrome Web
Store will be disabled in Google Chrome.
This policy only applies to extensions that are installed and updated from the
Chrome Web Store.

Off-store extensions such as unpacked extensions installed using developer
mode and extensions installed using the command-line switch are ignored.
Force-installed extensions that are self-hosted are ignored. All
version-pinned extensions are also ignored.

If the policy is set to AllowUnpublished (0) or not set, extensions that are unpublished on the Chrome Web Store are allowed.
If the policy is set to DisableUnpublished (1), extensions that are unpublished on the Chrome Web Store are disabled.</string><string id="ExtensionUnpublishedAvailability_AllowUnpublished">Allow unpublished extensions</string><string id="ExtensionUnpublishedAvailability_DisableUnpublished">Disable unpublished extensions</string><string id="FirstPartySets_group">First-Party Sets Settings</string><string id="FirstPartySetsEnabled">Enable First-Party Sets.</string><string id="FirstPartySetsEnabled_Explain">This policy is provided as a way to opt-out of the First-Party Sets feature.

When this policy is unset or set to Enabled, the First-Party Sets feature is enabled.

When this policy is set to Disabled, the First-Party Sets feature is disabled.

It controls whether Chrome supports First-Party Sets related integrations.

This is the equivalent of the RelatedWebsiteSetsEnabled policy.
Either policy may be used, but this one will be deprecated soon so the RelatedWebsiteSetsEnabled policy is preferred.
They both have the same effect on the browser's behavior.</string><string id="FirstPartySetsOverrides">Override First-Party Sets.</string><string id="FirstPartySetsOverrides_Explain">This policy provides a way to override the list of sets the browser uses for First-Party Sets features.

Each set in the browser's list of First-Party Sets must meet the requirements of a First-Party Set.
A First-Party Set must contain a primary site and one or more member sites.
A set can also contain a list of service sites that it owns, as well as a map from a site to all of its ccTLD variants.
See https://github.com/WICG/first-party-sets for more information on First-Party Sets are used by Google Chrome.

All sites in a First-Party Set must be a registrable domain served over HTTPS. Each site in a First-Party Set must also be unique,
meaning a site cannot be listed more than once in a First-Party Set.

When this policy is given an empty dictionary, the browser uses the public list of First-Party Sets.

For all sites in a First-Party Set from the replacements list, if a site is also present
on a First-Party Set in the browser's list, then that site will be removed from the browser's First-Party Set.
After this, the policy's First-Party Set will be added to the browser's list of First-Party Sets.

For all sites in a First-Party Set from the additions list, if a site is also present
on a First-Party Set in the browser's list, then the browser's First-Party Set will be updated so that the
new First-Party Set can be added to the browser's list. After the browser's list has been updated,
the policy's First-Party Set will be added to the browser's list of First-Party Sets.

The browser's list of First-Party Sets requires that for all sites in its list, no site is in
more than one set. This is also required for both the replacements list
and the additions list. Similarly, a site cannot be in both the
replacements list and the additions list.

Wildcards (*) are not supported as a policy value, nor within any First-Party Set in these lists.

All sets provided by the policy must be valid First-Party Sets, if they aren't then an
appropriate error will be outputted.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

This is the equivalent of the RelatedWebsiteSetsOverrides policy.
Either policy may be used, but this one will be deprecated soon so the RelatedWebsiteSetsOverrides policy is preferred.
They both have the same effect on the browser's behavior.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=FirstPartySetsOverrides for more information about schema and formatting.


Example value:

{
  &quot;additions&quot;: [
    {
      &quot;associatedSites&quot;: [
        &quot;https://associate2.test&quot;
      ],
      &quot;ccTLDs&quot;: {
        &quot;https://associate2.test&quot;: [
          &quot;https://associate2.com&quot;
        ]
      },
      &quot;primary&quot;: &quot;https://primary2.test&quot;,
      &quot;serviceSites&quot;: [
        &quot;https://associate2-content.test&quot;
      ]
    }
  ],
  &quot;replacements&quot;: [
    {
      &quot;associatedSites&quot;: [
        &quot;https://associate1.test&quot;
      ],
      &quot;ccTLDs&quot;: {
        &quot;https://associate1.test&quot;: [
          &quot;https://associate1.co.uk&quot;
        ]
      },
      &quot;primary&quot;: &quot;https://primary1.test&quot;,
      &quot;serviceSites&quot;: [
        &quot;https://associate1-content.test&quot;
      ]
    }
  ]
}</string><string id="GenerativeAI_group">Generative AI</string><string id="CreateThemesSettings">Settings for Create Themes with AI</string><string id="CreateThemesSettings_Explain">Create Themes with AI lets users create custom themes/wallpapers by preselecting from a list of options.

0 = Allow the feature to be used, while allowing Google to use relevant data to improve its AI models. Relevant data may include prompts, inputs, outputs, source materials, and written feedback, depending on the feature. It may also be reviewed by humans to improve AI models. 0 is the default value, except when noted below.

1 = Allow the feature to be used, but does not allow Google to improve models using users' content (including prompts, inputs, outputs, source materials, and written feedback). 1 is the default value for Enterprise users managed by Google Admin console and for Education accounts managed by Google Workspace.

2 = Do not allow the feature.

If the policy is unset, its behavior is determined by the GenAiDefaultSettings policy.

For more information on data handling for generative AI features, please see https://support.google.com/chrome/a?p=generative_ai_settings.</string><string id="CreateThemesSettings_Allowed">Allow Create Themes and improve AI models.</string><string id="CreateThemesSettings_AllowedWithoutLogging">Allow Create Themes without improving AI models.</string><string id="CreateThemesSettings_Disabled">Do not allow Create Themes.</string><string id="DevToolsGenAiSettings">Settings for DevTools Generative AI Features</string><string id="DevToolsGenAiSettings_Explain">These features in Google Chrome's DevTools employ generative AI models to provide additional debugging information. To use these features, Google Chrome has to collect data such as error messages, stack traces, code snippets, and network requests and send them to a server owned by Google, which runs a generative AI model. Response body or authentication and cookie headers in network requests are not included in the data sent to the server.

0 = Allow the feature to be used, while allowing Google to use relevant data to improve its AI models. Relevant data may include prompts, inputs, outputs, source materials, and written feedback, depending on the feature. It may also be reviewed by humans to improve AI models. 0 is the default value, except when noted below.

1 = Allow the feature to be used, but does not allow Google to improve models using users' content (including prompts, inputs, outputs, source materials, and written feedback). 1 is the default value for Enterprise users managed by Google Admin console and for Education accounts managed by Google Workspace.

2 = Do not allow the feature.

If the policy is unset, its behavior is determined by the GenAiDefaultSettings policy.

DevTools Generative AI features include:

- Console Insights: explains console messages and offers suggestions on how to fix console errors.

- AI assistance: get help with understanding CSS styles (since version 131), network requests, performance, and files (all since version 132).

For more information on data handling for generative AI features, please see https://support.google.com/chrome/a?p=generative_ai_settings.</string><string id="DevToolsGenAiSettings_Allowed">Allow DevTools Generative AI Features and improve AI models.</string><string id="DevToolsGenAiSettings_AllowedWithoutLogging">Allow DevTools Generative AI Features without improving AI models.</string><string id="DevToolsGenAiSettings_Disabled">Do not allow DevTools Generative AI Features.</string><string id="GenAILocalFoundationalModelSettings">Settings for GenAI local foundational model</string><string id="GenAILocalFoundationalModelSettings_Explain">Configure how Google Chrome downloads the foundational GenAI model and uses for inference locally.

When the policy is set to Allowed (0) or not set, the model is downloaded automatically, and used for inference.

When the policy is set to Disabled (1), the model will not be downloaded.

Model downloading can also be disabled by ComponentUpdatesEnabled.</string><string id="GenAILocalFoundationalModelSettings_Allowed">Downloads model automatically</string><string id="GenAILocalFoundationalModelSettings_Disabled">Do not download model</string><string id="HelpMeWriteSettings">Settings for Help Me Write</string><string id="HelpMeWriteSettings_Explain">Help Me Write is an AI-based writing assistant for short-form content on the web. Suggested content is based on prompts entered by the user and the content of the web page.

0 = Allow the feature to be used, while allowing Google to use relevant data to improve its AI models. Relevant data may include prompts, inputs, outputs, source materials, and written feedback, depending on the feature. It may also be reviewed by humans to improve AI models. 0 is the default value, except when noted below.

1 = Allow the feature to be used, but does not allow Google to improve models using users' content (including prompts, inputs, outputs, source materials, and written feedback). 1 is the default value for Enterprise users managed by Google Admin console and for Education accounts managed by Google Workspace.

2 = Do not allow the feature.

If the policy is unset, its behavior is determined by the GenAiDefaultSettings policy.

For more information on data handling for generative AI features, please see https://support.google.com/chrome/a?p=generative_ai_settings.</string><string id="HelpMeWriteSettings_Allowed">Allow Help Me Write and improve AI models.</string><string id="HelpMeWriteSettings_AllowedWithoutLogging">Allow Help Me Write without improving AI models.</string><string id="HelpMeWriteSettings_Disabled">Do not allow Help Me Write.</string><string id="HistorySearchSettings">Settings for AI-powered History Search</string><string id="HistorySearchSettings_Explain">AI History Search is a feature that allows users to search their browsing history and receive generated answers based on page contents and not just the page title and URL.

0 = Allow the feature to be used, while allowing Google to use relevant data to improve its AI models. Relevant data may include prompts, inputs, outputs, source materials, and written feedback, depending on the feature. It may also be reviewed by humans to improve AI models. 0 is the default value, except when noted below.

1 = Allow the feature to be used, but does not allow Google to improve models using users' content (including prompts, inputs, outputs, source materials, and written feedback). 1 is the default value for Enterprise users managed by Google Admin console and for Education accounts managed by Google Workspace.

2 = Do not allow the feature.

If the policy is unset, its behavior is determined by the GenAiDefaultSettings policy.

For more information on data handling for generative AI features, please see https://support.google.com/chrome/a?p=generative_ai_settings.</string><string id="HistorySearchSettings_Allowed">Allow AI History Search and improve AI models.</string><string id="HistorySearchSettings_AllowedWithoutLogging">Allow AI History Search without improving AI models.</string><string id="HistorySearchSettings_Disabled">Do not allow AI History Search.</string><string id="TabCompareSettings">Tab Compare settings</string><string id="TabCompareSettings_Explain">Tab Compare is an AI-powered tool for comparing information across a user's tabs. As an example, the feature can be offered to the user when multiple tabs with products in a similar category are open.

0 = Allow the feature to be used, while allowing Google to use relevant data to improve its AI models. Relevant data may include prompts, inputs, outputs, source materials, and written feedback, depending on the feature. It may also be reviewed by humans to improve AI models. 0 is the default value, except when noted below.

1 = Allow the feature to be used, but does not allow Google to improve models using users' content (including prompts, inputs, outputs, source materials, and written feedback). 1 is the default value for Enterprise users managed by Google Admin console and for Education accounts managed by Google Workspace.

2 = Do not allow the feature.

If the policy is unset, its behavior is determined by the GenAiDefaultSettings policy.

For more information on data handling for generative AI features, please see https://support.google.com/chrome/a?p=generative_ai_settings.</string><string id="TabCompareSettings_Allowed">Allow Tab Compare and improve AI models.</string><string id="TabCompareSettings_AllowedWithoutLogging">Allow Tab Compare without improving AI models.</string><string id="TabCompareSettings_Disabled">Do not allow Tab Compare.</string><string id="GoogleCast_group">Google Cast</string><string id="AccessCodeCastDeviceDuration">Specifies how long (in seconds) a cast device selected with an access code or QR code stays in the Google Cast menu's list of cast devices.</string><string id="AccessCodeCastDeviceDuration_Explain">This policy specifies how long (in seconds) a cast device that was previously selected via an access code or QR code can be seen within the Google Cast menu of cast devices.
The lifetime of an entry starts at the time the access code was first entered or the QR code was first scanned.
During this period the cast device will appear in the Google Cast menu's list of cast devices.
After this period, in order to use the cast device again the access code must be reentered or the QR code must be rescanned.
By default, the period is zero seconds, so cast devices will not stay in the Google Cast menu, and so the access code must be reentered, or the QR code rescanned, in order to initiate a new casting session.
Note that this policy only affects how long a cast devices appears in the Google Cast menu, and has no effect on any ongoing cast session which will continue even if the period expires.
This policy has no effect unless the AccessCodeCastEnabled policy is Enabled.</string><string id="AccessCodeCastEnabled">Allow users to select cast devices with an access code or QR code from within the Google Cast menu.</string><string id="AccessCodeCastEnabled_Explain">This policy controls whether a user will be presented with an option, within the Google Cast menu which allows them to cast to cast devices that do not appear in the Google Cast menu, using either the access code or QR code displayed on the cast devices's screen.
By default, a user must reenter the access code or rescan the QR code in order to initiate a subsequent casting session, but if the AccessCodeCastDeviceDuration policy has been set to a non-zero value (the default is zero), then the cast device will remain in the list of available cast devices until the specified period of time has expired.
When this policy is set to Enabled, users will be presented with the option to select cast devices by using an access code or by scanning a QR code.
When this policy is set to Disabled or not set, users will not be given the option to select cast devices by using an access code or by scanning a QR code.</string><string id="EnableMediaRouter">Enable Google Cast</string><string id="EnableMediaRouter_Explain">Setting the policy to Enabled or leaving it unset turns on Google Cast, which users can launch from the app menu, page context menus, media controls on Cast-enabled websites, and (if shown) the Cast toolbar icon.

Setting the policy to Disabled turns off Google Cast.</string><string id="MediaRouterCastAllowAllIPs">Allow Google Cast to connect to Cast devices on all IP addresses.</string><string id="MediaRouterCastAllowAllIPs_Explain">Unless EnableMediaRouter is set to Disabled, setting MediaRouterCastAllowAllIPs to Enabled connects Google Cast to Cast devices on all IP addresses, not just RFC1918/RFC4193 private addresses.

Setting the policy to Disabled connects Google Cast to Cast devices only on RFC1918/RFC4193.

Leaving the policy unset connects Google Cast to Cast devices only on RFC1918/RFC4193, unless the CastAllowAllIPs feature is turned on.</string><string id="ShowCastIconInToolbar">Show the Google Cast toolbar icon</string><string id="ShowCastIconInToolbar_Explain">Setting the policy to Enabled displays the Cast toolbar icon on the toolbar or the overflow menu, and users can't remove it.

Setting the policy to Disabled or leaving it unset lets users pin or remove the icon through its contextual menu.

If the policy EnableMediaRouter is set to Disabled, then this policy's value has no effect, and the toolbar icon doesn't appear.</string><string id="ShowCastSessionsStartedByOtherDevices">Show media controls for Google Cast sessions started by other devices on the local network</string><string id="ShowCastSessionsStartedByOtherDevices_Explain">When this policy is enabled, media playback controls UI is available for Google Cast sessions started by other devices on the local network.

When this policy is unset for enterprise users or is disabled, media playback controls UI is unavailable for Google Cast sessions started by other devices on the local network.

If the policy EnableMediaRouter is disabled, then this policy's value has no effect, as the entire Google Cast functionality is disabled.</string><string id="HTTPAuthentication_group">HTTP authentication</string><string id="AllHttpAuthSchemesAllowedForOrigins">List of origins allowing all HTTP authentication</string><string id="AllHttpAuthSchemesAllowedForOrigins_Explain">Setting the policy specifies for which origins to allow all the HTTP authentication schemes Google Chrome supports regardless of the AuthSchemes policy.

Format the origin pattern according to this format (https://support.google.com/chrome/a?p=url_blocklist_filter_format). Up to 1,000 exceptions can be defined in AllHttpAuthSchemesAllowedForOrigins.
Wildcards are allowed for the whole origin or parts of the origin, either the scheme, host, port.

Example value:

*.example.com</string><string id="AllHttpAuthSchemesAllowedForOriginsDesc">List of origins allowing all HTTP authentication</string><string id="AllowCrossOriginAuthPrompt">Cross-origin HTTP Authentication prompts</string><string id="AllowCrossOriginAuthPrompt_Explain">Setting the policy to Enabled allows third-party images on a page to show an authentication prompt.

Setting the policy to Disabled or leaving it unset renders third-party images unable to show an authentication prompt.

Typically, this policy is Disabled as a phishing defense.</string><string id="AuthNegotiateDelegateAllowlist">Kerberos delegation server allowlist</string><string id="AuthNegotiateDelegateAllowlist_Explain">Setting the policy assigns servers that Google Chrome may delegate to. Separate multiple server names with commas. Wildcards, *, are allowed.

Leaving the policy unset means Google Chrome won't delegate user credentials, even if a server is detected as intranet.

Example value: *.example.com,foobar.example.com</string><string id="AuthSchemes">Supported authentication schemes</string><string id="AuthSchemes_Explain">Setting the policy specifies which HTTP authentication schemes Google Chrome supports.

Leaving the policy unset employs all 4 schemes.

Valid values:

* basic

* digest

* ntlm

* negotiate

Note: Separate multiple values with commas.

Example value: basic,digest,ntlm,negotiate</string><string id="AuthServerAllowlist">Authentication server allowlist</string><string id="AuthServerAllowlist_Explain">Setting the policy specifies which servers should be allowed for integrated authentication. Integrated authentication is only on when Google Chrome gets an authentication challenge from a proxy or from a server in this permitted list.

Leaving the policy unset means Google Chrome tries to detect if a server is on the intranet. Only then will it respond to IWA requests. If a server is detected as internet, then Google Chrome ignores IWA requests from it.

Note: Separate multiple server names with commas. Wildcards, *, are allowed.

Example value: *.example.com,example.com</string><string id="BasicAuthOverHttpEnabled">Allow Basic authentication for HTTP</string><string id="BasicAuthOverHttpEnabled_Explain">Setting the policy to Enabled or leaving it unset will allow Basic authentication challenges received over non-secure HTTP.

Setting the policy to Disabled forbids non-secure HTTP requests from using the Basic authentication scheme; only secure HTTPS is allowed.

This policy setting is ignored (and Basic is always forbidden) if the AuthSchemes policy is set and does not include Basic.</string><string id="DisableAuthNegotiateCnameLookup">Disable CNAME lookup when negotiating Kerberos authentication</string><string id="DisableAuthNegotiateCnameLookup_Explain">Setting the policy to Enabled skips CNAME lookup. The server name is used as entered when generating the Kerberos SPN.

Setting the policy to Disabled or leaving it unset means CNAME lookup determines the canonical name of the server when generating the Kerberos SPN.</string><string id="EnableAuthNegotiatePort">Include non-standard port in Kerberos SPN</string><string id="EnableAuthNegotiatePort_Explain">Setting the policy to Enabled and entering a nonstandard port (in other words, a port other than 80 or 443) includes it in the generated Kerberos SPN.

Setting the policy to Disabled or leaving it unset means the generated Kerberos SPN won't include a port.</string><string id="BrowserIdle_group">Idle Browser Actions</string><string id="IdleTimeout">Delay before running idle actions</string><string id="IdleTimeout_Explain">Triggers an action when the computer is idle.

If this policy is set, it specifies the length of time without user input (in minutes) before the browser runs actions configured via the IdleTimeoutActions policy.

If this policy is not set, no action will be ran.

The minimum threshold is 1 minute.

&quot;User input&quot; is defined by Operating System APIs, and includes things like moving the mouse or typing on the keyboard.</string><string id="IdleTimeoutActions">Actions to run when the computer is idle</string><string id="IdleTimeoutActions_Explain">List of actions to run when the timeout from the IdleTimeout policy is reached.

Warning: Setting this policy can impact and permanently remove local personal data. It is recommended to test your settings before deploying to prevent accidental deletion of personal data.

If the IdleTimeout policy is unset, this policy has no effect.

When the timeout from the IdleTimeout policy is reached, the browser runs the actions configured in this policy.

If this policy is empty or left unset, the IdleTimeout policy has no effect.

Supported actions are:

'close_browsers': close all browser windows and PWAs for this profile. Not supported on Android and iOS.

'close_tabs': close all open tabs in open windows. Only supported on iOS.

'show_profile_picker': show the Profile Picker window. Not supported on Android and iOS.

'sign_out': Signs out the current signed in user. Only supported on iOS.

'clear_browsing_history', 'clear_download_history', 'clear_cookies_and_other_site_data', 'clear_cached_images_and_files', 'clear_password_signing', 'clear_autofill', 'clear_site_settings', 'clear_hosted_app_data': clear the corresponding browsing data. See the ClearBrowsingDataOnExitList policy for more details. The types supported on iOS are 'clear_browsing_history', 'clear_cookies_and_other_site_data', 'clear_cached_images_and_files', 'clear_password_signing', and 'clear_autofill'

'reload_pages': reload all webpages. For some pages, the user may be prompted for confirmation first. Not supported on iOS.

Setting 'clear_browsing_history', 'clear_password_signing', 'clear_autofill', and 'clear_site_settings' will disable sync for the respective data types if neither `Chrome Sync` is disabled by setting the SyncDisabled policy nor BrowserSignin is disabled.

Example value:

close_browsers
show_profile_picker</string><string id="IdleTimeoutActionsDesc">Actions to run when the computer is idle</string><string id="BrowserSwitcher_group">Legacy Browser Support</string><string id="AlternativeBrowserParameters">Command-line parameters for the alternative browser.</string><string id="AlternativeBrowserParameters_Explain">Setting the policy to a list of strings means each string is passed to the alternative browser as separate command-line parameters. On Microsoft® Windows®, the parameters are joined with spaces. On macOS and Linux®, a parameter can have spaces and still be treated as a single parameter.

If a parameter contains ${url}, ${url} is replaced with the URL of the page to open. If no parameter contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Microsoft® Windows®, %ABC% is replaced with the value of the ABC environment variable. On macOS and Linux®, ${ABC} is replaced with the value of the ABC environment variable.

Leaving the policy unset means only the URL is passed as a command-line parameter.

Example value:

-foreground
-new-window
${url}
-profile
%HOME%\browser_profile</string><string id="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</string><string id="AlternativeBrowserPath">Alternative browser to launch for configured websites.</string><string id="AlternativeBrowserPath_Explain">Setting the policy controls which command to use to open URLs in an alternative browser. The policy can be set to one of ${ie}, ${firefox}, ${safari}, ${opera}, ${edge} or a file path. When this policy is set to a file path, that file is used as an executable file. ${ie} is only available on Microsoft® Windows®. ${safari} and ${edge} are only available on Microsoft® Windows® and macOS.

Leaving the policy unset puts a platform-specific default in use: Internet Explorer® for Microsoft® Windows®, or Safari® for macOS. On Linux®, launching an alternative browser will fail.

Example value: ${ie}</string><string id="BrowserSwitcherChromeParameters">Command-line parameters for switching from the alternative browser.</string><string id="BrowserSwitcherChromeParameters_Explain">Setting the policy to a list of strings means the strings are joined with spaces and passed from Internet Explorer® to Google Chrome as command-line parameters. If a parameter contains ${url}, ${url} is replaced with the URL of the page to open. If no parameter contains ${url}, the URL is appended at the end of the command line.

Environment variables are expanded. On Microsoft® Windows®, %ABC% is replaced with the value of the ABC environment variable.

Leaving the policy unset means Internet Explorer® only passes the URL to Google Chrome as a command-line parameter.

Note: If the Legacy Browser Support add-in for Internet Explorer® isn't installed, this policy has no effect.

Example value:

--force-dark-mode</string><string id="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</string><string id="BrowserSwitcherChromePath">Path to Chrome for switching from the alternative browser.</string><string id="BrowserSwitcherChromePath_Explain">This policy controls the command to use to open URLs in Google Chrome when switching from Internet Explorer®. This policy can be set to an executable file path or ${chrome} to autodetect the location of Google Chrome.

Leaving the policy unset means Internet Explorer® autodetects Google Chrome's own executable path when launching Google Chrome from Internet Explorer.

Note: If the Legacy Browser Support add-in for Internet Explorer® isn't installed, this policy has no effect.

Example value: ${chrome}</string><string id="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds)</string><string id="BrowserSwitcherDelay_Explain">Setting the policy to a number has Google Chrome show a message for that number of milliseconds, then it opens an alternative browser.

Leaving the policy unset or set to 0 means navigating to a designated URL immediately opens it in an alternative browser.</string><string id="BrowserSwitcherEnabled">Enable the Legacy Browser Support feature.</string><string id="BrowserSwitcherEnabled_Explain">Setting the policy to Enabled means Google Chrome will try to launch some URLs in an alternate browser, such as Internet Explorer®. This feature is set using the policies in the Legacy Browser support group.

Setting the policy to Disabled or leaving it unset means Google Chrome won't try to launch designated URLs in an alternate browser.</string><string id="BrowserSwitcherExternalGreylistUrl">URL of an XML file that contains URLs that should never trigger a browser switch.</string><string id="BrowserSwitcherExternalGreylistUrl_Explain">Setting the policy to a valid URL has Google Chrome download the site list from that URL and apply the rules as if they were set up with the BrowserSwitcherUrlGreylist policy. These policies prevent Google Chrome and the alternative browser from opening one another.

Leaving it unset (or set to a invalid URL) means Google Chrome doesn't use the policy as a source of rules for not switching browsers.

Note: This policy points to an XML file in the same format as Internet Explorer®'s SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer®. Read more on Internet Explorer®'s SiteList policy ( https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode )

Example value: http://example.com/greylist.xml</string><string id="BrowserSwitcherExternalSitelistUrl">URL of an XML file that contains URLs to load in an alternative browser.</string><string id="BrowserSwitcherExternalSitelistUrl_Explain">Setting the policy to a valid URL has Google Chrome download the site list from that URL and apply the rules as if they were set up with the BrowserSwitcherUrlList policy.

Leaving it unset (or set to a invalid URL) means Google Chrome doesn't use the policy as a source of rules for switching browsers.

Note: This policy points to an XML file in the same format as Internet Explorer®'s SiteList policy. This loads rules from an XML file, without sharing those rules with Internet Explorer®. Read more on Internet Explorer®'s SiteList policy ( https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode)

Example value: http://example.com/sitelist.xml</string><string id="BrowserSwitcherKeepLastChromeTab">Keep last tab open in Chrome.</string><string id="BrowserSwitcherKeepLastChromeTab_Explain">Setting the policy to Enabled or leaving it unset has Google Chrome keep at least one tab open, after switching to an alternate browser.

Setting the policy to Disabled has Google Chrome close the tab after switching to an alternate browser, even if it was the last tab. This causes Google Chrome to exit completely.</string><string id="BrowserSwitcherParsingMode">Sitelist parsing mode</string><string id="BrowserSwitcherParsingMode_Explain">This policy controls how Google Chrome interprets sitelist/greylist policies for the Legacy Browser Support feature. It affects the following policies: BrowserSwitcherUrlList, BrowserSwitcherUrlGreylist, BrowserSwitcherUseIeSitelist, BrowserSwitcherExternalSitelistUrl, and BrowserSwitcherExternalGreylistUrl.

If 'Default' (0) or unset, URL matching is less strict. Rules that do not contain &quot;/&quot; look for a substring anywhere in the URL's hostname. Matching the path component of a URL is case-sensitive.

If 'IESiteListMode' (1), URL matching is more strict. Rules that do not contain &quot;/&quot; only match at the end of the hostname. They must also be at a domain name boundary. Matching the path component of a URL is case-insensitive. This is more compatible with Microsoft® Internet Explorer® and Microsoft® Edge®.

For example, with the rules &quot;example.com&quot; and &quot;acme.com/abc&quot;:

&quot;http://example.com/&quot;, &quot;http://subdomain.example.com/&quot; and &quot;http://acme.com/abc&quot; match regardless of parsing mode.

&quot;http://notexample.com/&quot;, &quot;http://example.com.invalid.com/&quot;, &quot;http://example.comabc/&quot; only match in 'Default' mode.

&quot;http://acme.com/ABC&quot; only matches in 'IESiteListMode'.</string><string id="BrowserSwitcherParsingMode_Default">Default behavior for LBS.</string><string id="BrowserSwitcherParsingMode_IESiteListMode">More compatible with Microsoft IE/Edge enterprise mode sitelists.</string><string id="BrowserSwitcherUrlGreylist">Websites that should never trigger a browser switch.</string><string id="BrowserSwitcherUrlGreylist_Explain">Setting the policy controls the list of websites that will never cause a browser switch. Each item is treated as a rule. Those rules that match won't open an alternative browser. Unlike the BrowserSwitcherUrlList policy, rules apply to both directions. When the Internet Explorer® add-in is on, it also controls whether Internet Explorer® should open these URLs in Google Chrome.

Leaving the policy unset adds no websites to the list.

Note: Elements can also be added to this list through the BrowserSwitcherExternalGreylistUrl policy.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string><string id="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</string><string id="BrowserSwitcherUrlList">Websites to open in alternative browser</string><string id="BrowserSwitcherUrlList_Explain">Setting the policy controls the list of websites to open in an alternative browser. Each item is treated as a rule for something to open in an alternative browser. Google Chrome uses those rules when choosing if a URL should open in an alternative browser. When the Internet Explorer® add-in is on, Internet Explorer® switches back to Google Chrome when the rules don't match. If rules contradict each other, Google Chrome uses the most specific rule.

Leaving the policy unset adds no websites to the list.

Note: Elements can also be added to this list through the BrowserSwitcherUseIeSitelist and BrowserSwitcherExternalSitelistUrl policies.

Example value:

ie.com
!open-in-chrome.ie.com
foobar.com/ie-only/</string><string id="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</string><string id="BrowserSwitcherUseIeSitelist">Use Internet Explorer's SiteList policy for Legacy Browser Support.</string><string id="BrowserSwitcherUseIeSitelist_Explain">This policy controls whether to load rules from Internet Explorer®'s SiteList policy.

When this policy is set to true, Google Chrome reads Internet Explorer®'s SiteList to obtain the site list's URL. Google Chrome then downloads the site list from that URL, and applies the rules as if they had been configured with the BrowserSwitcherUrlList policy.

When this policy is false or unset, Google Chrome does not use Internet Explorer®'s SiteList policy as a source of rules for switching browsers.

For more information on Internet Explorer's SiteList policy: https://docs.microsoft.com/internet-explorer/ie11-deploy-guide/what-is-enterprise-mode</string><string id="ActiveDirectoryManagement_group">Microsoft® Active Directory® management settings</string><string id="CloudAPAuthEnabled">Allow automatic sign-in to Microsoft® cloud identity providers</string><string id="CloudAPAuthEnabled_Explain">Configures automatic user sign-in for accounts backed by a Microsoft® cloud identity provider.

By setting this policy to 1 (Enabled), users who sign into their computer with an account backed by a Microsoft® cloud identity provider (i.e., Microsoft® Azure® Active Directory® or the consumer Microsoft® account identity provider) or who have added a work or school account to Microsoft® Windows® can be signed into web properties using that identity automatically. Information pertaining to the user's device and account is transmitted to the user's cloud identity provider for each authentication event.

By setting this policy to 0 (Disabled) or leaving it unset, automatic sign-in as described above is disabled.

This feature is available starting in Microsoft® Windows® 10.

Note: This policy doesn't apply to Incognito or Guest modes.</string><string id="CloudAPAuthEnabled_Disabled">Disable Microsoft® cloud authentication</string><string id="CloudAPAuthEnabled_Enabled">Enable Microsoft® cloud authentication</string><string id="AbusiveExperienceInterventionEnforce">Abusive Experience Intervention Enforce</string><string id="AbusiveExperienceInterventionEnforce_Explain">If SafeBrowsingEnabled is not Disabled, then setting AbusiveExperienceInterventionEnforce to Enabled or leaving it unset prevents sites with abusive experiences from opening new windows or tabs.

Setting SafeBrowsingEnabled to Disabled or AbusiveExperienceInterventionEnforce to Disabled lets sites with abusive experiences open new windows or tabs.</string><string id="AccessibilityImageLabelsEnabled">Enable Get Image Descriptions from Google.</string><string id="AccessibilityImageLabelsEnabled_Explain">The Get Image Descriptions from Google
accessibility feature enables visually-impaired screen reader users to
get descriptions of unlabeled images on the web. Users who choose to enable it
will have the option of using an anonymous Google service to provide
automatic descriptions for unlabeled images they encounter on the web.

If this feature is enabled, the content of images will be sent to Google
servers in order to generate a description. No cookies or other user
data is sent, and Google does not save or log any image content.

If this policy is set to Enabled, the
Get Image Descriptions from Google
feature will be enabled, though it will only affect users who are using a
screen reader or other similar assistive technology.

If this policy is set to Disabled, users will not have the option of enabling
the feature.

If this policy is not set, user can choose to use this feature or not.
</string><string id="AdditionalDnsQueryTypesEnabled">Allow DNS queries for additional DNS record types</string><string id="AdditionalDnsQueryTypesEnabled_Explain">This policy controls whether Google Chrome may query additional DNS record types when making insecure DNS requests. This policy has no effect on DNS queries made via Secure DNS, which may always query additional DNS types.

If this policy is unset or set to Enabled, additional types such as HTTPS (DNS type 65) may be queried in addition to A (DNS type 1) and AAAA (DNS type 28).

If this policy is set to Disabled, DNS will only be queried for A (DNS type 1) and/or AAAA (DNS type 28).

This policy is a temporary measure and will be removed in future versions of Google Chrome. After removal of the policy, Google Chrome will always be able to query additional DNS types.</string><string id="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</string><string id="AdsSettingForIntrusiveAdsSites_Explain">Unless SafeBrowsingEnabled is set to False, then setting AdsSettingForIntrusiveAdsSites to 1 or leaving it unset allows ads on all sites.

Setting the policy to 2 blocks ads on sites with intrusive ads.</string><string id="AdsSettingForIntrusiveAdsSites_AllowAds">Allow ads on all sites</string><string id="AdsSettingForIntrusiveAdsSites_BlockAds">Do not allow ads on sites with intrusive ads</string><string id="AdvancedProtectionAllowed">Enable additional protections for users enrolled in the Advanced Protection program</string><string id="AdvancedProtectionAllowed_Explain">This policy controls whether users enrolled in the Advanced Protection program receive extra protections. Some of these features may involve the sharing of data with Google (for example, Advanced Protection users will be able to send their downloads to Google for malware scanning). If set to True or not set, enrolled users will receive extra protections. If set to False, Advanced Protection users will receive only the standard consumer features.</string><string id="AllowBackForwardCacheForCacheControlNoStorePageEnabled">Allow pages with Cache-Control: no-store header to enter back/forward cache</string><string id="AllowBackForwardCacheForCacheControlNoStorePageEnabled_Explain">This policy controls if a page with Cache-Control: no-store header can be stored in back/forward cache. The website setting this header may not expect the page to be restored from back/forward cache since some sensitive information could still be displayed after the restoration even if it is no longer accessible.

If the policy is enabled or unset, the page with Cache-Control: no-store header might be restored from back/forward cache unless the cache eviction is triggered (e.g. when there is HTTP-only cookie change to the site).

If the policy is disabled, the page with Cache-Control: no-store header will not be stored in back/forward cache.</string><string id="AllowDeletingBrowserHistory">Enable deleting browser and download history</string><string id="AllowDeletingBrowserHistory_Explain">Setting the policy to Enabled or leaving it unset means browser history and download history can be deleted in Chrome, and users can't change this setting.

Setting the policy to Disabled means browser history and download history can't be deleted. Even with this policy off, the browsing and download history are not guaranteed to be retained. Users may be able to edit or delete the history database files directly, and the browser itself may expire or archive any or all history items at any time.</string><string id="AllowDinosaurEasterEgg">Allow Dinosaur Easter Egg Game</string><string id="AllowDinosaurEasterEgg_Explain">Setting the policy to True allows users to play the dinosaur game. Setting the policy to False means users can't play the dinosaur easter egg game when device is offline.

Leaving the policy unset means users can't play the game on enrolled Google ChromeOS, but can under other circumstances.</string><string id="AllowFileSelectionDialogs">Allow invocation of file selection dialogs</string><string id="AllowFileSelectionDialogs_Explain">Setting the policy to Enabled or leaving it unset means Chrome can display, and users can open, file selection dialogs.

Setting the policy to Disabled means that whenever users perform actions provoking a file selection dialog, such as importing bookmarks, uploading files, and saving links, a message appears instead. The user is assumed to have clicked Cancel on the file selection dialog.</string><string id="AllowWebAuthnWithBrokenTlsCerts">Allow Web Authentication requests on sites with broken TLS certificates.</string><string id="AllowWebAuthnWithBrokenTlsCerts_Explain">If set to Enabled, Google Chrome will
allow Web Authentication requests on websites that have TLS certificates with
errors (i.e. websites considered not secure).

If the policy is set to Disabled or left unset, the default behavior of
blocking such requests will apply.</string><string id="AllowedDomainsForApps">Define domains allowed to access Google Workspace</string><string id="AllowedDomainsForApps_Explain">Setting the policy turns on Chrome's restricted sign-in feature in Google Workspace and prevents users from changing this setting. Users can only access Google tools using accounts from the specified domains (to allow gmail or googlemail accounts, add consumer_accounts to the list of domains). This setting prevents users from signing in and adding a Secondary Account on a managed device that requires Google authentication, if that account doesn't belong to one of the explicitly allowed domains.

Leaving this setting empty or unset means users can access Google Workspace with any account.

Users cannot change or override this setting.

Note: This policy causes the X-GoogApps-Allowed-Domains header to be appended to all HTTP and HTTPS requests to all google.com domains, as described in https://support.google.com/a/answer/1668854.

Example value: managedchrome.com,example.com</string><string id="AlternateErrorPagesEnabled">Enable alternate error pages</string><string id="AlternateErrorPagesEnabled_Explain">Setting the policy to True means Google Chrome uses alternate error pages built into (such as &quot;page not found&quot;). Setting the policy to False means Google Chrome never uses alternate error pages.

If you set the policy, users can't change it. If not set, the policy is on, but users can change this setting.</string><string id="AlwaysOpenPdfExternally">Always Open PDF files externally</string><string id="AlwaysOpenPdfExternally_Explain">Setting the policy to Enabled turns the internal PDF viewer off in Google Chrome, treats PDF files as a download, and lets users open PDFs with the default application.

Setting the policy to Disabled means that unless users turns off the PDF plugin, it will open PDF files.

If you set the policy, users can't change it in Google Chrome. If not set, users can choose whether to open PDF externally or not.</string><string id="AmbientAuthenticationInPrivateModesEnabled">Enable Ambient Authentication for profile types.</string><string id="AmbientAuthenticationInPrivateModesEnabled_Explain">Configuring this policy will allow/disallow ambient authentication for Incognito and Guest profiles in Google Chrome.

Ambient Authentication is http authentication with default credentials if explicit credentials are not provided via NTLM/Kerberos/Negotiate challenge/response schemes.

Setting the RegularOnly (value 0), allows ambient authentication for Regular sessions only. Incognito and Guest sessions wouldn't be allowed to ambiently authenticate.

Setting the IncognitoAndRegular (value 1), allows ambient authentication for Incognito and Regular sessions. Guest sessions wouldn't be allowed to ambiently authenticate.

Setting the GuestAndRegular (value 2), allows ambient authentication for Guest and Regular sessions. Incognito sessions wouldn't be allowed to ambiently authenticate.

Setting the  All (value 3), allows ambient authentication for all sessions.

Note that, ambient authentication is always allowed on regular profiles.

In Google Chrome version 81 and later, if the policy is left not set, ambient authentication will be enabled in regular sessions only.</string><string id="AmbientAuthenticationInPrivateModesEnabled_RegularOnly">Enable ambient authentication in regular sessions only.</string><string id="AmbientAuthenticationInPrivateModesEnabled_IncognitoAndRegular">Enable ambient authentication in incognito and regular sessions.</string><string id="AmbientAuthenticationInPrivateModesEnabled_GuestAndRegular">Enable ambient authentication in guest and regular sessions.</string><string id="AmbientAuthenticationInPrivateModesEnabled_All">Enable ambient authentication in regular, incognito and guest sessions.</string><string id="ApplicationBoundEncryptionEnabled">Enable Application Bound Encryption</string><string id="ApplicationBoundEncryptionEnabled_Explain">Setting the policy to Enabled or leaving it unset binds encryption keys used for local data storage to Google Chrome whenever that is possible.

Setting the policy to Disabled has a detrimental effect on Google Chrome's security as unknown and potentially hostile apps can retrieve encryption keys used to secure data.

Only turn off the policy if there are compatibility issues, such as other applications that need legitimate access to Google Chrome's data, encrypted user data is expected to be fully portable between different computers or the integrity and location of Google Chrome's executable files is not consistent.</string><string id="ApplicationLocaleValue">Application locale</string><string id="ApplicationLocaleValue_Explain">Setting the policy specifies the locale Google Chrome uses.

Turning it off or leaving it unset means the locale will be the first valid locale from:
1) The user specified locale (if configured).
2) The system locale.
3) The fallback locale (en-US).

Example value: en</string><string id="AudioCaptureAllowed">Allow or deny audio capture</string><string id="AudioCaptureAllowed_Explain">Setting the policy to Enabled or leaving it unset means that, with the exception of URLs set in the AudioCaptureAllowedUrls list, users get prompted for audio capture access.

Setting the policy to Disabled turns off prompts, and audio capture is only available to URLs set in the AudioCaptureAllowedUrls list.

Note: The policy affects all audio input (not just the built-in microphone).</string><string id="AudioCaptureAllowedUrls">URLs that will be granted access to audio capture devices without prompt</string><string id="AudioCaptureAllowedUrls_Explain">Setting the policy means you specify the URL list whose patterns get matched to the security origin of the requesting URL. A match grants access to audio capture devices without prompt

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Note, however, that the pattern &quot;*&quot;, which matches any URL, is not supported by this policy.

Example value:

https://www.example.com/
https://[*.]example.edu/</string><string id="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</string><string id="AudioProcessHighPriorityEnabled">Allow the audio process to run with priority above normal on Windows</string><string id="AudioProcessHighPriorityEnabled_Explain">This policy controls the priority of the audio process on Windows.
If this policy is enabled, the audio process will run with above normal priority.
If this policy is disabled, the audio process will run with normal priority.
If this policy is not set, the default configuration for the audio process will be used.
This policy is intended as a temporary measure to give enterprises the ability to
run audio with higher priority to address certain performance issues with audio capture.
This policy will be removed in the future.</string><string id="AudioSandboxEnabled">Allow the audio sandbox to run</string><string id="AudioSandboxEnabled_Explain">This policy controls the audio process sandbox.
If this policy is enabled, the audio process will run sandboxed.
If this policy is disabled, the audio process will run unsandboxed and the WebRTC audio-processing module will run in the renderer process.
This leaves users open to security risks related to running the audio subsystem unsandboxed.
If this policy is not set, the default configuration for the audio sandbox will be used, which may differ per platform.
This policy is intended to give enterprises flexibility to disable the audio sandbox if they use security software setups that interfere with the sandbox.</string><string id="AutoLaunchProtocolsFromOrigins">Define a list of protocols that can launch an external application from listed origins without prompting the user</string><string id="AutoLaunchProtocolsFromOrigins_Explain">Allows you to set a list of protocols, and for each protocol an associated list of allowed origin patterns, that can launch an external application without prompting the user. The trailing separator should not be included when listing the protocol, so list &quot;skype&quot; instead of &quot;skype:&quot; or &quot;skype://&quot;.

If this policy is set, a protocol will only be permitted to launch an external application without prompting by policy if the protocol is listed, and the origin of the site trying to launch the protocol matches one of the origin patterns in that protocol's allowed_origins list. If either condition is false the external protocol launch prompt will not be omitted by policy.

If this policy is not set, no protocols can launch without a prompt by default. Users may opt out of prompts on a per-protocol/per-site basis unless the ExternalProtocolDialogShowAlwaysOpenCheckbox policy is set to Disabled. This policy has no impact on per-protocol/per-site prompt exemptions set by users.

The origin matching patterns use a similar format to those for the 'URLBlocklist' policy, which are documented at https://support.google.com/chrome/a?p=url_blocklist_filter_format.

However, origin matching patterns for this policy cannot contain &quot;/path&quot; or &quot;@query&quot; elements. Any pattern that does contain a &quot;/path&quot; or &quot;@query&quot; element will be ignored.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=AutoLaunchProtocolsFromOrigins for more information about schema and formatting.


Example value:

[
  {
    &quot;allowed_origins&quot;: [
      &quot;example.com&quot;,
      &quot;http://www.example.com:8080&quot;
    ],
    &quot;protocol&quot;: &quot;spotify&quot;
  },
  {
    &quot;allowed_origins&quot;: [
      &quot;https://example.com&quot;,
      &quot;https://.mail.example.com&quot;
    ],
    &quot;protocol&quot;: &quot;teams&quot;
  },
  {
    &quot;allowed_origins&quot;: [
      &quot;*&quot;
    ],
    &quot;protocol&quot;: &quot;outlook&quot;
  }
]</string><string id="AutoOpenAllowedForURLs">URLs where AutoOpenFileTypes can apply</string><string id="AutoOpenAllowedForURLs_Explain">List of URLs specifying which urls AutoOpenFileTypes will apply to. This policy has no impact on automatically open values set by users.

If this policy is set, files will only automatically open by policy if the url is part of this set and the file type is listed in AutoOpenFileTypes. If either condition is false the download won't automatically open by policy.

If this policy isn't set, all downloads where the file type is in AutoOpenFileTypes will automatically open.

A URL pattern has to be formatted according to https://support.google.com/chrome/a?p=url_blocklist_filter_format.

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string><string id="AutoOpenAllowedForURLsDesc">URLs where AutoOpenFileTypes can apply</string><string id="AutoOpenFileTypes">List of file types that should be automatically opened on download</string><string id="AutoOpenFileTypes_Explain">List of file types that should be automatically opened on download. The leading separator should not be included when listing the file type, so list &quot;txt&quot; instead of &quot;.txt&quot;.

Files with types that should be automatically opened will still be subject to the enabled safe browsing checks and won't be opened if they fail those checks.

If this policy isn't set, only file types that a user has already specified to automatically be opened will do so when downloaded.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

Example value:

exe
txt</string><string id="AutoOpenFileTypesDesc">List of file types that should be automatically opened on download</string><string id="AutofillAddressEnabled">Enable AutoFill for addresses</string><string id="AutofillAddressEnabled_Explain">Setting the policy to True or leaving it unset gives users control of Autofill for addresses in the UI.

Setting the policy to False means Autofill never suggests or fills address information, nor does it save additional address information that users submit while browsing the web.</string><string id="AutofillCreditCardEnabled">Enable AutoFill for credit cards</string><string id="AutofillCreditCardEnabled_Explain">Setting the policy to True or leaving it unset means users can control autofill suggestions for credit cards in the UI.

Setting the policy to False means autofill never suggests or fills credit card information, nor will it save additional credit card information that users might submit while browsing the web.</string><string id="AutoplayAllowed">Allow media autoplay</string><string id="AutoplayAllowed_Explain">Setting the policy to True lets Google Chrome autoplay media. Setting the policy to False stops Google Chrome from autoplaying media.

 By default, Google Chrome doesn't autoplay media. But, for certain URL patterns, you can use the AutoplayAllowlist policy to change this setting.

If this policy changes while Google Chrome is running, it only applies to newly opened tabs.</string><string id="AutoplayAllowlist">Allow media autoplay on a allowlist of URL patterns</string><string id="AutoplayAllowlist_Explain">Setting the policy lets videos play automatically (without user consent) with audio content in Google Chrome. If AutoplayAllowed policy is set to True, then this policy has no effect. If AutoplayAllowed is set to False, then any URL patterns set in this policy can still play. If this policy changes while Google Chrome is running, it only applies to newly opened tabs.

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

https://www.example.com
[*.]example.edu</string><string id="AutoplayAllowlistDesc">Allow media autoplay on a allowlist of URL patterns</string><string id="BackgroundModeEnabled">Continue running background apps when Google Chrome is closed</string><string id="BackgroundModeEnabled_Explain">Setting the policy to Enabled turns background mode on. In background mode, a Google Chrome process is started on OS sign-in and keeps running when the last browser window is closed, allowing background apps and the browsing session to remain active. The background process displays an icon in the system tray and can always be closed from there.

Setting the policy to Disabled turns background mode off.

If you set the policy, users can't change it in the browser settings. If unset, background mode is off at first, but users can change it.</string><string id="BatterySaverModeAvailability">Enable Battery Saver Mode</string><string id="BatterySaverModeAvailability_Explain">This policy enables or disables the Battery Saver Mode setting.
On Chrome, this setting makes it so that frame rate is throttled to lower power consumption. If this policy is unset, the end user can control this setting in chrome://settings/performance.
On ChromeOS, this setting makes it so that frame rate and CPU frequency are throttled, backlights are dimmed, and Android is put in Battery Saver Mode. On devices with multiple CPUs, some CPUs will be turned off.
The different levels are:
Disabled (0): Battery Saver Mode will be disabled.
EnabledBelowThreshold (1): Battery Saver Mode will be enabled when the device is on battery power and battery level is low.
EnabledOnBattery (2): This value is deprecated as of M121. From M121 onwards, values will be      treated as EnabledBelowThreshold.
</string><string id="BatterySaverModeAvailability_Disabled">Battery Saver Mode will be disabled.</string><string id="BatterySaverModeAvailability_EnabledBelowThreshold">Battery Saver Mode will be enabled when the device is on battery power and battery level is low.</string><string id="BatterySaverModeAvailability_EnabledOnBattery">This value is deprecated as of M121. In M121 and after, values will be treated as EnabledBelowThreshold.</string><string id="BlockThirdPartyCookies">Block third party cookies</string><string id="BlockThirdPartyCookies_Explain">Setting the policy to Enabled prevents webpage elements that aren't from the domain that's in the browser's address bar from setting cookies. Setting the policy to Disabled lets those elements set cookies and prevents users from changing this setting.

Leaving it unset turns third-party cookies on, but users can change this setting.</string><string id="BookmarkBarEnabled">Enable Bookmark Bar</string><string id="BookmarkBarEnabled_Explain">Setting the policy to True displays a bookmark bar in Google Chrome. Setting the policy to False means users never see the bookmark bar.

If you set the policy, users can't change it. If not set, users decide whether to use this function.</string><string id="BrowserAddPersonEnabled">Enable add person in user manager</string><string id="BrowserAddPersonEnabled_Explain">If this policy is set to true or not configured, Google Chrome and Lacros will allow to add a new person from the user manager.

If this policy is set to false, Google Chrome and Lacros will not allow adding a new person from the user manager.</string><string id="BrowserGuestModeEnabled">Enable guest mode in browser</string><string id="BrowserGuestModeEnabled_Explain">If this policy is set to Enabled or not configured, Google Chrome will enable guest logins. Guest logins are Google Chrome profiles where all windows are in incognito mode.

If this policy is set to Disabled, Google Chrome will not allow guest profiles to be started.</string><string id="BrowserGuestModeEnforced">Enforce browser guest mode</string><string id="BrowserGuestModeEnforced_Explain">Setting the policy to Enabled means Google Chrome enforces guest sessions and prevents profile sign-ins. Guest sign-ins are Google Chrome profiles where windows are in Incognito mode.

Setting the policy to Disabled, leaving it unset, or disabling browser Guest mode (through BrowserGuestModeEnabled) allows the use of new and existing profiles.</string><string id="BrowserLabsEnabled">Browser experiments icon in toolbar</string><string id="BrowserLabsEnabled_Explain">Setting the policy to Enabled or leaving the policy unset means that users can access browser experimental features through an icon in the toolbar

Setting the policy to Disabled removes the browser experimental features icon from the toolbar.

chrome://flags and any other means of turning off and on browser features will still behave as expected regardless of whether this policy is Enabled or Disabled.</string><string id="BrowserLegacyExtensionPointsBlocked">Block Browser Legacy Extension Points</string><string id="BrowserLegacyExtensionPointsBlocked_Explain">Setting the policy to Enabled or leaving it unset will permit Google Chrome to apply the additional extension point security mitigation to block legacy extension points in the Browser process.

Setting the policy to Disabled has a detrimental effect on Google Chrome's security and stability as unknown and potentially hostile code can load inside Google Chrome's browser process. Only turn off the policy if there are compatibility issues with third-party software that must run inside Google Chrome's browser process.

Note: Read more about Process mitigation policies ( https://chromium.googlesource.com/chromium/src/+/HEAD/docs/design/sandbox.md#Process-mitigation-policies ).</string><string id="BrowserNetworkTimeQueriesEnabled">Allow queries to a Google time service</string><string id="BrowserNetworkTimeQueriesEnabled_Explain">Setting the policy to Enabled or leaving it unset means Google Chrome send occasional queries to a Google server to retrieve an accurate timestamp.

Setting the policy to Disabled stops Google Chrome from sending these queries.</string><string id="BrowserSignin">Browser sign in settings</string><string id="BrowserSignin_Explain">This policy controls the sign-in behavior of the browser. It allows you to specify if the user can sign in to Google Chrome with their account and use account related services like Google Chrome Sync.

If the policy is set to &quot;Disable browser sign-in&quot; then the user cannot sign in to the browser and use account-based services. In this case browser-level features like Google Chrome Sync cannot be used and will be unavailable. On iOS, if the user was signed in and the policy is set to &quot;Disabled&quot; they will be signed out immediately. On other platforms, they will be signed out the next time they run Google Chrome. On all platforms, their local profile data like bookmarks, passwords etc. will be preserved and still usable. The user will still be able to sign into and use Google web services like Gmail.

If the policy is set to &quot;Enable browser sign-in,&quot; then the user is allowed to sign in to the browser. On all platforms except iOS, the user is automatically signed in to the browser when signed in to Google web services like Gmail. Being signed in to the browser means the user's account information will be kept by the browser. However, it does not mean that Google Chrome Sync will be turned on by default; the user must separately opt-in to use this feature. Enabling this policy will prevent the user from turning off the setting that allows browser sign-in. To control the availability of Google Chrome Sync, use the SyncDisabled policy.

If the policy is set to &quot;Force browser sign-in&quot; the user is presented with an account selection dialog and has to choose and sign in to an account to use the browser. This ensures that for managed accounts the policies associated with the account are applied and enforced. The default value of BrowserGuestModeEnabled will be set to disabled. Note that existing unsigned profiles will be locked and inaccessible after enabling this policy. For more information, see help center article: https://support.google.com/chrome/a/answer/7572556 . This option is not supported on Linux nor Android, where it will fall back to &quot;Enable browser sign-in&quot; if used.

If this policy is not set then the user can decide if they want to enable browser sign-in in the Google Chrome settings and use it as they see fit.</string><string id="BrowserSignin_Disable">Disable browser sign-in</string><string id="BrowserSignin_Enable">Enable browser sign-in</string><string id="BrowserSignin_Force">Force users to sign-in to use the browser</string><string id="BrowserThemeColor">Configure the color of the browser's theme</string><string id="BrowserThemeColor_Explain">This policy allows admins to configure the color of Google Chrome's theme. The input string should be a valid hex color string matching the format &quot;#RRGGBB&quot;.

Setting the policy to a valid hex color causes a theme based on that color to be automatically generated and applied to the browser. Users won't be able to change the theme set by the policy.

Leaving the policy unset lets users change their browser's theme as preferred.

Example value: #FFFFFF</string><string id="BrowsingDataLifetime">Browsing Data Lifetime Settings</string><string id="BrowsingDataLifetime_Explain">Configures browsing data lifetime settings for Google Chrome. This policy allows admins to configure (per data-type) when data is deleted by the browser. This is useful for customers that work with sensitive customer data.

Warning: Setting this policy can impact and permanently remove local personal data. It is recommended to test your settings before deploying to prevent accidental deletion of personal data.

The available data types are 'browsing_history', 'download_history', 'cookies_and_other_site_data', 'cached_images_and_files', 'password_signin', 'autofill', 'site_settings' and 'hosted_app_data'. 'download_history' and 'hosted_app_data' are not supported on Android.

The browser will automatically remove data of selected types that is older than 'time_to_live_in_hours'. The minimum value that can be set is 1 hour.

The deletion of expired data will happen 15 seconds after the browser starts then every 30 minutes while the browser is running.

Until Chrome 114, this policy required the SyncDisabled policy to be set to true. Starting Chrome 115, setting this policy will disable sync for the respective data types if neither `Chrome Sync` is disabled by setting the SyncDisabled policy nor BrowserSignin is disabled.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=BrowsingDataLifetime for more information about schema and formatting.


Example value:

[
  {
    &quot;data_types&quot;: [
      &quot;browsing_history&quot;
    ],
    &quot;time_to_live_in_hours&quot;: 24
  },
  {
    &quot;data_types&quot;: [
      &quot;password_signin&quot;,
      &quot;autofill&quot;
    ],
    &quot;time_to_live_in_hours&quot;: 12
  }
]</string><string id="BuiltInDnsClientEnabled">Use built-in DNS client</string><string id="BuiltInDnsClientEnabled_Explain">This policy controls which software stack is used to communicate with the DNS server: the Operating System DNS client, or Google Chrome's built-in DNS client. This policy does not affect which DNS servers are used: if, for example, the operating system is configured to use an enterprise DNS server, that same server would be used by the built-in DNS client. It also does not control if DNS-over-HTTPS is used; Google Chrome will always use the built-in resolver for DNS-over-HTTPS requests. Please see the DnsOverHttpsMode policy for information on controlling DNS-over-HTTPS.

If this policy is set to Enabled or is left unset, the built-in DNS client will be used.

If this policy is set to Disabled, the built-in DNS client will only be used when DNS-over-HTTPS is in use.</string><string id="CORSNonWildcardRequestHeadersSupport">CORS non-wildcard request headers support</string><string id="CORSNonWildcardRequestHeadersSupport_Explain">Configures support of CORS non-wildcard request headers.

Google Chrome version 97 introduces support for CORS non-wildcard request headers. When scripts make a cross-origin network request via fetch() and XMLHttpRequest with a script-added Authorization header, the header must be explicitly allowed by the Access-Control-Allow-Headers header in the CORS preflight response. &quot;Explicitly&quot; here means that the wild card symbol &quot;*&quot; doesn't cover the Authorization header. See https://chromestatus.com/feature/5742041264816128 for more detail.

If this policy is not set, or set to True, Google Chrome will support the CORS non-wildcard request headers and behave as described above.

When this policy is set to False, chrome will allow the wildcard symbol (&quot;*&quot;) in the Access-Control-Allow-Headers header in the CORS preflight response to cover the Authorization header.

This Enterprise policy is temporary; it's intended to be removed in the future.</string><string id="CertificateTransparencyEnforcementDisabledForCas">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string><string id="CertificateTransparencyEnforcementDisabledForCas_Explain">Setting the policy turns off enforcement of Certificate Transparency disclosure requirements for a list of subjectPublicKeyInfo hashes. Enterprise hosts can keep using certificates that otherwise wouldn't be trusted (because they weren't properly publicly disclosed). To turn off enforcement, the hash must meet one of these conditions:

* It's of the server certificate's subjectPublicKeyInfo.

* It's of a subjectPublicKeyInfo that appears in a Certificate Authority (CA) certificate in the certificate chain. That CA certificate is constrained through the X.509v3 nameConstraints extension, one or more directoryName nameConstraints are present in the permittedSubtrees, and the directoryName has an organizationName attribute.

* It's of a subjectPublicKeyInfo that appears in a CA certificate in the certificate chain, the CA certificate has one or more organizationName attributes in the certificate Subject, and the server's certificate has the same number of organizationName attributes, in the same order, and with byte-for-byte identical values.

Specify a subjectPublicKeyInfo hash by linking the hash algorithm name, a slash, and the Base64 encoding of that hash algorithm applied to the DER-encoded subjectPublicKeyInfo of the specified certificate. Base64 encoding format matches that of an SPKI Fingerprint. The only recognized hash algorithm is sha256; others are ignored.

Leaving the policy unset means that if certificates requiring disclosure through Certificate Transparency aren't disclosed, then Google Chrome doesn't trust those certificates.

Example value:

sha256/AAAAAAAAAAAAAAAAAAAAAA==
sha256//////////////////////w==</string><string id="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</string><string id="CertificateTransparencyEnforcementDisabledForUrls">Disable Certificate Transparency enforcement for a list of URLs</string><string id="CertificateTransparencyEnforcementDisabledForUrls_Explain">Setting the policy turns off Certificate Transparency disclosure requirements for the hostnames in the specified URLs. While making it harder to detect misissued certificates, hosts can keep using certificates that otherwise wouldn't be trusted (because they weren't properly publicly disclosed).

Leaving the policy unset means that if certificates requiring disclosure through Certificate Transparency aren't disclosed, then Google Chrome doesn't trust those certificates.

A URL pattern follows this format ( https://support.google.com/chrome/a?p=url_blocklist_filter_format ). However, because the validity of certificates for a given hostname is independent of the scheme, port, or path, Google Chrome only considers the hostname portion of the URL. Wildcard hosts aren't supported.

Example value:

example.com
.example.com</string><string id="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</string><string id="ChromeForTestingAllowed">Allow Chrome for Testing</string><string id="ChromeForTestingAllowed_Explain">Controls whether users may use Chrome for Testing.

If this policy is set to Enabled or not set, users may install and run Chrome for Testing.

If this policy is set to Disabled, users are not allowed to run Chrome for Testing. Users will still be able to install Chrome for Testing, however it will not run with the profiles where this policy is set to Disabled.</string><string id="ChromeVariations">Determine the availability of variations</string><string id="ChromeVariations_Explain">Configuring this policy allows to specify which variations are allowed to be applied in Google Chrome.

Variations provide a means for offering modifications to Google Chrome without shipping a new version of the browser by selectively enabling or disabling already existing features. See https://support.google.com/chrome/a?p=Manage_the_Chrome_variations_framework for more information.

Setting the VariationsEnabled (value 0), or leaving the policy not set allows all variations to be applied to the browser.

Setting the CriticalFixesOnly (value 1), allows only variations considered critical security or stability fixes to be applied to Google Chrome.

Setting the VariationsDisabled (value 2), prevent all variations from being applied to the browser. Please note that this mode can potentially prevent the Google Chrome developers from providing critical security fixes in a timely manner and is thus not recommended.</string><string id="ChromeVariations_VariationsEnabled">Enable all variations</string><string id="ChromeVariations_CriticalFixesOnly">Enable variations concerning critical fixes only</string><string id="ChromeVariations_VariationsDisabled">Disable all variations</string><string id="ClearBrowsingDataOnExitList">Clear Browsing Data on Exit</string><string id="ClearBrowsingDataOnExitList_Explain">Configures a list of browsing data types that should be deleted when the user closes all browser windows.

Warning: Setting this policy can impact and permanently remove local personal data. It is recommended to test your settings before deploying to prevent accidental deletion of personal data.

The available data types are browsing history (browsing_history), download history (download_history), cookies (cookies_and_other_site_data), cache(cached_images_and_files), autofill (autofill), passwords (password_signin), site settings (site_settings) and hosted apps data (hosted_app_data). This policy does not take precedence over AllowDeletingBrowserHistory.

Until Chrome 114, this policy required the SyncDisabled policy to be set to true. Starting Chrome 115, setting this policy will disable sync for the respective data types if neither `Chrome Sync` is disabled by setting the SyncDisabled policy nor BrowserSignin is disabled.

If for some reason the data deletion has started and did not complete, the browsing data will be cleared the next time the profile is loaded.

If Google Chrome does not exit cleanly (for example, if the browser or the OS crashes), the browsing data will not be cleared since the browser closing was not a result of the use closing all the browser windows.

Example value:

browsing_history
download_history
cookies_and_other_site_data
cached_images_and_files
password_signin
autofill
site_settings
hosted_app_data</string><string id="ClearBrowsingDataOnExitListDesc">Clear Browsing Data on Exit</string><string id="ClickToCallEnabled">Enable the Click to Call Feature</string><string id="ClickToCallEnabled_Explain">Enable the Click to Call feature which allows users to send phone numbers from Chrome Desktops to an Android device when the user is Signed-in. For more information, see help center article: https://support.google.com/chrome/answer/9430554?hl=en.

If this policy is set to enabled, the capability of sending phone numbers to Android devices will be enabled for the Chrome user.

If this policy is set to disabled, the capability of sending phone numbers to Android devices will be disabled for the Chrome user.

If you set this policy, users cannot change or override it.

If this policy is left unset, the Click to Call feature is enabled by default.</string><string id="CloudManagementEnrollmentMandatory">Enable mandatory cloud management enrollment</string><string id="CloudManagementEnrollmentMandatory_Explain">Setting the policy to Enabled mandates Chrome Enterprise Core browser enrollment and blocks Google Chrome launch process if failed.

Setting the policy to Disabled or leaving it unset renders Chrome Enterprise Core browser enrollment optional and doesn't block Google Chrome launch process if failed.

Machine scope cloud policy enrollment on desktop uses this policy. See https://support.google.com/chrome/a/answer/9301891 for details.</string><string id="CloudManagementEnrollmentToken">The enrollment token of cloud policy</string><string id="CloudManagementEnrollmentToken_Explain">Setting the policy means Google Chrome tries to register itself with Chrome Enterprise Core browser management. The value of this policy is an enrollment token you can retrieve from the Google Admin console.

See https://support.google.com/chrome/a/answer/9301891 for details.

Example value: 37185d02-e055-11e7-80c1-9a214cf093ae</string><string id="CloudPolicyOverridesPlatformPolicy">Google Chrome cloud policy overrides Platform policy.</string><string id="CloudPolicyOverridesPlatformPolicy_Explain">Setting the policy to Enabled means cloud policy takes precedence if it conflicts with platform policy.

Setting the policy to Disabled or leaving it unset means platform policy takes precedence if it conflicts with cloud policy.

This mandatory policy affects machine scope cloud policies.

This policy is specific to Google Chrome and does not affect Google Update because they are independent applications.
Google Update has a separate policy with the same name.</string><string id="CloudUserPolicyMerge">Enables merging of user cloud policies into machine-level policies</string><string id="CloudUserPolicyMerge_Explain">Setting the policy to Enabled allows policies associated with a managed account to be merged into machine-level policies.

Setting the policy to Disabled or leaving it unset prevents user-level cloud policies from being merged with policies from any other sources.

Only policies originating from secure users can take precedence. A secure user is affiliated with the organization that manages their browser using Chrome Enterprise Core. All other user-level policies will have default precedence.

Policies that need to be merged also need to be set in either PolicyListMultipleSourceMergeList or PolicyDictionaryMultipleSourceMergeList. This policy will be ignored if neither of the two aforementioned policies is configured.</string><string id="CloudUserPolicyOverridesCloudMachinePolicy">Allow user cloud policies to override Chrome Browser Cloud Management policies.</string><string id="CloudUserPolicyOverridesCloudMachinePolicy_Explain">Setting the policy to Enabled allows policies associated with a managed account to take precedence if they conflict with Chrome Enterprise Core browser policies.

Setting the policy to Disabled or leaving it unset causes user-level cloud policies to have default priority.

Only policies originating from secure users can take precedence. A secure user is affiliated with the organization that manages their browser using Chrome Enterprise Core. All other user-level policies will have default precedence.

The policy can be combined with CloudPolicyOverridesPlatformPolicy. If both policies are enabled, user cloud policies will also take precedence over conflicting platform policies.</string><string id="CommandLineFlagSecurityWarningsEnabled">Enable security warnings for command-line flags</string><string id="CommandLineFlagSecurityWarningsEnabled_Explain">Setting the policy to Enabled or leaving it unset means security warnings appear when potentially dangerous command-line flags are used to launch Chrome.

Setting the policy to Disabled prevents security warnings from appearing when Chrome is launched with potentially dangerous command-line flags.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.</string><string id="ComponentUpdatesEnabled">Enable component updates in Google Chrome</string><string id="ComponentUpdatesEnabled_Explain">Enables component updates for all components in Google Chrome when not set or set to enabled.

If set to disabled, updates to components are disabled. However, some components are exempt from this policy: updates to any component that does not contain executable code and is critical for the security of the browser will not be disabled.
Examples of such components include the certificate revocation lists and subresource filters.</string><string id="DNSInterceptionChecksEnabled">DNS interception checks enabled</string><string id="DNSInterceptionChecksEnabled_Explain">This policy configures a local switch that can be used to disable DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.

This detection may not be necessary in an enterprise environment where the network configuration is known, since it causes some amount of DNS and HTTP traffic on start-up and each DNS configuration change.

When this policy is not set, or is enabled, the DNS interception checks are performed. When explicitly disabled, they're not.</string><string id="DefaultBrowserSettingEnabled">Set Google Chrome as Default Browser</string><string id="DefaultBrowserSettingEnabled_Explain">Setting the policy to True has Google Chrome always check whether it's the default browser on startup and, if possible, automatically register itself. Setting the policy to False stops Google Chrome from ever checking if it's the default and turns user controls off for this option.

Leaving the policy unset means Google Chrome lets users control whether it's the default and, if not, whether user notifications should appear.

Note: For Microsoft®Windows® administrators, turning this setting on only works for machines running Windows 7. For later versions, you must deploy a &quot;default application associations&quot; file that makes Google Chrome the handler for the https and http protocols (and, optionally, the ftp protocol and other file formats). See Chrome Help ( https://support.google.com/chrome?p=make_chrome_default_win ).</string><string id="DefaultDownloadDirectory">Set default download directory</string><string id="DefaultDownloadDirectory_Explain">Setting the policy changes the default directory that Chrome downloads files to, but users can change the directory.

Leaving the policy unset means Chrome uses its platform-specific default directory.

This policy has no effect if the policy DownloadDirectory is set.

Note: See a list of variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: /home/${user_name}/Downloads</string><string id="DefaultSearchProviderContextMenuAccessAllowed">Allow default search provider context menu search access</string><string id="DefaultSearchProviderContextMenuAccessAllowed_Explain">Enables the use of a default search provider on the context menu.

If you set this policy to disabled the search context menu item that relies on your default search provider will not be available.

If this policy is set to enabled or not set, the context menu item for your default search provider will be available.

The policy value is only appled when the DefaultSearchProviderEnabled policy is enabled, and is not applicable otherwise.</string><string id="DesktopSharingHubEnabled">Enable desktop sharing in the omnibox and 3-dot menu</string><string id="DesktopSharingHubEnabled_Explain">Setting the policy to True or leaving it unset lets users share or save the current webpage using actions provided by the desktop sharing hub. The sharing hub is accessed through either an omnibox icon or the 3-dot menu.

Setting the policy to False removes the sharing icon from the omnibox and the entry from the 3-dot menu.</string><string id="DeveloperToolsAvailability">Control where Developer Tools can be used</string><string id="DeveloperToolsAvailability_Explain">Setting the policy to 0 (the default) means you can access the developer tools and the JavaScript console, but not in the context of extensions installed by enterprise policy or, since version 114 and if this is a managed user, extensions built into the browser. Setting the policy to 1 means you can access the developer tools and the JavaScript console in all contexts, including that of extensions installed by enterprise policy. Setting the policy to 2 means you can't access developer tools, and you can't inspect website elements.

This setting also turns off keyboard shortcuts and menu or context menu entries to open developer tools or the JavaScript console.

As of Google Chrome version 99, this setting also controls entry points for the 'View page source' feature. If you set this policy to 'DeveloperToolsDisallowed' (value 2), users cannot access source viewing via keyboard shortcut or the context menu. To fully block source viewing, you must also add 'view-source:*' to the URLBlocklist policy.

As of Google Chrome version 119, this setting also controls whether developer mode for Isolated Web Apps can be activated and used.

As of Google Chrome version 128, this setting will not control developer mode on extensions page if ExtensionDeveloperModeSettings policy is set.</string><string id="DeveloperToolsAvailability_DeveloperToolsDisallowedForForceInstalledExtensions">Disallow usage of the Developer Tools on apps and extensions installed by enterprise policy or, since version 114 and if this is a managed user, extensions built into the browser. Allow usage of the Developer Tools in other contexts</string><string id="DeveloperToolsAvailability_DeveloperToolsAllowed">Allow usage of the Developer Tools</string><string id="DeveloperToolsAvailability_DeveloperToolsDisallowed">Disallow usage of the Developer Tools</string><string id="Disable3DAPIs">Disable support for 3D graphics APIs</string><string id="Disable3DAPIs_Explain">Setting the policy to True (or setting HardwareAccelerationModeEnabled to False) prevents webpages from accessing the WebGL API, and plugins can't use the Pepper 3D API.

Setting the policy to False or leaving it unset lets webpages use the WebGL API and plugins use the Pepper 3D API, but the browser's default settings might still require command line arguments to use these APIs.</string><string id="DisableScreenshots">Disable taking screenshots</string><string id="DisableScreenshots_Explain">Setting the policy to Enabled disallows screenshots taken with keyboard shortcuts
or extension APIs. Setting the policy to Disabled or not set allows screenshots.

Note that on Microsoft® Windows®, macOS and Linux,
this does not prevent screenshots that are taken with operating system or third party applications.</string><string id="DiskCacheDir">Set disk cache directory</string><string id="DiskCacheDir_Explain">Setting the policy has Google Chrome use the directory you provide for storing cached files on the disk—whether or not users specify the --disk-cache-dir flag.

If not set, Google Chrome uses the default cache directory, but users can change that setting with the --disk-cache-dir command line flag.

Google Chrome manages the contents of a volume's root directory. So to avoid data loss or other errors, do not set this policy to the root directory or any directory used for other purposes. See the variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: ${user_home}/Chrome_cache</string><string id="DiskCacheSize">Set disk cache size in bytes</string><string id="DiskCacheSize_Explain">Setting the policy to None has Google Chrome use the default cache size for storing cached files on the disk. Users can't change it.

If you set the policy, Google Chrome uses the cache size you provide—whether or not users specify the --disk-cache-size flag. (Values below a few megabytes are rounded up.)

If not set, Google Chrome uses the default size. Users can change that setting using the --disk-cache-size flag.

Note: The value specified in this policy is used as a hint to various cache subsystems in the browser. Therefore the actual total disk consumption of all caches will be higher but within the same order of magnitude as the value specified.</string><string id="DnsOverHttpsMode">Controls the mode of DNS-over-HTTPS</string><string id="DnsOverHttpsMode_Explain">Controls the mode of the DNS-over-HTTPS resolver. Please note that this
policy will only set the default mode for each query. The mode may be
overridden for special types of queries such as requests to resolve a
DNS-over-HTTPS server hostname.

The &quot;off&quot; mode will disable
DNS-over-HTTPS.

The &quot;automatic&quot; mode will send
DNS-over-HTTPS queries first if a DNS-over-HTTPS server is available and
may fallback to sending insecure queries on error.

The &quot;secure&quot; mode will only send
DNS-over-HTTPS queries and will fail to resolve on error.

On Android Pie and above, if DNS-over-TLS
is active, Google Chrome will not
send insecure DNS requests.

If this policy is unset, for managed devices DNS-over-HTTPS queries will not
be sent. Otherwise, the browser may send DNS-over-HTTPS requests to a
resolver associated with the user's configured system resolver.

Example value: off</string><string id="DnsOverHttpsMode_off">Disable DNS-over-HTTPS</string><string id="DnsOverHttpsMode_automatic">Enable DNS-over-HTTPS with insecure fallback</string><string id="DnsOverHttpsMode_secure">Enable DNS-over-HTTPS without insecure fallback</string><string id="DnsOverHttpsTemplates">Specify URI template of desired DNS-over-HTTPS resolver</string><string id="DnsOverHttpsTemplates_Explain">The URI template of the desired DNS-over-HTTPS resolver. To specify multiple DNS-over-HTTPS resolvers, separate the corresponding URI templates with spaces.

If the DnsOverHttpsMode is set to &quot;secure&quot; then this policy must be set and not empty. On Google ChromeOS only, either this policy or the DnsOverHttpsTemplatesWithIdentifiers must be set, otherwise the DNS resolution will fail.

If the DnsOverHttpsMode is set to &quot;automatic&quot; and this policy is set then the URI templates specified will be used; if this policy is unset then hardcoded mappings will be used to attempt to upgrade the user's current DNS resolver to a DoH resolver operated by the same provider.

If the URI template contains a dns variable, requests to the resolver will use GET; otherwise requests will use POST.

Incorrectly formatted templates will be ignored.

Example value: https://dns.example.net/dns-query{?dns}</string><string id="DomainReliabilityAllowed">Allow reporting of domain reliability related data</string><string id="DomainReliabilityAllowed_Explain">If this policy is set false, domain reliability diagnostic data reporting is disabled and no data is sent to Google.
If this policy is set true or not set, domain reliability diagnostic data reporting will follow the behavior of MetricsReportingEnabled for Google Chrome or DeviceMetricsReportingEnabled for Google ChromeOS.</string><string id="DownloadDirectory">Set download directory</string><string id="DownloadDirectory_Explain">Setting the policy sets up the directory Chrome uses for downloading files. It uses the provided directory, whether or not users specify one or turned on the flag to be prompted for download location every time.

This policy overrides the DefaultDownloadDirectory policy.

Leaving the policy unset means Chrome uses the default download directory, and users can change it.

On Google ChromeOS it's possible to set it only to Google Drive directories.

Note: See a list of variables you can use ( https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables ).

Example value: /home/${user_name}/Downloads</string><string id="DownloadRestrictions">Allow download restrictions</string><string id="DownloadRestrictions_Explain">Setting the policy means users can't bypass download security decisions.

There are many types of download warnings within Chrome, which roughly break down into these categories (learn more about Safe Browsing verdicts https://support.google.com/chrome/?p=ib_download_blocked):

* Malicious, as flagged by the Safe Browsing server
* Uncommon or unwanted, as flagged by the Safe Browsing server
* A dangerous file type (e.g. all SWF downloads and many EXE downloads)

Setting the policy blocks different subsets of these, depending on it's value:

0: No special restrictions. Default.

1: Blocks malicious files flagged by the Safe Browsing server AND Blocks all dangerous file types. Only recommended for OUs/browsers/users that have a high tolerance for False Positives.

2: Blocks malicious files flagged by the Safe Browsing server AND Blocks uncommon or unwanted files flagged by the Safe Browsing server AND Blocks all dangerous file types. Only recommended for OUs/browsers/users that have a high tolerance for False Positives.

3: Blocks all downloads. Not recommended, except for special use cases.

4: Blocks malicious files flagged by the Safe Browsing server, does not block dangerous file types. Recommended.

Note: These restrictions apply to downloads triggered from webpage content, as well as the Download link… menu option. They don't apply to the download of the currently displayed page or to saving as PDF from the printing options. Read more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string><string id="DownloadRestrictions_DefaultDownloadSecurity">No special restrictions. Default.</string><string id="DownloadRestrictions_BlockDangerousDownloads">Block malicious downloads and dangerous file types.</string><string id="DownloadRestrictions_BlockPotentiallyDangerousDownloads">Block malicious downloads, uncommon or unwanted downloads and dangerous file types.</string><string id="DownloadRestrictions_BlockAllDownloads">Block all downloads.</string><string id="DownloadRestrictions_BlockMaliciousDownloads">Block malicious downloads. Recommended.</string><string id="DynamicCodeSettings">Dynamic Code Settings</string><string id="DynamicCodeSettings_Explain">This policy controls the dynamic code settings for Google Chrome.

Disabling dynamic code improves the security of Google Chrome by preventing potentially hostile dynamic code and third-party code from making changes to Google Chrome's behavior, but might cause compatibility issues with third-party software (e.g. certain printer drivers) that must run inside the browser process.

If the policy is set to 0 - Default or left unset then Google Chrome will use the default settings.

If the policy is set to 1 - DisabledForBrowser then the Google Chrome browser process will be prevented from creating dynamic code.

Note: Read more about process mitigation policies ( https://chromium.googlesource.com/chromium/src/+/HEAD/docs/design/sandbox.md#Process-mitigation-policies ).</string><string id="DynamicCodeSettings_Default">Default dynamic code settings</string><string id="DynamicCodeSettings_DisabledForBrowser">Prevent the browser process from creating dynamic code</string><string id="EditBookmarksEnabled">Enable or disable bookmark editing</string><string id="EditBookmarksEnabled_Explain">Setting the policy to True or leaving it unset lets users add, remove, or modify bookmarks.

Setting the policy to False means users can't add, remove, or modify bookmarks. They can still use existing bookmarks.</string><string id="EnableExperimentalPolicies">Enables experimental policies</string><string id="EnableExperimentalPolicies_Explain">Allows Google Chrome to load experimental policies.

WARNING: Experimental policies are unsupported and subject to change or be removed without notice in future version of the browser!

An experimental policy may not be finished or still have known or unknown defects. It may be changed or even removed without any notification. By enabling experimental policies, you could lose browser data or compromise your security or privacy.

If a policy is not in the list and it's not officially released, its value will be ignored on Beta and Stable channel.

If a policy is in the list and it's not officially released, its value will be applied.

This policy has no effect on already released policies.

Example value:

ExtensionInstallAllowlist
ExtensionInstallBlocklist</string><string id="EnableExperimentalPoliciesDesc">Enables experimental policies</string><string id="EnableOnlineRevocationChecks">Enable online OCSP/CRL checks</string><string id="EnableOnlineRevocationChecks_Explain">Setting the policy to True means online OCSP/CRL checks are performed.

Setting the policy to False or leaving it unset means Google Chrome won't perform online revocation checks in Google Chrome 19 and later.

Note: OCSP/CRL checks provide no effective security benefit.</string><string id="EncryptedClientHelloEnabled">Enable TLS Encrypted ClientHello</string><string id="EncryptedClientHelloEnabled_Explain">Encrypted ClientHello (ECH) is an extension to TLS to encrypt sensitive fields of the ClientHello and improve privacy.

If this policy is not configured, or is set to enabled, Google Chrome will follow the default rollout process for ECH. If it is disabled, Google Chrome will not enable ECH.

When the feature is enabled, Google Chrome may or may not use ECH depending on server support, availability of the HTTPS DNS record, or rollout status.

ECH is an evolving protocol, so Google Chrome's implementation is subject to change. As such, this policy is a temporary measure to control the initial experimental implementation. It will be replaced with final controls as the protocol finalizes.</string><string id="EnterpriseCustomLabel">Set a custom enterprise label</string><string id="EnterpriseCustomLabel_Explain">This policy controls a custom label used to identify managed profiles. For managed profiles, this label will be shown next to the avatar in the toolbar. The custom label will not be translated.

When this policy is applied, any strings that surpass 16 characters will be truncated with a “...” Please refrain from using extended names.

This policy can only be set as a user policy.

Note that this policy has no effect if the EnterpriseProfileBadgeToolbarSettings policy is set to hide_expanded_enterprise_toolbar_badge (value 1).

Example value: Chromium</string><string id="EnterpriseHardwarePlatformAPIEnabled">Enables managed extensions to use the Enterprise Hardware Platform API</string><string id="EnterpriseHardwarePlatformAPIEnabled_Explain">Setting the policy to True lets extensions installed by enterprise policy use the Enterprise Hardware Platform API.

Setting the policy to False or leaving it unset prevents extensions from using this API.

Note: This policy also applies to component extensions, such as the Hangout Services extension.</string><string id="EnterpriseLogoUrl">Enterprise Logo URL</string><string id="EnterpriseLogoUrl_Explain">A URL to an image that will be used as an enterprise badge for a managed profile. The URL must point to an image.

This policy can only be set as a user policy.

It is recommended to use the favicon (example https://www.google.com/favicon.ico) or an icon no smaller than 48 x 48 px.

Example value: https://example.com/image.png</string><string id="EnterpriseProfileBadgeToolbarSettings">Controls visibility of enterprise profile badge in the toolbar</string><string id="EnterpriseProfileBadgeToolbarSettings_Explain">For work and school profiles, the toolbar will show a &quot;Work&quot; or &quot;School&quot; label by default next to the toolbar avatar. The label will only be shown if the signed in account is managed.

Setting this policy to hide_expanded_enterprise_toolbar_badge (value 1) will hide the enterprise badge for a managed profile in the toolbar.

Leaving this policy unset or setting it to show_expanded_enterprise_toolbar_badge (value 0) will show the enterprise badge.

The label is customizable via the EnterpriseCustomLabel policy.</string><string id="EnterpriseProfileBadgeToolbarSettings_show_enterprise_toolbar_badge">Show expanded enterprise toolbar badge</string><string id="EnterpriseProfileBadgeToolbarSettings_hide_enterprise_toolbar_badge">Hide expanded enterprise toolbar badge</string><string id="EnterpriseProfileCreationKeepBrowsingData">Keep browsing data when creating enterprise profile by default</string><string id="EnterpriseProfileCreationKeepBrowsingData_Explain">If this policy is Enabled, the option to keep any existing browsing data when creating an enterprise profile will be checked by default.

If this policy is unset or Disabled, the option to keep any existing browsing data when creating an enterprise profile will not be checked by default.

Regardless of the value, the user will be able to decide whether or not to keep any existing browsing data when creating an enterprise profile.

This policy has no effect if the option to keep existing browsing data is not available; this happens if enterprise profile separation is strictly enforced, or if the data would be from an already managed profile.
</string><string id="EnterpriseSearchAggregatorSettings">Enterprise search aggregator settings (Beta)</string><string id="EnterpriseSearchAggregatorSettings_Explain">This is a beta feature. As this is a feature in development, available to our trusted testers, please be aware that it may undergo changes and updates.

This policy allows administrators to set a designated enterprise search aggregator that will provide search recommendations and results within the address bar when triggered by a specific keyword. Users can initiate a search by typing the keyword specified in the shortcut field with or without the @ prefix (e.g. @work), followed by Space or Tab, in the address bar.

The following fields are required: name, shortcut, search_url, suggest_url.

The name field corresponds to the search engine name shown to the user in the address bar.

The shortcut field corresponds to the keyword that the user enters to trigger the search. The shortcut can include plain words and characters, but cannot include spaces or start with the @ symbol. Shortcuts must be unique.

The search_url field specifies the URL on which to search. Enter the web address for the search engine's results page, and use '{searchTerms}' in place of the query.

The suggest_url field specifies the URL that provides search suggestions. If suggest_url contains '{searchTerms}', then Chrome will obtain search suggestions by a GET request to the URL replacing '{searchTerms}' with the user's search query. Otherwise, a POST request will be made and the user's query will be passed in the POST params under key 'query'.

The icon_url field specifies the URL to an image that will be used on the search suggestions. A default icon will be used when this field is not set. It's recommended to use a favicon (example https://www.google.com/favicon.ico). Supported image file formats: JPEG, PNG, and ICO.

The require_shortcut field specifies whether the address bar shortcut is required to see search recommendations. If this field is not set, the address bar shortcut is not required.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=EnterpriseSearchAggregatorSettings for more information about schema and formatting.


Example value:

{
  &quot;name&quot;: &quot;My Search Aggregator&quot;,
  &quot;shortcut&quot;: &quot;work&quot;,
  &quot;search_url&quot;: &quot;https://www.aggregator.com/search?q={searchTerms}&quot;,
  &quot;suggest_url&quot;: &quot;https://www.aggregator.com/suggest&quot;,
  &quot;icon_url&quot;: &quot;https://www.google.com/favicon.ico&quot;,
  &quot;require_shortcut&quot;: true
}</string><string id="ExemptDomainFileTypePairsFromFileTypeDownloadWarnings">Disable download file type extension-based warnings for specified file types on domains</string><string id="ExemptDomainFileTypePairsFromFileTypeDownloadWarnings_Explain">You can enable this policy to create a dictionary of file type extensions with a corresponding list of domains that will be exempted from file type extension-based download warnings. This lets enterprise administrators block file type extension-based download warnings for files that are associated with a listed domain. For example, if  the &quot;jnlp&quot; extension is associated with &quot;website1.com&quot;, users would not see a warning when downloading &quot;jnlp&quot; files from &quot;website1.com&quot;, but see a download warning when downloading &quot;jnlp&quot; files from &quot;website2.com&quot;.

Files with file type extensions specified for domains identified by this policy will still be subject to non-file type extension-based security warnings such as mixed-content download warnings and Safe Browsing warnings.

If you disable this policy or don't configure it, file types that trigger extension-based download warnings will show warnings to the user.

If you enable this policy:

* The URL pattern should be formatted according to https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

* The file type extension entered must be in lower-cased ASCII. The leading separator should not be included when listing the file type extension, so list &quot;jnlp&quot; should be used instead of &quot;.jnlp&quot;.

Example:

The following example value would prevent file type extension-based download warnings on &quot;exe&quot; and &quot;jnlp&quot; extensions for *.example.com domains, and on &quot;swf&quot; extensions for all domains. It will show the user a file type extension-based download warning on any other domain for exe and jnlp files, but not for swf files.

[
{ &quot;file_extension&quot;: &quot;jnlp&quot;, &quot;domains&quot;: [&quot;example.com&quot;] },
{ &quot;file_extension&quot;: &quot;exe&quot;, &quot;domains&quot;: [&quot;example.com&quot;] },
{ &quot;file_extension&quot;: &quot;swf&quot;, &quot;domains&quot;: [&quot;*&quot;] }
]

Note that while the preceding example shows the suppression of file type extension-based download warnings for &quot;swf&quot; files for all domains, applying suppression of such warnings for all domains for any dangerous file type extension is not recommended due to security concerns. It is shown in the example merely to demonstrate the ability to do so.

If this policy is enabled alongside DownloadRestrictions, then the exemptions to file type extension-based warnings specified by this policy take precedence over a DownloadRestrictions setting that would block dangerous file types. The exemptions specified by this policy only apply to the &quot;block dangerous file types&quot; behavior specified by values 1 and 2 of DownloadRestrictions.

For example, if this policy specifies an exemption for &quot;exe&quot; downloads from &quot;website1.com&quot;, and DownloadRestrictions is set to block malicious downloads and dangerous file types (value 1), then &quot;exe&quot; downloads from &quot;website1.com&quot; will be exempt from file type extension-based blocking but will still be blocked if they are malicious.

More information about DownloadRestrictions can be found at https://chromeenterprise.google/policies/?policy=DownloadRestrictions.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ExemptDomainFileTypePairsFromFileTypeDownloadWarnings for more information about schema and formatting.


Example value:

[
  {
    &quot;domains&quot;: [
      &quot;https://example.com&quot;,
      &quot;example2.com&quot;
    ],
    &quot;file_extension&quot;: &quot;jnlp&quot;
  },
  {
    &quot;domains&quot;: [
      &quot;*&quot;
    ],
    &quot;file_extension&quot;: &quot;swf&quot;
  }
]</string><string id="ExplicitlyAllowedNetworkPorts">Explicitly allowed network ports</string><string id="ExplicitlyAllowedNetworkPorts_Explain">There is a list of restricted ports built into Google Chrome. Connections to these ports will fail. This setting permits bypassing that list. The value is a comma-separated list of zero or more ports that outgoing connections will be permitted on.

Ports are restricted to prevent Google Chrome being used as a vector to exploit various network vulnerabilities. Setting this policy may expose your network to attacks. This policy is intended as a temporary workaround for errors with code &quot;ERR_UNSAFE_PORT&quot; while migrating a service running on a blocked port to a standard port (ie. port 80 or 443).

Malicious websites can easily detect that this policy is set, and for what ports, and use that information to target attacks.

Each port here is labelled with a date that it can be unblocked until. After that date the port will be restricted regardless of this setting.

Leaving the value empty or unset means that all restricted ports will be blocked. If there is a mixture of valid and invalid values, the valid ones will be applied.

This policy overrides the &quot;--explicitly-allowed-ports&quot; command-line option.

Example value:

10080</string><string id="ExplicitlyAllowedNetworkPortsDesc">Explicitly allowed network ports</string><string id="ExternalProtocolDialogShowAlwaysOpenCheckbox">Show an &quot;Always open&quot; checkbox in external protocol dialog.</string><string id="ExternalProtocolDialogShowAlwaysOpenCheckbox_Explain">This policy controls whether or not the &quot;Always open&quot; checkbox is shown on external protocol launch confirmation prompts.

     If this policy is set to True or not set, when an external protocol confirmation is shown, the user can select &quot;Always allow&quot; to skip all future confirmation prompts for the protocol on this site.

     If this policy is set to False, the &quot;Always allow&quot; checkbox is not displayed and the user will be prompted each time an external protocol is invoked.</string><string id="FeedbackSurveysEnabled">Specifies whether in-product Google Chrome surveys are shown to users.</string><string id="FeedbackSurveysEnabled_Explain">Google Chrome in-product surveys collect user feedback for the browser. Survey responses are not associated with user accounts.
When this policy is Enabled or not set, in-product surveys may be shown to users.
When this policy is Disabled, in-product surveys are not shown to users.

This policy has no effect if MetricsReportingEnabled is set to Disabled, which disables in-product surveys as well.</string><string id="FetchKeepaliveDurationSecondsOnShutdown">Fetch keepalive duration on Shutdown</string><string id="FetchKeepaliveDurationSecondsOnShutdown_Explain">Controls the duration (in seconds) allowed for keepalive requests on browser shutdown.

When specified, browser shutdown can be blocked up to the specified seconds,
to process keepalive (https://fetch.spec.whatwg.org/#request-keepalive-flag) requests.

The default value (0) means this feature is disabled.</string><string id="FileOrDirectoryPickerWithoutGestureAllowedForOrigins">Allow file or directory picker APIs to be called without prior user gesture</string><string id="FileOrDirectoryPickerWithoutGestureAllowedForOrigins_Explain">For security reasons, the
showOpenFilePicker(),
showSaveFilePicker() and
showDirectoryPicker() web APIs
require a prior user gesture (&quot;transient activation&quot;) to be called or will
otherwise fail.

With this policy set, admins can specify origins on which these APIs can be
called without prior user gesture.

For detailed information on valid url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is
not an accepted value for this policy.

If this policy is unset, all origins will require a prior user gesture to call
these APIs.

Example value:

https://www.example.com
[*.]example.edu</string><string id="FileOrDirectoryPickerWithoutGestureAllowedForOriginsDesc">Allow file or directory picker APIs to be called without prior user gesture</string><string id="ForceEphemeralProfiles">Ephemeral profile</string><string id="ForceEphemeralProfiles_Explain">If set to enabled this policy forces the profile to be switched to ephemeral mode. If this policy is specified as an OS policy (e.g. GPO on Windows) it will apply to every profile on the system; if the policy is set as a Cloud policy it will apply only to a profile signed in with a managed account.

In this mode the profile data is persisted on disk only for the length of the user session. Features like browser history, extensions and their data, web data like cookies and web databases are not preserved after the browser is closed. However this does not prevent the user from downloading any data to disk manually, save pages or print them.

If the user has enabled sync all this data is preserved in their sync profile just like with regular profiles. Incognito mode is also available if not explicitly disabled by policy.

If the policy is set to disabled or left not set signing in leads to regular profiles.</string><string id="ForceGoogleSafeSearch">Force Google SafeSearch</string><string id="ForceGoogleSafeSearch_Explain">Setting the policy to Enabled means SafeSearch in Google Search is always active, and users can't change this setting.

Setting the policy to Disabled or leaving it unset means SafeSearch in Google Search is not enforced.</string><string id="ForcePermissionPolicyUnloadDefaultEnabled">Controls whether unload event handlers can be disabled.</string><string id="ForcePermissionPolicyUnloadDefaultEnabled_Explain">unload event handlers are being deprecated. Whether they fire depends on the unload Permissions-Policy. Currently, they are allowed by policy by default. In the future they will gradually move to being disallowed by default and sites must explicitly enable them using Permissions-Policy headers. This enterprise policy can be used to opt out of this gradual deprecation by forcing the default to remain as enabled.

Pages may depend on unload event handlers to save data or signal the end of a user session to the server. This is not recommended as it is unreliable and impacts performance by blocking use of BackForwardCache. Recommended alternatives exist, however the unload event has been used for a long time. Some applications may still rely on them.

If this policy is set to false or not set, then unload events handlers will be gradually deprecated in-line with the deprecation rollout and sites which do not set Permissions-Policy header will stop firing `unload` events.

If this policy is set to true then unload event handlers will continue to work by default.

NOTE: This policy had an incorrectly documented default of `true` in M117. The unload event did and will not change in M117, so this policy has no effect in that version.
</string><string id="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</string><string id="ForceYouTubeRestrict_Explain">Setting the policy enforces a minimum Restricted mode on YouTube and prevents users from picking a less restricted mode. If you set it to:

* Strict, Strict Restricted mode on YouTube is always active.

* Moderate, the user may only pick Moderate Restricted mode and Strict Restricted mode on YouTube, but can't turn off Restricted mode.

* Off or if no value is set, Restricted mode on YouTube isn't enforced by Chrome. External policies such as YouTube policies might still enforce Restricted mode.</string><string id="ForceYouTubeRestrict_Off">Do not enforce Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Moderate">Enforce at least Moderate Restricted Mode on YouTube</string><string id="ForceYouTubeRestrict_Strict">Enforce Strict Restricted Mode for YouTube</string><string id="ForcedLanguages">Configure the content and order of preferred languages</string><string id="ForcedLanguages_Explain">This policy allows admins to configure the order of the preferred languages in Google Chrome's settings.

The order of the list will appear in the same order under the &quot;Order languages based on your preference&quot; section in chrome://settings/languages. Users won't be able to remove or reorder languages set by the policy, but will be able to add languages underneath those set by the policy. Users will also have full control over the browser's UI language and translation/spell check settings, unless enforced by other policies.

Leaving the policy unset lets users manipulate the entire list of preferred languages.

Example value:

en-US</string><string id="ForcedLanguagesDesc">Configure the content and order of preferred languages</string><string id="FullscreenAllowed">Allow fullscreen mode</string><string id="FullscreenAllowed_Explain">Setting the policy to True or leaving it unset means that, with appropriate permissions, users, apps, and extensions can enter Fullscreen mode (in which only web content appears).

Setting the policy to False means users, apps, and extensions can't enter Fullscreen mode.</string><string id="GloballyScopeHTTPAuthCacheEnabled">Enable globally scoped HTTP auth cache</string><string id="GloballyScopeHTTPAuthCacheEnabled_Explain">This policy configures a single global per profile cache with HTTP server authentication credentials.

If this policy is unset or disabled, the browser will use the default behavior of cross-site auth, which as of version 80, will be to scope HTTP server authentication credentials by top-level site, so if two sites use resources from the same authenticating domain, credentials will need to be provided independently in the context of both sites. Cached proxy credentials will be reused across sites.

If the policy is enabled, HTTP auth credentials entered in the context of one site will automatically be used in the context of another.

Enabling this policy leaves sites open to some types of cross-site attacks, and allows users to be tracked across sites even without cookies by adding entries to the HTTP auth cache using credentials embedded in URLs.

This policy is intended to give enterprises depending on the legacy behavior a chance to update their login procedures, and will be removed in the future.</string><string id="GoogleSearchSidePanelEnabled">Enable Google Search Side Panel</string><string id="GoogleSearchSidePanelEnabled_Explain">If set to Enabled or not set, Google Search Side Panel is allowed on all web pages.

If set to Disabled, Google Search Side Panel is not available on any webpage.

GenAI capabilities that are part of this feature are not available for Educational or Enterprise accounts.</string><string id="HSTSPolicyBypassList">List of names that will bypass the HSTS policy check</string><string id="HSTSPolicyBypassList_Explain">Setting the policy specifies a list of hostnames that bypass preloaded HSTS upgrades from http to https.

Only single-label hostnames are allowed in this policy, and this policy only applies to &quot;static&quot; HSTS-preloaded entries (for instance, &quot;app&quot;, &quot;new&quot;, &quot;search&quot;, &quot;play&quot;). This policy does not prevent HSTS upgrades for servers that have &quot;dynamically&quot; requested HSTS upgrades using a Strict-Transport-Security response header.

Supplied hostnames must be canonicalized: Any IDNs must be converted to their A-label format, and all ASCII letters must be lowercase. This policy only applies to the specific single-label hostnames specified, not to subdomains of those names.

Example value:

meet</string><string id="HSTSPolicyBypassListDesc">List of names that will bypass the HSTS policy check</string><string id="HardwareAccelerationModeEnabled">Use graphics acceleration when available</string><string id="HardwareAccelerationModeEnabled_Explain">Setting the policy to Enabled or leaving it unset turns on graphics acceleration, if available.

Setting the policy to Disabled turns off graphics acceleration.</string><string id="HeadlessMode">Control use of the Headless Mode</string><string id="HeadlessMode_Explain">Setting this policy to Enabled or leaving the policy unset allows use of the headless mode. Setting this policy to Disabled denies use of the headless mode.</string><string id="HeadlessMode_Enabled">Allow use of the Headless Mode</string><string id="HeadlessMode_Disabled">Do not allow use of the Headless Mode</string><string id="HideWebStoreIcon">Hide the web store from the New Tab Page and app launcher</string><string id="HideWebStoreIcon_Explain">Hide the Chrome Web Store app and footer link from the New Tab Page and Google ChromeOS app launcher.

When this policy is set to true, the icons are hidden.

When this policy is set to false or is not configured, the icons are visible.</string><string id="HighEfficiencyModeEnabled">Enable High Efficiency Mode</string><string id="HighEfficiencyModeEnabled_Explain">This policy enables or disables the High Efficiency Mode setting. This setting makes it so that tabs are discarded after some period of time in the background to reclaim memory.
If this policy is unset, the end user can control this setting in chrome://settings/performance.
</string><string id="HistoryClustersVisible">Show a view of Chrome history with groups of pages</string><string id="HistoryClustersVisible_Explain">This policy controls the visibility of the Chrome history page organized into groups of pages.

If the policy is set to Enabled, a Chrome history page organized into groups will be visible at chrome://history/grouped.

If the policy is set to Disabled, a Chrome history page organized into groups will not be visible at chrome://history/grouped.

If the policy is left unset, a Chrome history page organized into groups will be visible at chrome://history/grouped by default.

Please note, if ComponentUpdatesEnabled policy is set to Disabled, but HistoryClustersVisible is set to Enabled or unset, a Chrome history page organized into groups will still be available at chrome://history/grouped, but may be less relevant to the user.
</string><string id="HttpAllowlist">HTTP Allowlist</string><string id="HttpAllowlist_Explain">Setting the policy specifies a list of hostnames or hostname patterns (such as
'[*.]example.com') that will not be upgraded to HTTPS and will not show an
error interstitial if HTTPS-First Mode is enabled. Organizations can use this
policy to maintain access to servers that do not support HTTPS, without
needing to disable HTTPS Upgrades and/or HTTPS-First Mode.

Supplied hostnames must be canonicalized: Any IDNs must be converted to their
A-label format, and all ASCII letters must be lowercase.

Blanket host wildcards (i.e., &quot;*&quot; or &quot;[*]&quot;) are not allowed. Instead,
HTTPS-First Mode and HTTPS Upgrades should be explicitly disabled via their
specific policies.

Note: This policy does not apply to HSTS upgrades.

Example value:

testserver.example.com
[*.]example.org</string><string id="HttpAllowlistDesc">HTTP Allowlist</string><string id="HttpsOnlyMode">Allow HTTPS-Only Mode to be enabled</string><string id="HttpsOnlyMode_Explain">This policy controls whether users can enable HTTPS-Only Mode (Always Use Secure Connections) in Settings. HTTPS-Only Mode upgrades all navigations to HTTPS.
If this setting is not set or set to allowed, users will be allowed to enable HTTPS-Only Mode.
If this setting is set to disallowed, users will not be allowed to enable HTTPS-Only Mode.
If this setting is set to force_enabled, HTTPS-Only Mode will be enabled in Strict mode and users will not be able to disable it.
If this setting is set to force_balanced_enabled, HTTPS-Only Mode will be enabled in Balanced mode and users will not be able to disable it.
force_enabled is supported from M112 onwards, force_balanced_enabled is supported from M129 onwards.
If you set this policy to a value that is not supported by the version of Chrome that receives the policy, Chrome will default to the allowed setting.

The separate HttpAllowlist policy
can be used to exempt specific hostnames or hostname patterns from being
upgraded to HTTPS by this feature.

Example value: disallowed</string><string id="HttpsOnlyMode_allowed">Do not restrict users' HTTPS-Only Mode setting</string><string id="HttpsOnlyMode_disallowed">Do not allow users to enable any HTTPS-Only Mode</string><string id="HttpsOnlyMode_force_enabled">Force enable HTTPS-Only Mode in Strict mode</string><string id="HttpsOnlyMode_force_balanced_enabled">Force enable HTTPS-Only Mode in Balanced Mode</string><string id="HttpsUpgradesEnabled">Enable automatic HTTPS upgrades</string><string id="HttpsUpgradesEnabled_Explain">Google Chrome attempts to upgrade some
navigations from HTTP to HTTPS, when possible. This policy can be used to
disable this behavior. If set to &quot;true&quot; or left unset, this feature will be
enabled by default.

The separate HttpAllowlist policy
can be used to exempt specific hostnames or hostname patterns from being
upgraded to HTTPS by this feature.

See also the HttpsOnlyMode policy.</string><string id="ImportAutofillFormData">Import autofill form data from default browser on first run</string><string id="ImportAutofillFormData_Explain">Setting the policy to Enabled imports autofill form data from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no autofill form data is imported on first run.

Users can trigger an import dialog and the autofill form data checkbox will be checked or unchecked to match this policy's value.</string><string id="ImportBookmarks">Import bookmarks from default browser on first run</string><string id="ImportBookmarks_Explain">Setting the policy to Enabled imports bookmarks from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no bookmarks are imported on first run.

Users can trigger an import dialog and the bookmarks checkbox will be checked or unchecked to match this policy's value.</string><string id="ImportHistory">Import browsing history from default browser on first run</string><string id="ImportHistory_Explain">Setting the policy to Enabled imports browsing history from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means no browsing history is imported on first run.

Users can trigger an import dialog and the browsing history checkbox will be checked or unchecked to match this policy's value.</string><string id="ImportHomepage">Import of homepage from default browser on first run</string><string id="ImportHomepage_Explain">Setting the policy to Enabled imports the homepage from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means the homepage isn't imported on first run.

Users can trigger an import dialog and the homepage checkbox will be checked or unchecked to match this policy's value.</string><string id="ImportSavedPasswords">Import saved passwords from default browser on first run</string><string id="ImportSavedPasswords_Explain">This policy controls only the first run import behavior after installation. It enables more seamless transition to Google Chrome in environments where a different browser was extensively used prior to installing the browser. This policy does not affect password manager capabilities for Google accounts.

Setting the policy to Enabled imports saved passwords from the previous default browser on first run and manual importing from the settings page is also possible.
Setting the policy to Disabled means no saved passwords are imported on first run and manual importing from the Settings page is blocked.
Leaving the policy unset means no saved passwords are imported on first run but the user can choose to do that from the settings page.</string><string id="ImportSearchEngine">Import search engines from default browser on first run</string><string id="ImportSearchEngine_Explain">Setting the policy to Enabled imports the default search engine from the previous default browser on first run. Setting the policy to Disabled or leaving it unset means the default search engine isn't imported on first run.

Users can trigger an import dialog and the default search engine checkbox will be checked or unchecked to match this policy's value.</string><string id="IncognitoModeAvailability">Incognito mode availability</string><string id="IncognitoModeAvailability_Explain">Specifies whether the user may open pages in Incognito mode in Google Chrome.

If 'Enabled' is selected or the policy is left unset, pages may be opened in Incognito mode.

If 'Disabled' is selected, pages may not be opened in Incognito mode.

If 'Forced' is selected, pages may be opened ONLY in Incognito mode. Note that 'Forced' does not work for Android-on-Chrome

Note: On iOS, if the policy is changed during a session, it will only take effect on relaunch.</string><string id="IncognitoModeAvailability_Enabled">Incognito mode available</string><string id="IncognitoModeAvailability_Disabled">Incognito mode disabled</string><string id="IncognitoModeAvailability_Forced">Incognito mode forced</string><string id="IntensiveWakeUpThrottlingEnabled">Control the IntensiveWakeUpThrottling feature.</string><string id="IntensiveWakeUpThrottlingEnabled_Explain">When enabled the IntensiveWakeUpThrottling feature causes JavaScript timers in background tabs to be aggressively throttled and coalesced, running no more than once per minute after a page has been backgrounded for 5 minutes or more.

This is a web standards compliant feature, but it may break functionality
on some websites by causing certain actions to be delayed by up to a
minute. However, it results in significant CPU and battery savings when
enabled. See https://bit.ly/30b1XR4 for more details.

If this policy is set to enabled then the feature will be force enabled, and
users will not be able to override this.

If this policy is set to disabled then the feature will be force disabled, and
users will not be able to override this.

If this policy is left unset then the feature will be controlled by its
own internal logic, which can be manually configured by users.

Note that the policy is applied per renderer process, with the most recent
value of the policy setting in force when a renderer process starts. A full
restart is required to ensure that all loaded tabs receive a consistent
policy setting. It is harmless for processes to be running with different
values of this policy.
</string><string id="IntranetRedirectBehavior">Intranet Redirection Behavior</string><string id="IntranetRedirectBehavior_Explain">This policy configures behavior for intranet redirection via DNS interception checks. The checks attempt to discover whether the browser is behind a proxy that redirects unknown host names.

If this policy is not set, the browser will use the default behavior of DNS interception checks and intranet redirect suggestions. In M88, they are enabled by default but will be disabled by default in the future release.

DNSInterceptionChecksEnabled is a related policy that may also disable DNS interception checks; this policy is a more flexible version which may separately control intranet redirection infobars and may be expanded in the future.
If either DNSInterceptionChecksEnabled or this policy requests to disable interception checks, the checks will be disabled.</string><string id="IntranetRedirectBehavior_Default">Use default browser behavior.</string><string id="IntranetRedirectBehavior_DisableInterceptionChecksDisableInfobar">Disable DNS interception checks and did-you-mean &quot;http://intranetsite/&quot; infobars.</string><string id="IntranetRedirectBehavior_DisableInterceptionChecksEnableInfobar">Disable DNS interception checks; allow did-you-mean &quot;http://intranetsite/&quot; infobars.</string><string id="IntranetRedirectBehavior_EnableInterceptionChecksEnableInfobar">Allow DNS interception checks and did-you-mean &quot;http://intranetsite/&quot; infobars.</string><string id="IsolateOrigins">Enable Site Isolation for specified origins</string><string id="IsolateOrigins_Explain">Setting the policy means each of the named origins in a comma-separated list runs in a dedicated process. Each named origin's process will only be allowed to contain documents from that origin and its subdomains. For example, specifying https://a1.example.com/ allows https://a2.a1.example.com/ in the same process, but not https://example.com or https://b.example.com.

Since Google Chrome 77, you can also specify a range of origins to isolate using a wildcard. For example, specifying https://[*.]corp.example.com will give every origin underneath https://corp.example.com its own dedicated process, including https://corp.example.com itself, https://a1.corp.example.com, and https://a2.a1.corp.example.com.

Note that all sites (i.e., scheme plus eTLD+1, such as https://example.com) are already isolated by default on Desktop platforms, as noted in the SitePerProcess policy. This IsolateOrigins policy is useful to isolate specific origins at a finer granularity (e.g., https://a.example.com).

Also note that origins isolated by this policy will be unable to script other origins in the same site, which is otherwise possible if two same-site documents modify their document.domain values to match. Administrators should confirm this uncommon behavior is not used on an origin before isolating it.

Setting the policy to off or leaving it unset lets users change this setting.

Note: For Android, use the IsolateOriginsAndroid policy instead.

Example value: https://a.example.com/,https://othersite.org/,https://[*.]corp.example.com</string><string id="KeyboardFocusableScrollersEnabled">Enable keyboard focusable scrollers</string><string id="KeyboardFocusableScrollersEnabled_Explain">This policy provides a temporary opt-out for the new keyboard focusable scrollers behavior.

When this policy is Enabled or unset, scrollers without focusable children are keyboard-focusable by default.

When this policy is Disabled, scrollers will not be keyboard-focusable by default.

This policy is a temporary workaround, and will be removed in M135.</string><string id="LensDesktopNTPSearchEnabled">Allow Google Lens button to be shown in the search box on the New Tab page if supported.</string><string id="LensDesktopNTPSearchEnabled_Explain">Leaving the policy unset or setting it to Enabled allows users to view and use the Google Lens button in the search box on the New Tab page. Setting the policy to Disabled means users will not see the Google Lens button in the search box on the New Tab page.</string><string id="LensOverlaySettings">Settings for the Lens Overlay feature</string><string id="LensOverlaySettings_Explain">Lens Overlay lets users issue Google searches by interacting with a screenshot of the current page laid over the actual web contents.

There is no user setting to control this feature, it is generally made available to all users with Google as their default search engine unless disabled by this policy.

When policy is set to 0 - Enabled or not set, the feature will be available to users.
When policy is set to 1 - Disabled, the feature will not be available.</string><string id="LensOverlaySettings_Enabled">Enable</string><string id="LensOverlaySettings_Disabled">Disable</string><string id="LensRegionSearchEnabled">Allow Google Lens region search menu item to be shown in context menu if supported.</string><string id="LensRegionSearchEnabled_Explain">Leaving the policy unset or setting it to Enabled allows users to view and use the Google Lens region search menu item in the context menu. Setting the policy to Disabled means users will not see the Google Lens region search menu item in the context menu when Google Lens region search is supported.</string><string id="LookalikeWarningAllowlistDomains">Suppress lookalike domain warnings on domains</string><string id="LookalikeWarningAllowlistDomains_Explain">This policy prevents the display of lookalike URL warnings on the sites listed. These warnings are typically shown on sites that Google Chrome believes might be trying to spoof another site the user is familiar with.

If the policy is enabled and set to one or more domains, no lookalike warnings pages will be shown when the user visits pages on that domain.

If the policy is not set, or set to an empty list, warnings may appear on any site the user visits.

A hostname can be allowed with a complete host match, or any domain match. For example, a URL like &quot;https://foo.example.com/bar&quot; may have warnings suppressed if this list includes either &quot;foo.example.com&quot; or &quot;example.com&quot;.

Example value:

foo.example.com
example.org</string><string id="LookalikeWarningAllowlistDomainsDesc">Suppress lookalike domain warnings on domains</string><string id="ManagedAccountsSigninRestriction">Add restrictions on managed accounts</string><string id="ManagedAccountsSigninRestriction_Explain">
Default behavior (Policy unset)
When an account is added in the content area a small dialog may appear asking the user to create a new profile. This dialog is dismissable.

ManagedAccountsSigninRestriction = 'primary_account'
If a user signs into a Google service for the first time in a Google Chrome browser, a dialog will appear asking the user to create a new profile for their enterprise account. The user may click Cancel and get signed out, or Continue to create a new profile. Any existing browsing data will not be added to the new profile. The newly created profile is allowed to have secondary accounts, for example the user can sign into another account in the content area.

ManagedAccountsSigninRestriction = 'primary_account_strict'
This is the same behavior as 'primary_account' except the newly created profile is not allowed to have secondary accounts.

ManagedAccountsSigninRestriction = 'primary_account_keep_existing_data'
This is the same behavior as 'primary_account' except a checkbox will be added to the dialog to allow the user to keep local browsing data.
If the user checks the box, then the existing profile data becomes associated with the Managed account.
-  All existing browsing data will be present in the new profile.
-  This data includes bookmarks, history, password, autofill data, open tabs, cookies, cache, web storage, extensions, etc.
If the user does not check the box:
-  The old profile will continue to exist, no data will be lost.
-  A new profile will be created.

ManagedAccountsSigninRestriction = 'primary_account_strict_keep_existing_data'
This is the same behavior as 'primary_account_keep_existing_data' except the newly created profile is not allowed to have secondary accounts.

Example value: primary_account</string><string id="ManagedAccountsSigninRestriction_PrimaryAccount">A Managed account must be a primary account and importing existing browsing data is allowed at the time of profile creation</string><string id="ManagedAccountsSigninRestriction_PrimaryAccountStrict">A Managed account must be a primary account and have no secondary accounts and importing existing browsing data is allowed at the time of profile creation</string><string id="ManagedAccountsSigninRestriction_None">No restrictions on managed accounts</string><string id="ManagedAccountsSigninRestriction_PrimaryAccountKeepExistingData">A Managed account must be a primary account and the user can import existing data at the time of its creation</string><string id="ManagedAccountsSigninRestriction_PrimaryAccountStrictKeepExistingData">A Managed account must be a primary account and have no secondary accounts and the user can import existing data at the time of its creation</string><string id="ManagedBookmarks">Managed Bookmarks</string><string id="ManagedBookmarks_Explain">Setting the policy sets up a list of bookmarks where each one is a dictionary with the keys &quot;name&quot; and &quot;url&quot;. These keys hold the bookmark's name and target. Admins can set up a subfolder by defining a bookmark without a &quot;url&quot; key, but with an additional &quot;children&quot; key. This key also has a list of bookmarks, some of which can also be folders. Chrome amends incomplete URLs as if they were submitted through the address bar. For example, &quot;google.com&quot; becomes &quot;https://google.com/&quot;.

Users can't change the folders the bookmarks are placed in (though they can hide it from the bookmark bar). The default folder name for managed bookmarks is &quot;Managed bookmarks&quot; but it can be changed by adding a new sub-dictionary to the policy with a single key named &quot;toplevel_name&quot; with the desired folder name as its value. Managed bookmarks are not synced to the user account and extensions can't modify them.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ManagedBookmarks for more information about schema and formatting.


Example value:

[
  {
    &quot;toplevel_name&quot;: &quot;My managed bookmarks folder&quot;
  },
  {
    &quot;name&quot;: &quot;Google&quot;,
    &quot;url&quot;: &quot;google.com&quot;
  },
  {
    &quot;name&quot;: &quot;Youtube&quot;,
    &quot;url&quot;: &quot;youtube.com&quot;
  },
  {
    &quot;children&quot;: [
      {
        &quot;name&quot;: &quot;Chromium&quot;,
        &quot;url&quot;: &quot;chromium.org&quot;
      },
      {
        &quot;name&quot;: &quot;Chromium Developers&quot;,
        &quot;url&quot;: &quot;dev.chromium.org&quot;
      }
    ],
    &quot;name&quot;: &quot;Chrome links&quot;
  }
]</string><string id="ManagedConfigurationPerOrigin">Sets managed configuration values to websites to specific origins</string><string id="ManagedConfigurationPerOrigin_Explain">Setting the policy defines the return value of Managed Configuration API for given origin.

 Managed configuration API is a key-value configuration that can be accessed via navigator.managed.getManagedConfiguration() javascript call. This API is only available to origins which correspond to force-installed web applications via WebAppInstallForceList.

See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ManagedConfigurationPerOrigin for more information about schema and formatting.


Example value:

[
  {
    &quot;managed_configuration_hash&quot;: &quot;asd891jedasd12ue9h&quot;,
    &quot;managed_configuration_url&quot;: &quot;https://gstatic.google.com/configuration.json&quot;,
    &quot;origin&quot;: &quot;https://www.google.com&quot;
  },
  {
    &quot;managed_configuration_hash&quot;: &quot;djio12easd89u12aws&quot;,
    &quot;managed_configuration_url&quot;: &quot;https://gstatic.google.com/configuration2.json&quot;,
    &quot;origin&quot;: &quot;https://www.example.com&quot;
  }
]</string><string id="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server</string><string id="MaxConnectionsPerProxy_Explain">Setting the policy specifies the maximal number of simultaneous connections to the proxy server. Some proxy servers can't handle a high number of concurrent connections per client, which is solved by setting this policy to a lower value. The value should be lower than 100 and higher than 6. Some web apps are known to consume many connections with hanging GETs, so setting a value below 32 may lead to browser networking hangs if there are too many web apps with hanging connections open. Lower below the default at your own risk.

Leaving the policy unset means a default of 32 is used.</string><string id="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation</string><string id="MaxInvalidationFetchDelay_Explain">Setting the policy specifies the maximum delay in milliseconds between receiving a policy invalidation and fetching the new policy from the device management service. Valid values range from 1,000 (1 second) to 300,000 (5 minutes). Values outside this range will be clamped to the respective boundary.

Leaving the policy unset means Google Chrome uses the default value of 10 seconds.</string><string id="MediaRecommendationsEnabled">Enable Media Recommendations</string><string id="MediaRecommendationsEnabled_Explain">By default the browser will show media recommendations that are personalized to the user. Setting this policy to Disabled will result in these recommendations being hidden from the user. Setting this policy to Enabled or leaving it unset will result in the media recommendations being shown to the user.</string><string id="MemorySaverModeSavings">Change Memory Saver Mode Savings</string><string id="MemorySaverModeSavings_Explain">This policy changes the savings level of Memory Saver.

This only takes effect when Memory Saver is enabled through settings or through the HighEfficiencyModeEnabled policy, and will affect how heuristics are used to determine when to discard tabs. For example, reducing the lifetime of an inactive tab before discarding it can save memory, but it also means that tabs will be reloaded more frequently which can lead to bad user experience and cost more network traffic.

Setting the policy to 0 - Memory Saver will get moderate memory savings. Tabs become inactive after a longer period of time

Setting the policy to 1 - Memory Saver will get balanced memory savings. Tabs become inactive after an optimal period of time.

Setting the policy to 2 - Memory Saver will get maximum memory savings. Tabs become inactive after a shorter period of time.

If this policy is unset, the end user can control this setting in chrome://settings/performance.</string><string id="MemorySaverModeSavings_Moderate">Moderate memory savings.</string><string id="MemorySaverModeSavings_Balanced">Balanced memory savings.</string><string id="MemorySaverModeSavings_Maximum">Maximum memory savings.</string><string id="MetricsReportingEnabled">Enable reporting of usage and crash-related data</string><string id="MetricsReportingEnabled_Explain">When this policy is Enabled, anonymous reporting of usage and crash-related data about Google Chrome to Google is recommended to be enabled by default. Users will still be able to change this setting.

When this policy is Disabled, anonymous reporting is disabled and no usage or crash data is sent to Google. Users won't be able to change this setting.

When this policy is not set, users can choose the anonymous reporting behavior at installation or first run, and can change this setting later.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

(For Google ChromeOS, see DeviceMetricsReportingEnabled.)</string><string id="NTPCardsVisible">Show cards on the New Tab Page</string><string id="NTPCardsVisible_Explain">This policy controls the visibility of cards on the New Tab Page. Cards surface entry points to launch common user journeys based on the user's browsing behavior.

If the policy is set to Enabled, the New Tab Page will show cards if content is available.

If the policy is set to Disabled, the New Tab Page won't show cards.

If the policy is not set, the user can control the card visibility. The default is visible.
</string><string id="NTPCustomBackgroundEnabled">Allow users to customize the background on the New Tab page</string><string id="NTPCustomBackgroundEnabled_Explain">If the policy is set to false, the New Tab page won't allow users to customize the background. Any existing custom background will be permanently removed even if the policy is set to true later.

If the policy is set to true or unset, users can customize the background on the New Tab page.</string><string id="NTPMiddleSlotAnnouncementVisible">Show the middle slot announcement on the New Tab Page</string><string id="NTPMiddleSlotAnnouncementVisible_Explain">This policy controls the visibility of the middle slot announcement on the New Tab Page.

If the policy is set to Enabled, the New Tab Page will show the middle slot announcement if it is available.

If the policy is set to Disabled, the New Tab Page will not show the middle slot announcement even if it is available.
</string><string id="NTPOutlookCardVisible">Show Outlook Calendar card on the New Tab Page (Beta)</string><string id="NTPOutlookCardVisible_Explain">This is a beta feature.

This policy controls the visibility of the Outlook Card on the New Tab Page. The card will only be displayed on the New Tab Page if the policy is enabled and your organization authorized the usage of the Outlook Calendar data in the browser.

Outlook data will not be stored by the browser.

The Outlook card shows the next calendar event, along with a glanceable look at the rest of the day's meetings. It aims to address the issue of context switching and enhance productivity by giving users a shortcut to their next meeting.

The Microsoft Outlook card will require additional admin configuration. For detailed information on connecting the Chrome New Tab Page Card to Outlook, please see help article.

If the NTPCardsVisible is disabled, the Outlook Card will not be shown. If NTPCardsVisible is enabled, the Outlook card will be shown if this policy is also enabled and there is data to be shown. If NTPCardsVisible is unset, the Outlook card will be shown if this policy is also enabled, the user has the card enabled in Customize Chrome, and there is data to be shown.</string><string id="NTPSharepointCardVisible">Show SharePoint and OneDrive File Card on the New Tab Page (Beta)</string><string id="NTPSharepointCardVisible_Explain">This is a beta feature.

This policy controls the visibility of the SharePoint and OneDrive File Card on the New Tab Page. The card will only be displayed on the New Tab Page if the policy is enabled and your organization authorized the usage of the SharePoint and OneDrive File data in the browser.

SharePoint and OneDrive data will not be stored by the browser.

The SharePoint and OneDrive Files recommendation card shows a list of recommended files.  It aims to address the issue of context switching and enhance productivity by giving users a shortcut to their most important documents.

The Microsoft SharePoint and OneDrive card will require additional admin configuration. For detailed information on connecting the Chrome New Tab Page Card to Sharepoint, please see help article.

If the NTPCardsVisible is disabled, the SharePoint and OneDrive Card will not be shown. If NTPCardsVisible is enabled, the SharePoint and OneDrive card will be shown if this policy is also enabled and there is data to be shown. If NTPCardsVisible is unset, the SharePoint and OneDrive card will be shown if this policy is also enabled, the user has the card enabled in Customize Chrome, and there is data to be shown.</string><string id="NativeHostsExecutablesLaunchDirectly">Force Windows executable Native Messaging hosts to launch directly</string><string id="NativeHostsExecutablesLaunchDirectly_Explain">This policy controls whether native host executables launch directly on Windows.

Setting the policy to Enabled forces Google Chrome to launch native messaging hosts implemented as executables directly.

Setting the policy to Disabled will result in Google Chrome launching hosts using cmd.exe as an intermediary process.

Leaving the policy unset allows Google Chrome to decide which approach to use.</string><string id="NetworkPredictionOptions">Enable network prediction</string><string id="NetworkPredictionOptions_Explain">This policy controls network prediction in Google Chrome. It controls DNS prefetching, TCP, and SSL preconnection and prerendering of webpages.

If you set the policy, users can't change it. Leaving it unset turns on network prediction, but the user can change it.</string><string id="NetworkPredictionOptions_NetworkPredictionAlways">Predict network actions on any network connection</string><string id="NetworkPredictionOptions_NetworkPredictionWifiOnly">Predict network actions on any network that is not cellular.
(Deprecated in 50, removed in 52. After 52, if value 1 is set, it will be treated as 0 - predict network actions on any network connection.)</string><string id="NetworkPredictionOptions_NetworkPredictionNever">Do not predict network actions on any network connection</string><string id="NetworkServiceSandboxEnabled">Enable the network service sandbox</string><string id="NetworkServiceSandboxEnabled_Explain">This policy controls whether or not the network service process runs sandboxed.
If this policy is enabled, the network service process will run sandboxed.
If this policy is disabled, the network service process will run unsandboxed. This leaves users open to additional security risks related to running the network service unsandboxed.
If this policy is not set, the default configuration for the network sandbox will be used. This may vary depending on Google Chrome release, currently running field trials, and platform.
This policy is intended to give enterprises flexibility to disable the network sandbox if they use third party software that interferes with the network service sandbox.</string><string id="OriginAgentClusterDefaultEnabled">Allows origin-keyed agent clustering by default.</string><string id="OriginAgentClusterDefaultEnabled_Explain">This policy allows origin-keyed agent clustering by default.

The Origin-Agent-Cluster HTTP header controls whether a document is
isolated in an origin-keyed agent cluster, or in a site-keyed agent
cluster. This has security implications since an origin-keyed agent
cluster allows isolating documents by origin. The developer-visible
consequence of this is that the document.domain accessor can no longer
be set.

The default behaviour - when no Origin-Agent-Cluster header has been set -
changes in M111 from site-keyed to origin-keyed.

If this policy is enabled or not set, the browser will follow this
new default from that version on.

If this policy is disabled this change is reversed and
documents without Origin-Agent-Cluster headers will be assigned to
site-keyed agent clusters. As a consequence, the document.domain accessor
remains settable by default. This matches the legacy behaviour.

See https://developer.chrome.com/blog/immutable-document-domain/ for
additional details.</string><string id="OverrideSecurityRestrictionsOnInsecureOrigin">Origins or hostname patterns for which restrictions on insecure origins should not apply</string><string id="OverrideSecurityRestrictionsOnInsecureOrigin_Explain">Setting the policy specifies a list of origins (URLs) or hostname patterns (such as *.example.com) for which security restrictions on insecure origins won't apply. Patterns are only accepted for hostnames; URLs/origins with schemes must be exact strings. Organizations can specify origins for legacy applications that can't deploy TLS or set up a staging server for internal web development, so developers can test out features requiring secure contexts without having to deploy TLS on the staging server. This policy also prevents the origin from being labeled &quot;Not Secure&quot; in the address bar.

Setting a list of URLs in this policy amounts to setting the command-line flag --unsafely-treat-insecure-origin-as-secure to a comma-separated list of the same URLs. The policy overrides the command-line flag and UnsafelyTreatInsecureOriginAsSecure, if present.

For more information on secure contexts, see Secure Contexts ( https://www.w3.org/TR/secure-contexts ).

Example value:

http://testserver.example.com/
*.example.org</string><string id="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on insecure origins should not apply</string><string id="PaymentMethodQueryEnabled">Allow websites to query for available payment methods.</string><string id="PaymentMethodQueryEnabled_Explain">Allows you to set whether websites are allowed to check if the user has payment methods saved.

If this policy is set to disabled, websites that use PaymentRequest.canMakePayment or PaymentRequest.hasEnrolledInstrument API will be informed that no payment methods are available.

If the setting is enabled or not set then websites are allowed to check if the user has payment methods saved.</string><string id="PdfUseSkiaRendererEnabled">Use Skia renderer for PDF rendering</string><string id="PdfUseSkiaRendererEnabled_Explain">Controls whether the PDF viewer in Google Chrome uses Skia renderer.

When this policy is enabled, the PDF viewer uses Skia renderer.

When this policy is disabled, the PDF viewer uses its current AGG renderer.

When this policy is not set, the PDF renderer will be chosen by the browser.</string><string id="PdfViewerOutOfProcessIframeEnabled">Use out-of-process iframe PDF Viewer</string><string id="PdfViewerOutOfProcessIframeEnabled_Explain">Controls whether the PDF viewer in Google Chrome uses an out-of-process iframe (OOPIF). This will be the new PDF viewer architecture in the future, as it is simpler and makes adding new features easier. The existing GuestView PDF viewer is an outdated, complex architecture that is being deprecated.

When this policy is set to Enabled or not set, Google Chrome will be able to use the OOPIF PDF viewer architecture. Once Enabled or not set, the default behavior will be decided by Google Chrome.

When this policy is set to Disabled, Google Chrome will strictly use the existing GuestView PDF viewer. It embeds a web page with a separate frame tree into another web page.

This policy will be removed in the future, after the OOPIF PDF viewer feature has fully rolled out.</string><string id="PolicyAtomicGroupsEnabled">Enables the concept of policy atomic groups</string><string id="PolicyAtomicGroupsEnabled_Explain">Setting the policy to Enabled means policies coming from an atomic group that don't share the source with the highest priority from that group get ignored.

Setting the policy to Disabled means no policy is ignored because of its source. Policies are ignored only if there's a conflict, and the policy doesn't have the highest priority.

If this policy is set from a cloud source, it can't target a specific user.</string><string id="PolicyDictionaryMultipleSourceMergeList">Allow merging dictionary policies from different sources</string><string id="PolicyDictionaryMultipleSourceMergeList_Explain">Setting the policy allows merging of selected policies when they come from different sources, with the same scopes and level. This merging is in the first level keys of the dictionary from each source. The key coming from the highest priority source takes precedence.

Use the wildcard character '*' to allow merging of all supported dictionary policies.

If a policy is in the list and there's conflict between sources with:

* The same scopes and level: The values merge into a new policy dictionary.

* Different scopes or level: The policy with the highest priority applies.

If a policy isn't in the list and there's conflict between sources, scopes, or level, the policy with the highest priority applies.

Example value:

ExtensionSettings</string><string id="PolicyDictionaryMultipleSourceMergeListDesc">Allow merging dictionary policies from different sources</string><string id="PolicyListMultipleSourceMergeList">Allow merging list policies from different sources</string><string id="PolicyListMultipleSourceMergeList_Explain">Setting the policy allows merging of selected policies when they come from different sources, with the same scopes and level.

Use the wildcard character '*' to allow merging of all list policies.

If a policy is in the list and there's conflict between sources with:

* The same scopes and level: The values merge into a new policy list.

* Different scopes or level: The policy with the highest priority applies.

If a policy isn't in the list and there's conflict between sources, scopes, or level, the policy with the highest priority applies.

Example value:

ExtensionInstallAllowlist
ExtensionInstallBlocklist</string><string id="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</string><string id="PolicyRefreshRate">Refresh rate for user policy</string><string id="PolicyRefreshRate_Explain">Setting the policy specifies the period in milliseconds at which the device management service is queried for user policy information. Valid values range from 1,800,000 (30 minutes) to 86,400,000 (1 day). Values outside this range will be clamped to the respective boundary.

Leaving the policy unset uses the default value of 3 hours.

Note: Policy notifications force a refresh when the policy changes, making frequent refreshes unnecessary. So, if the platform supports these notifications, the refresh delay is 24 hours (ignoring defaults and the value of this policy).</string><string id="PostQuantumKeyAgreementEnabled">Enable post-quantum key agreement for TLS</string><string id="PostQuantumKeyAgreementEnabled_Explain">This policy configures whether Google Chrome will offer a post-quantum key agreement algorithm in TLS, using the ML-KEM NIST standard. Prior to Google Chrome 131, the algorithm was Kyber, an earlier draft iteration of the standard. This allows supporting servers to protect user traffic from being later decrypted by quantum computers.

If this policy is Enabled, Google Chrome will offer a post-quantum key agreement in TLS connections. User traffic will then be protected from quantum computers when communicating with compatible servers.

If this policy is Disabled, Google Chrome will not offer a post-quantum key agreement in TLS connections. User traffic will then be unprotected from quantum computers.

If this policy is not set, Google Chrome will follow the default rollout process for offering a post-quantum key agreement.

Offering a post-quantum key agreement is backwards-compatible. Existing TLS servers and networking middleware are expected to ignore the new option and continue selecting previous options.

However, devices that do not correctly implement TLS may malfunction when offered the new option. For example, they may disconnect in response to unrecognized options or the resulting larger messages. Such devices are not post-quantum-ready and will interfere with an enterprise's post-quantum transition. If encountered, administrators should contact the vendor for a fix.

This policy is a temporary measure and will be removed sometime after Google Chrome version 141. It may be Enabled to allow you to test for issues, and may be Disabled while issues are being resolved.</string><string id="ProfilePickerOnStartupAvailability">Profile picker availability on startup</string><string id="ProfilePickerOnStartupAvailability_Explain">Specifies whether the profile picker is enabled, disabled or forced at the browser startup.

By default the profile picker is not shown if the browser starts in guest or incognito mode, a profile directory and/or urls are specified by command line, an app is explicitly requested to open, the browser was launched by a native notification, there is only one profile available or the policy ForceBrowserSignin is set to true.

If 'Enabled' (0) is selected or the policy is left unset, the profile picker will be shown at startup by default, but users will be able to enable/disable it.

If 'Disabled' (1) is selected, the profile picker will never be shown, and users will not be able to change the setting.

If 'Forced' (2) is selected, the profile picker cannot be suppressed by the user. The profile picker will be shown even if there is only one profile available.</string><string id="ProfilePickerOnStartupAvailability_Enabled">Profile picker available at startup</string><string id="ProfilePickerOnStartupAvailability_Disabled">Profile picker disabled at startup</string><string id="ProfilePickerOnStartupAvailability_Forced">Profile picker forced at startup</string><string id="ProfileReauthPrompt">Prompt users to re-authenticate to the profile</string><string id="ProfileReauthPrompt_Explain">When set to DoNotPrompt or left unset, Google Chrome does not automatically prompt the user to re-authenticate to the browser.

When set to PromptInTab, when the user's authentication expires, immediately open a new tab with the Google login page. This only happens if using Chrome Sync.</string><string id="ProfileReauthPrompt_DoNotPrompt">Do not prompt for reauth</string><string id="ProfileReauthPrompt_PromptInTab">Prompt for reauth in a tab</string><string id="PromotionsEnabled">Enable showing promotional content</string><string id="PromotionsEnabled_Explain">Setting the policy to True or leaving it unset lets Google Chrome show users product promotional content.

Setting the policy to False prevents Google Chrome from showing product promotional content.

Setting the policy controls the presentation of promotional content, including the welcome pages that help users sign in to Google Chrome, set Google Chrome as users' default browser, or otherwise inform them of product features.</string><string id="PromptForDownloadLocation">Ask where to save each file before downloading</string><string id="PromptForDownloadLocation_Explain">Setting the policy to Enabled means users are asked where to save each file before downloading. Setting the policy to Disabled has downloads start immediately, and users aren't asked where to save the file.

Leaving the policy unset lets users change this setting.</string><string id="PromptOnMultipleMatchingCertificates">Prompt when multiple certificates match</string><string id="PromptOnMultipleMatchingCertificates_Explain">This policy controls whether the user is prompted to select a client certificate when more than one certificate matches AutoSelectCertificateForUrls.
If this policy is set to Enabled, the user is prompted to select a client certificate whenever the auto-selection policy matches multiple certificates.
If this policy is set to Disabled or not set, the user may only be prompted when no certificate matches the auto-selection.</string><string id="ProxySettings">Proxy settings</string><string id="ProxySettings_Explain">Setting the policy configures the proxy settings for Chrome and ARC-apps, which ignore all proxy-related options specified from the command line.

Leaving the policy unset lets users choose their proxy settings.

Setting the ProxySettings policy accepts the following fields:

* ProxyMode, which lets you specify the proxy server Chrome uses and prevents users from changing proxy settings

* ProxyPacUrl, a URL to a proxy .pac file, or a PAC script encoded as a data URL with MIME type application/x-ns-proxy-autoconfig

* ProxyPacMandatory, which prevents the network stack from falling back to direct connections with invalid or unavailable PAC script

* ProxyServer, a URL of the proxy server

* ProxyBypassList, a list of hosts for which the proxy will be bypassed

The ProxyServerMode field is deprecated in favor of the ProxyMode field. For ProxyMode, if you choose the value:

* direct, a proxy is never used and all other fields are ignored.

* system, the systems's proxy is used and all other fields are ignored.

* auto_detect, all other fields are ignored.

* fixed_servers, the ProxyServer and ProxyBypassList fields are used.

* pac_script, the ProxyPacUrl, ProxyPacMandatory and ProxyBypassList fields are used.

Note: For more detailed examples, visit The Chromium Projects ( https://www.chromium.org/developers/design-documents/network-settings/#command-line-options-for-proxy-settings ).
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=ProxySettings for more information about schema and formatting.


Example value:

{
  &quot;ProxyBypassList&quot;: &quot;https://www.example1.com,https://www.example2.com,https://internalsite/&quot;,
  &quot;ProxyMode&quot;: &quot;fixed_servers&quot;,
  &quot;ProxyServer&quot;: &quot;123.123.123.123:8080&quot;
}</string><string id="QRCodeGeneratorEnabled">Enable QR Code Generator</string><string id="QRCodeGeneratorEnabled_Explain">This policy enables the QR Code generator feature in Google Chrome.

If you enable this policy or don't configure it, the QR Code Generator feature is enabled.

If you disable this policy, the QR Code Generator feature is disabled.</string><string id="QuicAllowed">Allow QUIC protocol</string><string id="QuicAllowed_Explain">Setting the policy to Enabled or leaving it unset allows the use of QUIC protocol in Google Chrome.

Setting the policy to Disabled disallows the use of QUIC protocol.</string><string id="ReduceAcceptLanguageEnabled">Control Accept-Language Reduction</string><string id="ReduceAcceptLanguageEnabled_Explain">The Accept-Language HTTP request header and the JavaScript navigator.languages getter are planned for reduction for privacy reasons.
To facilitate testing and ensure compatibility, this policy allows you to enable or disable the Accept-Language Reduction feature.

If this policy is set to enabled or left unset, Accept-Language Reduction will be applied through field trials.
If this policy is set to disabled, field trials will not be able to activate Accept-Language Reduction.

For more information about this feature, please visit: https://github.com/explainers-by-googlers/reduce-accept-language.

NOTE: Only newly-started renderer processes will reflect changes to this policy while the browser is running.</string><string id="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</string><string id="RelaunchNotification_Explain">Notify users that Google Chrome must be relaunched or Google ChromeOS must be restarted to apply a pending update.

This policy setting enables notifications to inform the user that a browser relaunch or device restart is recommended or required. If not set, Google Chrome indicates to the user that a relaunch is needed via subtle changes to its menu, while Google ChromeOS indicates such via a notification in the system tray. If set to 'Recommended', a recurring warning will be shown to the user that a relaunch is recommended. The user can dismiss this warning to defer the relaunch. If set to 'Required', a recurring warning will be shown to the user indicating that a browser relaunch will be forced once the notification period passes. The default period is seven days for Google Chrome and four days for Google ChromeOS, and may be configured via the RelaunchNotificationPeriod policy setting.

The user's session is restored following the relaunch/restart.</string><string id="RelaunchNotification_Recommended">Show a recurring prompt to the user indicating that a relaunch is recommended</string><string id="RelaunchNotification_Required">Show a recurring prompt to the user indicating that a relaunch is required</string><string id="RelaunchNotificationPeriod">Set the time period for update notifications</string><string id="RelaunchNotificationPeriod_Explain">Allows you to set the time period, in milliseconds, over which users are notified that Google Chrome must be relaunched or that a Google ChromeOS device must be restarted to apply a pending update.

Over this time period, the user will be repeatedly informed of the need for an update. For Google ChromeOS devices, a restart notification appears in the system tray according to the RelaunchHeadsUpPeriod policy. For Google Chrome browsers, the app menu changes to indicate that a relaunch is needed once one third of the notification period passes. This notification changes color once two thirds of the notification period passes, and again once the full notification period has passed. The additional notifications enabled by the RelaunchNotification policy follow this same schedule.

If not set, the default period of 604800000 milliseconds (one week) is used.</string><string id="RelaunchWindow">Set the time interval for relaunch</string><string id="RelaunchWindow_Explain">Specify a target time window for the end of the relaunch notification period.

Users are notified of the need for a browser relaunch or device restart based on the RelaunchNotification and RelaunchNotificationPeriod policy settings. Browsers and devices are forcibly restarted at the end of the notification period when the RelaunchNotification policy is set to 'Required'. This RelaunchWindow policy can be used to defer the end of the notification period so that it falls within a specific time window.

If this policy is not set, the default target time window for Google ChromeOS is between 2 AM and 4 AM. The default target time window for Google Chrome is the whole day (i.e., the end of the notification period is never deferred).

Note: Though the policy can accept multiple items in entries, all but the first item are ignored.
Warning: Setting this policy may delay application of software updates.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=RelaunchWindow for more information about schema and formatting.


Example value:

{
  &quot;entries&quot;: [
    {
      &quot;duration_mins&quot;: 240,
      &quot;start&quot;: {
        &quot;hour&quot;: 2,
        &quot;minute&quot;: 15
      }
    }
  ]
}</string><string id="RemoteDebuggingAllowed">Allow remote debugging</string><string id="RemoteDebuggingAllowed_Explain">Controls whether users may use remote debugging.

If this policy is set to Enabled or not set, users may use remote debugging by specifying --remote-debugging-port and --remote-debugging-pipe command line switches.

If this policy is set to Disabled, users are not allowed to use remote debugging.</string><string id="RendererAppContainerEnabled">Enable Renderer App Container</string><string id="RendererAppContainerEnabled_Explain">Setting the policy to Enabled or leaving it unset means Renderer App Container configuration will be enabled on supported platforms.

Setting the policy to Disabled has a detrimental effect on the security and stability of Google Chrome as it will weaken the sandbox that renderer processes use. Only turn off the policy if there are compatibility issues with third-party software that must run inside renderer processes.

Note: Read more about Process mitigation policies ( https://chromium.googlesource.com/chromium/src/+/HEAD/docs/design/sandbox.md#Process-mitigation-policies ).</string><string id="RequireOnlineRevocationChecksForLocalAnchors">Require online OCSP/CRL checks for local trust anchors</string><string id="RequireOnlineRevocationChecksForLocalAnchors_Explain">Setting the policy to True means Google Chrome always performs revocation checking for successfully validated server certificates signed by locally installed CA certificates. If Google Chrome can't get revocation status information, Google Chrome treats these certificates as revoked (hard-fail).

Setting the policy to False or leaving it unset means Google Chrome uses existing online revocation-checking settings.

On macOS, this policy has no effect if the ChromeRootStoreEnabled policy is set to False.</string><string id="RestrictSigninToPattern">Restrict which Google accounts are allowed to be set as browser primary accounts in Google Chrome</string><string id="RestrictSigninToPattern_Explain">Contains a regular expression which is used to determine which Google accounts can be set as browser primary accounts in Google Chrome (i.e. the account that is chosen during the Sync opt-in flow).

An appropriate error is displayed if a user tries to set a browser primary account with a username that does not match this pattern.

If this policy is left not set or blank, then the user can set any Google account as a browser primary account in Google Chrome.

Example value: .*@example\.com</string><string id="RoamingProfileLocation">Set the roaming profile directory</string><string id="RoamingProfileLocation_Explain">Configures the directory that Google Chrome will use for storing the roaming copy of the profiles.

If you set this policy, Google Chrome will use the provided directory to store the roaming copy of the profiles if the RoamingProfileSupportEnabled policy has been enabled. If the RoamingProfileSupportEnabled policy is disabled or left unset the value stored in this policy is not used.

See https://www.chromium.org/administrators/policy-list-3/user-data-directory-variables for a list of variables that can be used.

On non-Windows platforms, this policy must be set for roaming profiles to work.

On Windows, if this policy is left unset, the default roaming profile path will be used.

Example value: ${roaming_app_data}\chrome-profile</string><string id="RoamingProfileSupportEnabled">Enable the creation of roaming copies for Google Chrome profile data</string><string id="RoamingProfileSupportEnabled_Explain">If you enable this setting, the settings stored in Google Chrome profiles like bookmarks, autofill data, passwords, etc. will also be written to a file stored in the Roaming user profile folder or a location specified by the Administrator through the RoamingProfileLocation policy. Enabling this policy disables cloud sync.

If this policy is disabled or left not set only the regular local profiles will be used.</string><string id="SSLErrorOverrideAllowed">Allow proceeding from the SSL warning page</string><string id="SSLErrorOverrideAllowed_Explain">Setting the policy to Enabled or leaving it unset lets users click through warning pages Google Chrome shows when users navigate to sites that have SSL errors.

Setting the policy to Disabled prevent users from clicking through any warning pages.</string><string id="SSLErrorOverrideAllowedForOrigins">Allow proceeding from the SSL warning page on specific origins</string><string id="SSLErrorOverrideAllowedForOrigins_Explain">If SSLErrorOverrideAllowed is Disabled, setting the policy lets you set a list of origin patterns that specify the sites where a user can click through warning pages Google Chrome shows when users navigate to sites that have SSL errors. Users will not be able to click through SSL warning pages on origins that are not on this list.

If SSLErrorOverrideAllowed is Enabled or unset, this policy does nothing.

Leaving the policy unset means SSLErrorOverrideAllowed applies for all sites.

For detailed information on valid input patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is not an accepted value for this policy. This policy only matches based on origin, so any path in the URL pattern is ignored.

Example value:

https://www.example.com
[*.]example.edu</string><string id="SSLErrorOverrideAllowedForOriginsDesc">Allow proceeding from the SSL warning page on specific origins</string><string id="SafeBrowsingForTrustedSourcesEnabled">Enable Safe Browsing for trusted sources</string><string id="SafeBrowsingForTrustedSourcesEnabled_Explain">Setting the policy to Enabled or leaving it unset means downloaded files are sent to be analyzed by Safe Browsing, even when it's from a trusted source.

Setting the policy to Disabled means downloaded files won't be sent to be analyzed by Safe Browsing when it's from a trusted source.

These restrictions apply to downloads triggered from webpage content, as well as the Download link menu option. These restrictions don't apply to the save or download of the currently displayed page or to saving as PDF from the printing options.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.</string><string id="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</string><string id="SafeSitesFilterBehavior_Explain">Setting the policy controls the SafeSites URL filter, which uses the Google Safe Search API to classify URLs as pornographic or not.

When this policy is set to:

* Do not filter sites for adult content, or not set, sites aren't filtered

* Filter sites for adult content, pornographic sites are filtered

The policy applies to both the URL the user navigates to and to iframes. The URLAllowlist policy takes precedence over this policy and can be used to override verdicts from the Google Safe Search API.</string><string id="SafeSitesFilterBehavior_SafeSitesFilterDisabled">Do not filter sites for adult content</string><string id="SafeSitesFilterBehavior_SafeSitesFilterEnabled">Filter sites for adult content</string><string id="SandboxExternalProtocolBlocked">Allow Chrome to block navigations toward external protocols in sandboxed iframes</string><string id="SandboxExternalProtocolBlocked_Explain">Chrome will block navigations toward external protocols inside
sandboxed iframe. See https://chromestatus.com/features/5680742077038592.

When True, this lets Chrome blocks those navigations.

When False, this prevents Chrome from blocking those navigations.

This defaults to True: security feature enabled.

This can be used by administrators who need more time to update their internal website affected by this new restriction. This Enterprise policy is temporary; it's intended to be removed after Google Chrome version 117.
</string><string id="SavingBrowserHistoryDisabled">Disable saving browser history</string><string id="SavingBrowserHistoryDisabled_Explain">Setting the policy to Enabled means browsing history is not saved, tab syncing is off and users can't change this setting.

Setting the policy to Disabled or leaving it unset saves browsing history.</string><string id="ScreenCaptureWithoutGestureAllowedForOrigins">Allow screen capture without prior user gesture</string><string id="ScreenCaptureWithoutGestureAllowedForOrigins_Explain">For security reasons, the
getDisplayMedia() web API requires
a prior user gesture (&quot;transient activation&quot;) to be called or will otherwise
fail.

With this policy set, admins can specify origins on which this API can be
called without prior user gesture.

For detailed information on valid url patterns, please see
https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. * is
not an accepted value for this policy.

If this policy is unset, all origins will require a prior user gesture to call
this API.

Example value:

https://www.example.com
[*.]example.edu</string><string id="ScreenCaptureWithoutGestureAllowedForOriginsDesc">Allow screen capture without prior user gesture</string><string id="ScrollToTextFragmentEnabled">Enable scrolling to text specified in URL fragments</string><string id="ScrollToTextFragmentEnabled_Explain">This feature allows for hyperlinks and address bar URL navigations to target specific text within a web page, which will be scrolled to once the loading of the web page is complete.

If you enable or don't configure this policy, web page scrolling to specific text fragments via URL will be enabled.

If you disable this policy, web page scrolling to specific text fragments via URL will be disabled.</string><string id="SearchSuggestEnabled">Enable search suggestions</string><string id="SearchSuggestEnabled_Explain">Setting the policy to True turns on search suggestions in Google Chrome's address bar. Setting the policy to False turns off these search suggestions.

Suggestions based on bookmarks or history are unaffected by the policy.

If you set the policy, users can't change it. If not set, search suggestions are on at first, but users can turn them off any time.</string><string id="SecurityKeyPermitAttestation">URLs/domains automatically permitted direct Security Key attestation</string><string id="SecurityKeyPermitAttestation_Explain">Setting the policy specifies WebAuthn RP IDs for which no prompt appears when attestation certificates from security keys are requested. A signal is also sent to the security key indicating that enterprise attestation may be used. Without this, when sites request attestation of security keys, users are prompted in Google Chrome version 65 and later.

Example value:

example.com</string><string id="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</string><string id="SelectParserRelaxationEnabled">Controls whether the new HTML parser behavior for the &lt;select&gt; element is enabled</string><string id="SelectParserRelaxationEnabled_Explain">The HTML parser is being changed to allow additional HTML tags inside the &lt;select&gt; element. This policy allows the old HTML parser behavior to be used until M136.

If this policy is enabled or not set, then the HTML parser will allow additional tags inside the &lt;select&gt; element.

If this policy is disabled, then the HTML parser will restrict which tags can be put inside the &lt;select&gt; element.</string><string id="ServiceWorkerToControlSrcdocIframeEnabled">Allow ServiceWorker to control srcdoc iframes</string><string id="ServiceWorkerToControlSrcdocIframeEnabled_Explain">https://github.com/w3c/ServiceWorker/issues/765 asks srcdoc iframe with
the &quot;allow-same-origin&quot; sandbox attribute to be under ServiceWorker control.

Setting the policy to Enabled or leaving it unset means
Google Chrome makes srcdoc iframes
with &quot;allow-same-origin&quot; sandbox attributes to be under ServiceWorker control.

Setting the policy to Disabled leaves the srcdoc iframe not controlled by
ServiceWorker.

This policy is intended to be temporary and will be removed in 2026.</string><string id="SharedArrayBufferUnrestrictedAccessAllowed">Specifies whether SharedArrayBuffers can be used in a non cross-origin-isolated context</string><string id="SharedArrayBufferUnrestrictedAccessAllowed_Explain">
Specifies whether SharedArrayBuffers can be used in a non cross-origin-isolated context. Google Chrome will require cross-origin isolation when using SharedArrayBuffers from Google Chrome 91 onward (2021-05-25) for Web Compatibility reasons. Additional details can be found on: https://developer.chrome.com/blog/enabling-shared-array-buffer/.

When set to Enabled, sites can use SharedArrayBuffer with no restrictions.

When set to Disabled or not set, sites can only use SharedArrayBuffers when cross-origin isolated.</string><string id="SharedClipboardEnabled">Enable the Shared Clipboard Feature</string><string id="SharedClipboardEnabled_Explain">Enable the Shared Clipboard feature which allows users to send text between Chrome Desktops and an Android device when Sync is enabled and the user is Signed-in.

If this policy is set to true, the capability of sending text, cross device, for chrome user is enabled.

If this policy is set to false, the capability of sending text, cross device, for chrome user is disabled.

If you set this policy, users cannot change or override it.

If this policy is left unset, the shared clipboard feature is enabled by default.

It is up to the admins to set policies in all platforms they care about. It's recommended to set this policy to one value in all platforms.</string><string id="SharedWorkerBlobURLFixEnabled">Make SharedWorker blob URL behavior aligned with the specification</string><string id="SharedWorkerBlobURLFixEnabled_Explain">Upon https://w3c.github.io/ServiceWorker/#control-and-use-worker-client,
workers should inherit controllers for the blob URL.  However, existing code
allows only DedicatedWorkers to inherit the controller, and SharedWorkers do
not inherit the controller.

Setting the policy to Enabled or leaving it unset means
Google Chrome inherit the controller
if a blob URL is used as a SharedWorker URL.

Setting the policy to Disabled leaves the behavior not aligned with the
specification as-is.

This policy is intended to be temporary and will be removed in the future.</string><string id="ShoppingListEnabled">Allow the shopping list feature to be enabled</string><string id="ShoppingListEnabled_Explain">This policy controls the availability of the shopping list feature.
If enabled, users will be presented with UI to track the price of the product displayed on the current page. The tracked product will be shown in the bookmarks side panel.
If this policy is set to Enabled or not set, the shopping list feature will be available to users.
If this policy is set to Disabled, the shopping list feature will be unavailable.
</string><string id="ShowAppsShortcutInBookmarkBar">Show the apps shortcut in the bookmark bar</string><string id="ShowAppsShortcutInBookmarkBar_Explain">Setting the policy to True displays the apps shortcut. Setting the policy to False means this shortcut never appears.

If you set the policy, users can't change it. If not set, users decide to show or hide the apps shortcut from the bookmark bar context menu.</string><string id="ShowFullUrlsInAddressBar">Show Full URLs</string><string id="ShowFullUrlsInAddressBar_Explain">This feature enables display of the full URL in the address bar.
If this policy is set to True, then the full URL will be shown in the address bar, including schemes and subdomains.
If this policy is set to False, then the default URL display will apply.
If this policy is left unset, then the default URL display will apply and the user will be able to toggle between default and full URL display with a context menu option.
</string><string id="SideSearchEnabled">Allow showing the most recent default search engine results page in a Browser side panel</string><string id="SideSearchEnabled_Explain">Setting the policy to Enabled or leaving the policy unset means that users can bring up their most recent default search engine results page in a side panel via toggling an icon in the toolbar.

Setting the policy to Disabled removes the icon from the toolbar that opens the side panel with the default search engine results page.</string><string id="SignedHTTPExchangeEnabled">Enable Signed HTTP Exchange (SXG) support</string><string id="SignedHTTPExchangeEnabled_Explain">Setting the policy to True or leaving it unset means Google Chrome will accept web contents served as Signed HTTP Exchanges.

Setting the policy to False prevents Signed HTTP Exchanges from loading.</string><string id="SigninInterceptionEnabled">Enable signin interception</string><string id="SigninInterceptionEnabled_Explain">This settings enables or disables signin interception.

When this policy not set or is enabled, the signin interception dialog triggers when a Google account is added on the web, and the user may benefit from moving this account to another (new or existing) profile.

When this is disabled, the signin interception dialog does not trigger.
When this is disabled, a dialog will still be shown if managed account profile separation is enforced by ManagedAccountsSigninRestriction.</string><string id="SitePerProcess">Require Site Isolation for every site</string><string id="SitePerProcess_Explain">Since Google Chrome 67, site isolation has been enabled by default on all Desktop platforms, causing every site to run in its own process. A site is a scheme plus eTLD+1 (e.g., https://example.com). Setting this policy to Enabled does not change that behavior; it only prevents users from opting out (for example, using Disable site isolation in chrome://flags). Since Google Chrome 76, setting the policy to Disabled or leaving it unset doesn't turn off site isolation, but instead allows users to opt out.

IsolateOrigins might also be useful for isolating specific origins at a finer granularity than site (e.g., https://a.example.com).

On Google ChromeOS version 76 and earlier, set the DeviceLoginScreenSitePerProcess device policy to the same value. (If the values don't match, a delay can occur when entering a user session.)

Note: For Android, use the SitePerProcessAndroid policy instead.</string><string id="SiteSearchSettings">Site search settings</string><string id="SiteSearchSettings_Explain">This policy provides a list of sites that users can quickly search using shortcuts in the address bar. Users can initiate a search by typing the shortcut or @shortcut (e.g. @work), followed by Space or Tab, in the address bar.

The following fields are required for each site: name, shortcut, url.

The name field corresponds to the site or search engine name to be shown to the user in the address bar.

The shortcut can include plain words and characters, but cannot include spaces or start with the @ symbol. Shortcuts must also be unique.

For each entry, the url field specifies the URL of the search engine used during a search with the corresponding keyword. The URL must include the string '{searchTerms}', replaced in the query by the user's search terms. Invalid entries and entries with duplicate shortcuts are ignored.

Site search entries configured as featured are displayed in the address bar when the user types &quot;@&quot;. Up to three entries can be selected as featured.

Users cannot edit or disable site search entries set by policy, but they can add new shortcuts for the same URL. In addition, users cannot create new site search entries with a shortcut previously created via this policy.

In case of a conflict with a shortcut previously created by the user, the user setting takes precedence. However, users can still trigger the option created by the policy by typing &quot;@&quot; in the search bar. For example, if the user already defined &quot;work&quot; as a shortcut to URL1 and the policy defines &quot;work&quot; as a shortcut to URL2, then typing &quot;work&quot; in the search bar will trigger a search to URL1, but typing &quot;@work&quot; in the search bar will trigger a search to URL2.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=SiteSearchSettings for more information about schema and formatting.


Example value:

[
  {
    &quot;featured&quot;: true,
    &quot;name&quot;: &quot;Google Wikipedia&quot;,
    &quot;shortcut&quot;: &quot;wikipedia&quot;,
    &quot;url&quot;: &quot;https://www.google.com/search?q=site%3Awikipedia.com+%s&quot;
  },
  {
    &quot;name&quot;: &quot;YouTube&quot;,
    &quot;shortcut&quot;: &quot;youtube&quot;,
    &quot;url&quot;: &quot;https://www.youtube.com/results?search_query=%s&quot;
  }
]</string><string id="SpellCheckServiceEnabled">Enable or disable spell checking web service</string><string id="SpellCheckServiceEnabled_Explain">Setting the policy to Enabled puts a Google web service in use to help resolve spelling errors. This policy only controls the use of the online service. Setting the policy to Disabled means this service is never used.

Leaving the policy unset lets users choose whether to use the spellcheck service.

The spell check can always use a downloaded dictionary locally unless the feature is disabled by SpellcheckEnabled in which case this policy will have no effect.</string><string id="SpellcheckEnabled">Enable spellcheck</string><string id="SpellcheckEnabled_Explain">Setting the policy to Enabled turns spellcheck on, and users can't turn it off. On Microsoft® Windows®, Google ChromeOS and Linux®, spellcheck languages can be switched on or off individually, so users can still turn spellcheck off by switching off every spellcheck language. To avoid that, use the SpellcheckLanguage to force-enable specific spellcheck languages.

Setting the policy to Disabled turns off spellcheck from all sources, and users can't turn it on. The SpellCheckServiceEnabled, SpellcheckLanguage and SpellcheckLanguageBlocklist policies have no effect when this policy is set to False.

Leaving the policy unset lets users turn spellcheck on or off in the language settings.</string><string id="SpellcheckLanguage">Force enable spellcheck languages</string><string id="SpellcheckLanguage_Explain">Force-enables spellcheck languages. Unrecognized languages in the list will be ignored.

If you enable this policy, spellcheck will be enabled for the languages specified, in addition to the languages for which the user has enabled spellcheck.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to false, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguageBlocklist policy, this policy is prioritized and the spellcheck language is enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string><string id="SpellcheckLanguageDesc">Force enable spellcheck languages</string><string id="SpellcheckLanguageBlocklist">Force disable spellcheck languages</string><string id="SpellcheckLanguageBlocklist_Explain">Force-disables spellcheck languages. Unrecognized languages in that list will be ignored.

If you enable this policy, spellcheck will be disabled for the languages specified. The user can still enable or disable spellcheck for languages not in the list.

If you do not set this policy, or disable it, there will be no change to the user's spellcheck preferences.

If the SpellcheckEnabled policy is set to false, this policy will have no effect.

If a language is included in both this policy and the SpellcheckLanguage policy, the latter is prioritized and the spellcheck language will be enabled.

The currently supported languages are: af, bg, ca, cs, da, de, el, en-AU, en-CA, en-GB, en-US, es, es-419, es-AR, es-ES, es-MX, es-US, et, fa, fo, fr, he, hi, hr, hu, id, it, ko, lt, lv, nb, nl, pl, pt-BR, pt-PT, ro, ru, sh, sk, sl, sq, sr, sv, ta, tg, tr, uk, vi.

Example value:

fr
es</string><string id="SpellcheckLanguageBlocklistDesc">Force disable spellcheck languages</string><string id="StandardizedBrowserZoomEnabled">Enable Standardized Browser Zoom Behavior</string><string id="StandardizedBrowserZoomEnabled_Explain">This policy enables conformance to the newly-adopted specification of CSS zoom.

When this policy is Enabled or unset, the CSS &quot;zoom&quot; property will adhere to the specification:

https://drafts.csswg.org/css-viewport/#zoom-property

When Disabled, the CSS &quot;zoom&quot; property will fall back to its legacy pre-standardized behavior.

This policy is a temporary reprieve to allow time to migrate web content to the new behavior. There is also an origin trial (&quot;DisableStandardizedBrowserZoom&quot;) that corresponds to the behavior when this policy is Disabled. This policy will be removed and the &quot;Enabled&quot; behavior made permanent in milestone 134.</string><string id="StrictMimetypeCheckForWorkerScriptsEnabled">Enable strict MIME type checking for worker scripts</string><string id="StrictMimetypeCheckForWorkerScriptsEnabled_Explain">This policy enables strict MIME type checking for worker scripts.

When enabled or unset, then worker scripts will use strict MIME type checking for JavaScript, which is the new default behaviour. Worker scripts with legacy MIME types will be rejected.

When disabled, then worker scripts will use lax MIME type checking, so that worker scripts with legacy MIME types, e.g. text/ascii, will continue to be loaded and executed.

Browsers traditionally used lax MIME type checking, so that resources with a number of legacy MIME types were supported. E.g. for JavaScript resources, text/ascii is a legacy supported MIME type. This may cause security issues, by allowing to load resources as scripts that were never intended to be used as such. Chrome will transition to use strict MIME type checking in the near future. The enabled policy will track the default behaviour. Disabling this policy allows administrators to retain the legacy behaviour, if desired.

See https://html.spec.whatwg.org/multipage/scripting.html#scriptingLanguage for details about JavaScript / ECMAScript media types.
</string><string id="SuppressDifferentOriginSubframeDialogs">Suppress JavaScript Dialogs triggered from different origin subframes</string><string id="SuppressDifferentOriginSubframeDialogs_Explain">As described in https://www.chromestatus.com/feature/5148698084376576 , JavaScript modal dialogs, triggered by window.alert, window.confirm, and window.prompt, will be blocked in Google Chrome if triggered from a subframe whose origin is different from the main frame origin.

This policy allows overriding that change.
If the policy is set to enabled or unset, JavaScript dialogs triggered from a different origin subframe will be blocked.
If the policy is set to disabled, JavaScript dialogs triggered from a different origin subframe will not be blocked.

This policy will be removed from Google Chrome in the future.</string><string id="SuppressUnsupportedOSWarning">Suppress the unsupported OS warning</string><string id="SuppressUnsupportedOSWarning_Explain">Setting the policy to Enabled suppresses the warning that appears when Google Chrome is running on an unsupported computer or operating system.

Setting the policy to Disabled or leaving it unset means the warnings appear on unsupported systems.</string><string id="SyncDisabled">Disable synchronization of data with Google</string><string id="SyncDisabled_Explain">Setting the policy to Enabled turns off data synchronization in Google Chrome using Google-hosted synchronization services.
To fully turn off Chrome Sync services, we recommend that you turn off the service in the Google Admin console.

If the policy is set to Disabled or not set, users are allowed to choose whether to use Chrome Sync.

Note: Do not turn on this policy when RoamingProfileSupportEnabled is Enabled, because that feature shares the same client-side functionality. The Google-hosted synchronization is off completely in this case.</string><string id="SyncTypesListDisabled">List of types that should be excluded from synchronization</string><string id="SyncTypesListDisabled_Explain">If this policy is set all specified data types will be excluded from synchronization both for Chrome Sync as well as for roaming profile synchronization. This can be beneficial to reduce the size of the roaming profile or limit the type of data uploaded to the Chrome Sync Servers.

The current data types for this policy are: &quot;apps&quot;, &quot;autofill&quot;, &quot;bookmarks&quot;, &quot;extensions&quot;, &quot;preferences&quot;, &quot;passwords&quot;, &quot;payments&quot;, &quot;productComparison&quot;, &quot;readingList&quot;, &quot;savedTabGroups&quot;, &quot;tabs&quot;, &quot;themes&quot;, &quot;typedUrls&quot;, &quot;wifiConfigurations&quot;. Those names are case sensitive!

Notes: Dynamic Policy Refresh is supported only in Google Chrome version 123 and later. Disabling &quot;autofill&quot; also disables &quot;payments&quot;. &quot;typedUrls&quot; refers to all browsing history.

Example value:

bookmarks</string><string id="SyncTypesListDisabledDesc">List of types that should be excluded from synchronization</string><string id="TabDiscardingExceptions">URL pattern Exceptions to tab discarding</string><string id="TabDiscardingExceptions_Explain">This policy makes it so that any URL matching one or more of the patterns it specifies (using the URLBlocklist filter format) will never be discarded by the browser.
This applies to memory pressure and high efficiency mode discarding.
A discarded page is unloaded and its resources fully reclaimed. The tab its associated with remains in the tabstrip, but making it visible will trigger a full reload.


Example value:

example.com
https://*
*</string><string id="TabDiscardingExceptionsDesc">URL pattern Exceptions to tab discarding</string><string id="TaskManagerEndProcessEnabled">Enable ending processes in Task Manager</string><string id="TaskManagerEndProcessEnabled_Explain">Setting the policy to Disabled prevents users from ending processes in the Task Manager.

Setting the policy to Enabled or leaving it unset lets users end processes in the Task Manager.</string><string id="TotalMemoryLimitMb">Set limit on megabytes of memory a single Chrome instance can use.</string><string id="TotalMemoryLimitMb_Explain">Configures the amount of memory that a single Google Chrome instance can use before tabs start being discarded (I.E. the memory used by the tab will be freed and the tab will have to be reloaded when switched to) to save memory.

If the policy is set, browser will begin to discard tabs to save memory once the limitation is exceeded. However, there is no guarantee that the browser is always running under the limit. Any value under 1024 will be rounded up to 1024.

If this policy is not set, the browser will only begin attempts to save memory once it has detected that the amount of physical memory on its machine is low.</string><string id="TranslateEnabled">Enable Translate</string><string id="TranslateEnabled_Explain">Setting the policy to True provides translation functionality when it's appropriate for users by showing an integrated translate toolbar in Google Chrome and a translate option on the right-click context menu. Setting the policy to False shuts off all built-in translate features.

If you set the policy, users can't change this function. Leaving it unset lets them change the setting.</string><string id="TranslatorAPIAllowed">Allow Translator API</string><string id="TranslatorAPIAllowed_Explain">Setting the policy to Enabled or leaving it unset allows the use of Translator API in Google Chrome.

Setting the policy to Disabled disallows the use of Translator API.</string><string id="URLAllowlist">Allow access to a list of URLs</string><string id="URLAllowlist_Explain">Setting the policy provides access to the listed URLs, as exceptions to URLBlocklist. See that policy's description for the format of entries of this list. For example, setting URLBlocklist to * will block all requests, and you can use this policy to allow access to a limited list of URLs. Use it to open exceptions to certain schemes, subdomains of other domains, ports, or specific paths, using the format specified at ( https://support.google.com/chrome/a?p=url_blocklist_filter_format ). The most specific filter determines if a URL is blocked or allowed. The URLAllowlist policy takes precedence over URLBlocklist. This policy is limited to 1,000 entries.

This policy also allows enabling the automatic invocation by the browser of external application registered as protocol handlers for the listed protocols like &quot;tel:&quot; or &quot;ssh:&quot;.

Leaving the policy unset allows no exceptions to URLBlocklist.

From Google Chrome version 92, this policy is also supported in the headless mode.

Example value:

example.com
https://ssl.server.com
hosting.com/good_path
https://server:8080/path
.exact.hostname.com</string><string id="URLAllowlistDesc">Allow access to a list of URLs</string><string id="URLBlocklist">Block access to a list of URLs</string><string id="URLBlocklist_Explain">Setting the URLBlocklist policy stops web pages with prohibited URLs from loading. Administrators can specify the list of URL patterns to be blocked. If left unset, no URLs are blocked in the browser. Up to 1,000 exceptions can be defined in URLAllowlist. See how to format a URL pattern ( https://support.google.com/chrome/a?p=url_blocklist_filter_format ).

Note: This policy does not apply to in-page JavaScript URLs with dynamically loaded data. If you blocked example.com/abc, then example.com could still load it using XMLHTTPRequest. Additionally, this policy does not prevent web pages from updating the URL shown in the omnibox to a blocked one using the JavaScript History API.

From Google Chrome version 73, you can block javascript://* URLs. But, this only affects JavaScript entered in the address bar or, for example, bookmarklets.

From Google Chrome version 92, this policy is also supported in the headless mode.

Note: Blocking internal chrome://* and chrome-untrusted://* URLs can lead to unexpected errors or can be circumvented in some cases. Instead of blocking certain internal URLs, see if there are more specific policies available. For example:

- Instead of blocking chrome://settings/certificates, use CACertificateManagementAllowed.

- Instead of blocking chrome-untrusted://crosh, use SystemFeaturesDisableList.

Example value:

example.com
https://ssl.server.com
hosting.com/bad_path
https://server:8080/path
.exact.hostname.com
file://*
custom_scheme:*
*</string><string id="URLBlocklistDesc">Block access to a list of URLs</string><string id="UrlKeyedAnonymizedDataCollectionEnabled">Enable URL-keyed anonymized data collection</string><string id="UrlKeyedAnonymizedDataCollectionEnabled_Explain">Setting the policy to Enabled means URL-keyed anonymized data collection, which sends URLs of pages the user visits to Google to make searches and browsing better, is always active.

Setting the policy to Disabled results in no URL-keyed anonymized data collection.

If this policy is left unset, the user will be able to change this setting manually.

In Google ChromeOS Kiosk, this policy doesn't offer the option to &quot;Allow the user to decide&quot;. If this policy is unset for Google ChromeOS Kiosk, URL-keyed anonymized data collection is always active.
When set for Google ChromeOS Kiosk, this policy enables URL-keyed metrics collection for kiosk apps.</string><string id="UserAgentReduction">Enable or disable the User-Agent Reduction.</string><string id="UserAgentReduction_Explain">The User-Agent HTTP request header is scheduled to be reduced. In order to facilitate testing and compatibility, this policy can enable the reduction feature for all websites, or disable the ability for origin trials or field trials to enable the feature.

To learn more about the User-Agent Reduction and its timeline, read here:

https://blog.chromium.org/2021/09/user-agent-reduction-origin-trial-and-dates.html
</string><string id="UserAgentReduction_Default">User Agent reduction will be controllable via Field-Trials and Origin-Trials.</string><string id="UserAgentReduction_ForceDisabled">User Agent reduction disabled, and not enabled by Field-Trials or Origin-Trials.</string><string id="UserAgentReduction_ForceEnabled">User Agent reduction will be enabled for all origins.</string><string id="UserDataDir">Set user data directory</string><string id="UserDataDir_Explain">Configures the directory that Google Chrome will use for storing user data.

If you set this policy, Google Chrome will use the provided directory regardless whether the user has specified the '--user-data-dir' flag or not. To avoid data loss or other unexpected errors this policy should not be set to a directory used for other purposes, because Google Chrome manages its contents.

See https://support.google.com/chrome/a?p=Supported_directory_variables for a list of variables that can be used.

If this policy is left not set the default profile path will be used and the user will be able to override it with the '--user-data-dir' command line flag.

Example value: ${users}/${user_name}/Chrome</string><string id="UserDataSnapshotRetentionLimit">Limits the number of user data snapshots retained for use in case of emergency rollback.</string><string id="UserDataSnapshotRetentionLimit_Explain">Following each major version update, Chrome will create a snapshot of certain portions of the user's browsing data for use in case of a later emergency version rollback. If an emergency rollback is performed to a version for which a user has a corresponding snapshot, the data in the snapshot is restored. This allows users to retain such settings as bookmarks and autofill data.

If this policy is not set, the default value of 3 is used

If the policy is set, old snapshots are deleted as needed to respect the limit. If the policy is set to 0, no snapshots will be taken</string><string id="UserFeedbackAllowed">Allow user feedback</string><string id="UserFeedbackAllowed_Explain">Setting the policy to Enabled or leaving it unset lets users send feedback to Google through Menu &gt; Help &gt; Report an Issue or key combination.

Setting the policy to Disabled means users can't send feedback to Google.</string><string id="VideoCaptureAllowed">Allow or deny video capture</string><string id="VideoCaptureAllowed_Explain">Setting the policy to Enabled or leaving it unset means that, with the exception of URLs set in the VideoCaptureAllowedUrls list, users get prompted for video capture access.

Setting the policy to Disabled turns off prompts, and video capture is only available to URLs set in the VideoCaptureAllowedUrls list.

Note: The policy affects all video input (not just the built-in camera).</string><string id="VideoCaptureAllowedUrls">URLs that will be granted access to video capture devices without prompt</string><string id="VideoCaptureAllowedUrls_Explain">Setting the policy means you specify the URL list whose patterns get matched to the security origin of the requesting URL. A match grants access to video capture devices without prompt

For detailed information on valid url patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Note, however, that the pattern &quot;*&quot;, which matches any URL, is not supported by this policy.

Example value:

https://www.example.com/
https://[*.]example.edu/</string><string id="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</string><string id="WPADQuickCheckEnabled">Enable WPAD optimization</string><string id="WPADQuickCheckEnabled_Explain">Setting the policy to Enabled or leaving it unset turns on WPAD (Web Proxy Auto-Discovery) optimization in Google Chrome.

Setting the policy to Disabled turns off WPAD optimization, causing Google Chrome to wait longer for DNS-based WPAD servers.

Whether or not this policy is set, users can't change the WPAD optimization setting.</string><string id="WebAppInstallForceList">Configure list of force-installed Web Apps</string><string id="WebAppInstallForceList_Explain">Setting the policy specifies a list of web apps that install silently, without user interaction, and which users can't uninstall or turn off.

Each list item of the policy is an object with a mandatory member:
url (the URL of the web app to install)

and 6 optional members:
- default_launch_container
(for how the web app opens—a new tab is the default)

- create_desktop_shortcut
(True if you want to create Linux and
Microsoft® Windows® desktop shortcuts).

- fallback_app_name
(Starting with Google Chrome version 90,
allows you to override the app name if it is not a
Progressive Web App (PWA), or the app name that is temporarily
installed if it is a PWA but authentication is required before the
installation can be completed. If both
custom_name and
fallback_app_name are provided,
the latter will be ignored.)

- custom_name
(Starting with Google ChromeOS
version 99, and version 112 on all other desktop operating systems, allows you to
permanently override the app name for all web apps and PWAs.)

- custom_icon
(Starting with Google ChromeOS
version 99, and version 112 on all other desktop operating systems, allows you to
override the app icon of installed apps. The icons have to be square,
maximal 1 MB in size, and in one of the following formats: jpeg, png, gif, webp, ico.
The hash value has to be the SHA256 hash of the icon file. The url
should be accessible without authentication to ensure the icon can be used
upon app installation.)

- install_as_shortcut
(Starting with Google Chrome
version 107). If enabled the given url
will be installed as a shortcut, as if done via the &quot;Create Shortcut...&quot;
option in the desktop browser GUI.
Note that when installed as a shortcut it won't be updated if the
manifest in url changes.
If disabled or unset, the web app at the given
url will be installed normally.

See PinnedLauncherApps for pinning apps to the Google ChromeOS shelf.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebAppInstallForceList for more information about schema and formatting.


Example value:

[
  {
    &quot;create_desktop_shortcut&quot;: true,
    &quot;default_launch_container&quot;: &quot;window&quot;,
    &quot;url&quot;: &quot;https://www.google.com/maps&quot;
  },
  {
    &quot;default_launch_container&quot;: &quot;tab&quot;,
    &quot;url&quot;: &quot;https://docs.google.com&quot;
  },
  {
    &quot;default_launch_container&quot;: &quot;window&quot;,
    &quot;fallback_app_name&quot;: &quot;Editor&quot;,
    &quot;url&quot;: &quot;https://docs.google.com/editor&quot;
  },
  {
    &quot;custom_name&quot;: &quot;My important document&quot;,
    &quot;default_launch_container&quot;: &quot;window&quot;,
    &quot;install_as_shortcut&quot;: true,
    &quot;url&quot;: &quot;https://docs.google.com/document/d/ds187akjqih89&quot;
  },
  {
    &quot;custom_icon&quot;: {
      &quot;hash&quot;: &quot;c28f469c450e9ab2b86ea47038d2b324c6ad3b1e9a4bd8960da13214afd0ca38&quot;,
      &quot;url&quot;: &quot;https://mydomain.example.com/sunny_icon.png&quot;
    },
    &quot;url&quot;: &quot;https://weather.example.com&quot;
  }
]</string><string id="WebAppSettings">Web App management settings</string><string id="WebAppSettings_Explain">This policy allows an admin to specify settings for installed web apps. This policy maps a Web App ID to its specific setting. A default configuration can be set using the special ID *, which applies to all web apps without a custom configuration in this policy.

The manifest_id field is the Manifest ID for the Web App. See https://developer.chrome.com/blog/pwa-manifest-id/ for instructions on how to determine the Manifest ID for an installed web app.
The run_on_os_login field specifies if a web app can be run during OS login. If this field is set to blocked, the web app will not run during OS login and the user will not be able to enable this later. If this field is set to run_windowed, the web app will run during OS login and the user will not be able to disable this later. If this field is set to allowed, the user will be able to configure the web app to run at OS login. The default configuration only allows the allowed and blocked values.
(Since version 117) The prevent_close_after_run_on_os_login field specifies if a web app shall be prevented from closing in any way (e.g. by the user, task manager, web APIs). This behavior can only be enabled if run_on_os_login is set to run_windowed. If the app were already running, this property will only come into effect after the app is restarted. If this field is not defined, apps will be closable by users.
(Since version 118) The force_unregister_os_integration field specifies if all OS integration for a web app, i.e. shortcuts, file handlers, protocol handlers etc will be removed or not. If an app is already running, this property will come into effect after the app has restarted. This should be used with caution, since this can override any OS integration that is set automatically during the startup of the web applications system. Currently only works on Windows, Mac and Linux platforms.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebAppSettings for more information about schema and formatting.


Example value:

[
  {
    &quot;manifest_id&quot;: &quot;https://foo.example/index.html&quot;,
    &quot;run_on_os_login&quot;: &quot;allowed&quot;
  },
  {
    &quot;manifest_id&quot;: &quot;https://bar.example/index.html&quot;,
    &quot;run_on_os_login&quot;: &quot;allowed&quot;
  },
  {
    &quot;manifest_id&quot;: &quot;https://foobar.example/index.html&quot;,
    &quot;run_on_os_login&quot;: &quot;run_windowed&quot;,
    &quot;prevent_close_after_run_on_os_login&quot;: true
  },
  {
    &quot;manifest_id&quot;: &quot;*&quot;,
    &quot;run_on_os_login&quot;: &quot;blocked&quot;
  },
  {
    &quot;manifest_id&quot;: &quot;https://foo.example/index.html&quot;,
    &quot;force_unregister_os_integration&quot;: true
  }
]</string><string id="WebAudioOutputBufferingEnabled">Enable adaptive buffering for Web Audio</string><string id="WebAudioOutputBufferingEnabled_Explain">This policy controls whether the browser uses adaptive buffering for
Web Audio, which may decrease audio glitches but may increase
latency by a variable amount.

Setting the policy to Enabled will always use adaptive buffering.

Setting the policy to Disabled or not set will allow the browser
feature launch process to decide if adaptive buffering is used.</string><string id="WebAuthenticationRemoteDesktopAllowedOrigins">Allowed Origins for Proxied WebAuthn Requests from Remote Desktop Applications.</string><string id="WebAuthenticationRemoteDesktopAllowedOrigins_Explain">A list of origins of remote desktop client apps that may execute WebAuthn API
requests that originate from a browsing session on a remote host.

Any origin configured in this policy can make WebAuthn requests for Relying
Party IDs (RP IDs) that it would normally not allowed to be able to claim.

Only valid HTTPS origins are allowed. Wildcards are not supported.
Any invalid entries are ignored.

Example value:

https://remotedesktop.google.com
https://vdi.corp.example
https://server:8080/</string><string id="WebAuthenticationRemoteDesktopAllowedOriginsDesc">Allowed Origins for Proxied WebAuthn Requests from Remote Desktop Applications.</string><string id="WebRtcEventLogCollectionAllowed">Allow collection of WebRTC event logs from Google services</string><string id="WebRtcEventLogCollectionAllowed_Explain">Setting the policy to Enabled means Google Chrome can collect WebRTC event logs from Google services such as Hangouts Meet and upload them to Google. These logs have diagnostic information for debugging issues with audio or video meetings in Google Chrome, such as the time and size of RTP packets, feedback about congestion on the network, and metadata about time and quality of audio and video frames. These logs have no audio or video content from the meeting. To make debugging easier, Google might associate these logs, by means of a session ID, with other logs collected by the Google service itself.

Setting the policy to Disabled results in no collection or uploading of such logs.

Leaving the policy unset on versions up to and including M76 means Google Chrome defaults to not being able to collect and upload these logs. Starting at M77, Google Chrome defaults to being able to collect and upload these logs from most profiles affected by cloud-based, user-level enterprise policies. From M77 up to and including M80, Google Chrome can also collect and upload these logs by default from profiles affected by Google Chrome on-premise management.</string><string id="WebRtcLocalIpsAllowedUrls">URLs for which local IPs are exposed in WebRTC ICE candidates</string><string id="WebRtcLocalIpsAllowedUrls_Explain">Patterns in this list will be matched against the security origin of the requesting URL.
If a match is found or chrome://flags/#enable-webrtc-hide-local-ips-with-mdns is Disabled, the local IP addresses are shown in WebRTC ICE candidates.
Otherwise, local IP addresses are concealed with mDNS hostnames.
Please note that this policy weakens the protection of local IPs if needed by administrators.

Example value:

https://www.example.com
*example.com*</string><string id="WebRtcLocalIpsAllowedUrlsDesc">URLs for which local IPs are exposed in WebRTC ICE candidates</string><string id="WebRtcTextLogCollectionAllowed">Allow WebRTC text logs collection from Google Services</string><string id="WebRtcTextLogCollectionAllowed_Explain">Setting the policy to enabled means Google Chrome can collect WebRTC text logs from Google services such as Google Meet and upload them to Google. These logs have diagnostic information for debugging issues with audio or video meetings in Google Chrome, such as textual metadata describing incoming and outgoing WebRTC streams, WebRTC specific log entries and additional system information. These logs have no audio or video content from the meeting.
Setting the policy to disabled results in no uploading of such logs to Google. Logs would still accumulate locally on the user's device.
Leaving the policy unset means Google Chrome defaults to being able to collect and upload these logs.</string><string id="WebRtcUdpPortRange">Restrict the range of local UDP ports used by WebRTC</string><string id="WebRtcUdpPortRange_Explain">If the policy is set, the UDP port range used by WebRTC is restricted to the specified port interval (endpoints included).

If the policy is not set, or if it is set to the empty string or an invalid port range, WebRTC is allowed to use any available local UDP port.

Example value: 10000-11999</string><string id="WindowOcclusionEnabled">Enable Window Occlusion</string><string id="WindowOcclusionEnabled_Explain">Enables window occlusion in Google Chrome.

If you enable this setting, to reduce CPU and power consumption Google Chrome will detect when a window is covered by other windows, and will suspend work painting pixels.

If you disable this setting Google Chrome will not detect when a window is covered by other windows.

If this policy is left not set, occlusion detection will be enabled.</string><string id="NativeMessaging_group">Native Messaging</string><string id="NativeMessagingAllowlist">Configure native messaging allowlist</string><string id="NativeMessagingAllowlist_Explain">Setting the policy specifies which native messaging hosts aren't subject to the deny list. A deny list value of * means all native messaging hosts are denied, unless they're explicitly allowed.

All native messaging hosts are allowed by default. But, if all native messaging hosts are denied by policy, the admin can use the allow list to change that policy.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string><string id="NativeMessagingAllowlistDesc">Configure native messaging allowlist</string><string id="NativeMessagingBlocklist">Configure native messaging blocklist</string><string id="NativeMessagingBlocklist_Explain">Setting the policy specifies which native messaging hosts shouldn't be loaded. A deny list value of * means all native messaging hosts are denied, unless they're explicitly allowed.

Leaving the policy unset means Google Chrome loads all installed native messaging hosts.

Example value:

com.native.messaging.host.name1
com.native.messaging.host.name2</string><string id="NativeMessagingBlocklistDesc">Configure native messaging blocklist</string><string id="NativeMessagingUserLevelHosts">Allow user-level Native Messaging hosts (installed without admin permissions)</string><string id="NativeMessagingUserLevelHosts_Explain">Setting the policy to Enabled or leaving it unset means Google Chrome can use native messaging hosts installed at the user level.

Setting the policy to Disabled means Google Chrome can only use these hosts if installed at the system level.</string><string id="Network_group">Network settings</string><string id="AccessControlAllowMethodsInCORSPreflightSpecConformant">Make Access-Control-Allow-Methods matching in CORS preflight spec conformant</string><string id="AccessControlAllowMethodsInCORSPreflightSpecConformant_Explain">This policy controls whether request methods are uppercased when matching with Access-Control-Allow-Methods response headers in CORS preflight.

If the policy is Disabled, request methods are uppercased.
This is the behavior on or before Google Chrome 108.

If the policy is Enabled or not set, request methods are not uppercased, unless matching case-insensitively with DELETE, GET, HEAD, OPTIONS, POST, or PUT.
This would reject fetch(url, {method: 'Foo'}) + &quot;Access-Control-Allow-Methods: FOO&quot; response header,
and would accept fetch(url, {method: 'Foo'}) + &quot;Access-Control-Allow-Methods: Foo&quot; response header.

Note: request methods &quot;post&quot; and &quot;put&quot; are not affected, while &quot;patch&quot; is affected.

This policy is intended to be temporary and will be removed in the future.</string><string id="CompressionDictionaryTransportEnabled">Enable compression dictionary transport support</string><string id="CompressionDictionaryTransportEnabled_Explain">This feature enables the use of dictionary-specific content encodings in the Accept-Encoding request header (&quot;sbr&quot; and &quot;zst-d&quot;) when dictionaries are available for use.

Setting the policy to Enabled or leaving it unset means Google Chrome will accept web contents using the compression dictionary transport feature.
Setting the policy to Disabled turns off the compression dictionary transport feature.</string><string id="DataURLWhitespacePreservationEnabled">DataURL Whitespace Preservation for all media types</string><string id="DataURLWhitespacePreservationEnabled_Explain">This policy provides a temporary opt-out for changes to how Chrome handles whitepsace in data URLS.
Previously, whitespace would be kept only if the top level media type was text or contained the media type string xml.
Now, whitespace will be preserved in all data URLs, regardless of media type.

If this policy is left unset or is set to True, the new behavior is enabled.

When this policy is set to False, the old behavior is enabled.</string><string id="HappyEyeballsV3Enabled">Use the Happy Eyeballs V3 algorithm</string><string id="HappyEyeballsV3Enabled_Explain">This feature enables the Happy Eyeballs V3 algorithm to make connection attempts. See https://datatracker.ietf.org/doc/draft-pauly-happy-happyeyeballs-v3 for details.

Setting the policy to Enabled means Google Chrome will use the Happy Eyeballs V3 algorithm for connection attempts.

Setting the policy to Disabled turns off the Happy Eyeballs V3 algorithm.

Not setting the policy, Google Chrome will turn on or off the Happy Eyeballs V3 algorithm based on chrome://flags/#happy-eyeballs-v3.

This policy supports dynamic refresh.

This policy is a temporary measure and will be removed in future versions of Google Chrome.</string><string id="IPv6ReachabilityOverrideEnabled">Enable IPv6 reachability check override</string><string id="IPv6ReachabilityOverrideEnabled_Explain">Setting the policy to true overrides the IPv6 reachability check. This means that the
system will always query AAAA records when resolving host names. It applies to
all users and interfaces on the device.

Setting the policy to false or leaving it unset does not overrides the IPv6 reachability check.
The system only queries AAAA records when it is reachable to a global IPv6 host.</string><string id="ZstdContentEncodingEnabled">Enable zstd content-encoding support</string><string id="ZstdContentEncodingEnabled_Explain">This feature enables the use of &quot;zstd&quot; in the Accept-Encoding request header,
and support for decompressing
zstd-compressed web content.

Setting the policy to Enabled or leaving it unset means
Google Chrome will accept web contents
compressed with zstd.
Setting the policy to Disabled turns off the
zstd content-encoding feature.

This policy is intended to be temporary and will be removed in the future.</string><string id="PasswordManager_group">Password manager</string><string id="DeletingUndecryptablePasswordsEnabled">Enable deleting undecryptable passwords</string><string id="DeletingUndecryptablePasswordsEnabled_Explain">This policy controls whether the built-in password manager can delete undecryptable passwords from its database. This is required to restore the full functionality of the built-in password manager, but it may include a permanent data loss. Undecryptable password values will not become decryptable on their own and, if fixing them is possible, it usually requires complex user actions.

Setting the policy to Enabled or leaving it unset means that users with undecryptable passwords saved to the built-in password manager will lose them. Passwords that are still in a working state will remain untouched.

Setting the policy to Disabled means users will leave their password manager data untouched, but will experience a broken password manager functionality.

If the policy is set, users can't change it in Google Chrome.</string><string id="PasswordDismissCompromisedAlertEnabled">Enable dismissing compromised password alerts for entered credentials</string><string id="PasswordDismissCompromisedAlertEnabled_Explain">Setting the policy to Enabled or leaving it unset gives the user the option to dismiss/restore compromised password alerts.

If you disable this setting, users will not be able to dismiss alerts about compromised passwords. If enabled, users will be able to dismiss alerts about compromised passwords.</string><string id="PasswordLeakDetectionEnabled">Enable leak detection for entered credentials</string><string id="PasswordLeakDetectionEnabled_Explain">Setting the policy to Enabled lets users have Google Chrome check whether usernames and passwords entered were part of a leak.

Setting the policy to Disabled does not let users have this functionality.

If the policy is set, users can't change it in Google Chrome. If not set, credential leak checking is allowed, but the user can turn it off.</string><string id="PasswordManagerEnabled">Enable saving passwords to the password manager</string><string id="PasswordManagerEnabled_Explain">This policy controls the browser's ability to automatically remember passwords on websites and save them in the built-in password manager. It does not limit access or change the contents of passwords saved in the password manager and possibly synchronized to the Google account profile and Android.

Setting the policy to Enabled means users have Google Chrome remember passwords and provide them the next time they sign in to a site.

Setting the policy to Disabled means users can't save new passwords, but previously saved passwords will still work.

If the policy is set, users can't change it in Google Chrome. If not set, the user can turn off password saving.</string><string id="PasswordManagerPasskeysEnabled">Enable saving passkeys to the password manager</string><string id="PasswordManagerPasskeysEnabled_Explain">This policy controls the browser's ability to save passkeys in the built-in password manager. It does not limit access to, or change the contents of, passkeys already saved in the password manager. If the PasswordManagerEnabled policy is set to Disabled then saving in the built-in password manager is disabled in general, including passkeys and passwords, and thus this policy is not applicable.

Setting the policy to Enabled or leaving unset means that users can save passkeys in the built-in password manager if signed into Google Chrome.

Setting the policy to Disabled means users can't save passkeys to the built-in password manager, but previously saved passkeys will still work.</string><string id="PasswordSharingEnabled">Enable sharing user credentials with other users</string><string id="PasswordSharingEnabled_Explain">Setting the policy to Enabled lets users send to and receive from family members (according to Family Service) their passwords.
When the policy is Enabled or not set, there is a button in the Password Manager allowing to send a password.
The received passwords are stored into user's account and are available in the Password Manager.

Setting the policy to Disabled means users can't send passwords from Password Manager to other users, and can't receive passwords from other users.

The feature is not available if synchronization of Passwords is turned off (either via user settings or SyncDisabled policy is Enabled).

Managed accounts aren't eligible to join or create a family group and therefore cannot share passwords.</string><string id="Printing_group">Printing</string><string id="CloudPrintProxyEnabled">Enable Google Cloud Print proxy</string><string id="CloudPrintProxyEnabled_Explain">Setting the policy to Enabled or leaving it unset lets Google Chrome act as a proxy between Google Cloud Print and legacy printers connected to the machine. Using their Google Account, users may turn on the cloud print proxy by authentication.

Setting the policy to Disabled means users can't turn on the proxy, and the machine can't share its printers with Google Cloud Print.</string><string id="DefaultPrinterSelection">Default printer selection rules</string><string id="DefaultPrinterSelection_Explain">Setting the policy sets the rules for selecting the default printer in Google Chrome, overriding the default rules. Printer selection occurs the first time users try to print, when Google Chrome seeks a printer matching the specified attributes. In case of a less than perfect match, Google Chrome can be set to select any matching printer, depending on the order printers are discovered.

Leaving the policy unset or set to attributes for which there's no match means the built-in PDF printer is the default. If there's no PDF printer, Google Chrome defaults to none.

Currently, all printers are classified as &quot;local&quot;. Printers connected to Google Cloud Print are considered &quot;cloud&quot;, but Google Cloud Print is no longer supported.

Note: Omitting a field means all values match for that particular field. For example, not specifying idPattern means Print Preview accepts all printer IDs. Regular expression patterns must follow the JavaScript RegExp syntax, and matches are case sensistive.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=DefaultPrinterSelection for more information about schema and formatting.


Example value: { &quot;kind&quot;: &quot;local&quot;, &quot;idPattern&quot;: &quot;.*public&quot;, &quot;namePattern&quot;: &quot;.*Color&quot; }</string><string id="DisablePrintPreview">Disable Print Preview</string><string id="DisablePrintPreview_Explain">Setting the policy to Enabled has Google Chrome open the system print dialog instead of the built-in print preview when users request a printout.

Setting the policy to Disabled or leaving it unset has print commands trigger the print preview screen.</string><string id="OopPrintDriversAllowed">Out-of-process print drivers allowed</string><string id="OopPrintDriversAllowed_Explain">Controls if Google Chrome interacts with printer drivers from a separate service process. Platform printing calls to query available printers, get print driver settings, and submit documents for printing to local printers are made from a service process. Moving such calls out of the browser process helps improve stability and reduce frozen UI behavior in Print Preview.

When this policy is set to Enabled or not set, Google Chrome will use a separate service process for platform printing tasks.

When this policy is set to Disabled, Google Chrome will use the browser process for platform printing tasks.

This policy will be removed in the future, after the out-of-process print drivers feature has fully rolled out.</string><string id="PrintHeaderFooter">Print Headers and Footers</string><string id="PrintHeaderFooter_Explain">Setting the policy to Enabled turns headers and footers on in print preview. Setting the policy to Disabled turns them off in print preview.

If you set the policy, users can't change it. If unset, users decides whether headers and footers appear.</string><string id="PrintPdfAsImageAvailability">Print PDF as Image Available</string><string id="PrintPdfAsImageAvailability_Explain">Controls how Google Chrome makes the Print as image option available on Microsoft® Windows® and macOS when printing PDFs.

When printing a PDF on Microsoft® Windows® or macOS, sometimes print jobs need to be rasterized to an image for certain printers to get correct looking output.

When this policy is set to Enabled, Google Chrome will make the Print as image option available in the Print Preview when printing a PDF.

When this policy is set to Disabled or not set Google Chrome the Print as image option will not be available to users in Print Preview and PDFs will be printed as usual without being rasterized to an image before being sent to the destination.</string><string id="PrintPdfAsImageDefault">Print PDF as Image Default</string><string id="PrintPdfAsImageDefault_Explain">Controls if Google Chrome makes the Print as image option default to set when printing PDFs.

When this policy is set to Enabled, Google Chrome will default to setting the Print as image option in the Print Preview when printing a PDF.

When this policy is set to Disabled or not set Google Chrome then the user selection for Print as image option will be initially unset.  The user will be allowed to select it for each individual PDFs print job, if the option is available.

For Microsoft® Windows® or macOS this policy only has an effect if PrintPdfAsImageAvailability is also enabled.</string><string id="PrintPostScriptMode">Print PostScript Mode</string><string id="PrintPostScriptMode_Explain">Controls how Google Chrome prints on Microsoft® Windows®.

When printing to a PostScript printer on Microsoft® Windows® different PostScript generation methods can affect printing performance.

When this policy is set to Default, Google Chrome will use a set of default options when generating PostScript. For text in particular, text will always be rendered using Type 3 fonts.

When this policy is set to Type42, Google Chrome will render text using Type 42 fonts if possible. This should increase printing speed for some PostScript printers.

When this policy is not set, Google Chrome will be in Default mode.</string><string id="PrintPostScriptMode_Default">Default</string><string id="PrintPostScriptMode_Type42">Type42</string><string id="PrintPreviewUseSystemDefaultPrinter">Use System Default Printer as Default</string><string id="PrintPreviewUseSystemDefaultPrinter_Explain">Setting the policy to Enabled means Google Chrome uses the OS default printer as the default destination for print preview.

Setting the policy to Disabled or leaving it unset means Google Chrome uses the most recently used printer as the default destination for print preview.</string><string id="PrintRasterizationMode">Print Rasterization Mode</string><string id="PrintRasterizationMode_Explain">Controls how Google Chrome prints on Microsoft® Windows®.

When printing to a non-PostScript printer on Microsoft® Windows®, sometimes print jobs need to be rasterized to print correctly.

When this policy is set to Full, Google Chrome will do full page rasterization if necessary.

When this policy is set to Fast, Google Chrome will avoid rasterization if possible, reducing the amount of rasterization can help reduce print job sizes and increase printing speed.

When this policy is not set, Google Chrome will be in Full mode.</string><string id="PrintRasterizationMode_Full">Full</string><string id="PrintRasterizationMode_Fast">Fast</string><string id="PrintRasterizePdfDpi">Print Rasterize PDF DPI</string><string id="PrintRasterizePdfDpi_Explain">Controls print image resolution when Google Chrome prints PDFs with rasterization.

When printing a PDF using the Print to image option, it can be beneficial to specify a print resolution other than a device's printer setting or the PDF default.  A high resolution will significantly increase the processing and printing time while a low resolution can lead to poor imaging quality.

This policy allows a particular resolution to be specified for use when rasterizing PDFs for printing.

If this policy is set to zero or not set at all then the system default resolution will be used during rasterization of page images.</string><string id="PrinterTypeDenyList">Disable printer types on the deny list</string><string id="PrinterTypeDenyList_Explain">The printers of types placed on the deny list will be disabled from being discovered or having their capabilities fetched.

Placing all printer types on the deny list effectively disables printing, as there would be no available destinations to send a document for printing.

In versions before 102, including cloud on the deny list has the same effect as setting the CloudPrintSubmitEnabled policy to false. In order to keep Google Cloud Print destinations discoverable, the CloudPrintSubmitEnabled policy must be set to true and cloud must not be on the deny list. Beginning in version 102, Google Cloud Print destinations are not supported and will not appear regardless of policy values.

If the policy is not set, or is set to an empty list, all printer types will be available for discovery.

Extension printers are also known as print provider destinations, and include any destination that belongs to a Google Chrome extension.

Local printers are also known as native printing destinations, and include destinations available to the local machine and shared network printers.

Example value:

local
pdf</string><string id="PrinterTypeDenyListDesc">Disable printer types on the deny list</string><string id="PrintingAllowedBackgroundGraphicsModes">Restrict background graphics printing mode</string><string id="PrintingAllowedBackgroundGraphicsModes_Explain">Restricts background graphics printing mode. Unset policy is treated as no restriction.

Example value: enabled</string><string id="PrintingAllowedBackgroundGraphicsModes_any">Allow printing both with and without background graphics</string><string id="PrintingAllowedBackgroundGraphicsModes_enabled">Allow printing only with background graphics</string><string id="PrintingAllowedBackgroundGraphicsModes_disabled">Allow printing only without background graphics</string><string id="PrintingBackgroundGraphicsDefault">Default background graphics printing mode</string><string id="PrintingBackgroundGraphicsDefault_Explain">Overrides default background graphics printing mode.

Example value: enabled</string><string id="PrintingBackgroundGraphicsDefault_enabled">Enable background graphics printing mode by default</string><string id="PrintingBackgroundGraphicsDefault_disabled">Disable background graphics printing mode by default</string><string id="PrintingEnabled">Enable printing</string><string id="PrintingEnabled_Explain">Setting the policy to Enabled or leaving it unset lets users print in Google Chrome, and users can't change this setting.

Setting the policy to Disabled means users can't print from Google Chrome. Printing is off in the three dots menu, extensions, and JavaScript applications.</string><string id="PrintingLPACSandboxEnabled">Enable Printing LPAC Sandbox</string><string id="PrintingLPACSandboxEnabled_Explain">Setting the policy to Enabled or leaving it unset enables the LPAC Sandbox for printing services whenever the system configuration supports it.

Setting the policy to Disabled has a detrimental effect on Google Chrome's security as services used for printing might run in a weaker sandbox configuration.

Only turn off the policy if there are compatibility issues with third party software that prevent printing services from operating correctly inside the LPAC Sandbox.</string><string id="PrintingPaperSizeDefault">Default printing page size</string><string id="PrintingPaperSizeDefault_Explain">Overrides default printing page size.

name should contain one of the listed formats or 'custom' if required paper size is not in the list. If 'custom' value is provided custom_size property should be specified. It describes the desired height and width in micrometers. Otherwise custom_size property shouldn't be specified. Policy that violates these rules is ignored.

If the page size is unavailable on the printer chosen by the user this policy is ignored.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=PrintingPaperSizeDefault for more information about schema and formatting.


Example value:

{
  &quot;custom_size&quot;: {
    &quot;height&quot;: 297000,
    &quot;width&quot;: 210000
  },
  &quot;name&quot;: &quot;custom&quot;
}</string><string id="PrivacySandbox_group">Privacy Sandbox policies</string><string id="PrivacySandboxAdMeasurementEnabled">Choose whether the Privacy Sandbox ad measurement setting can be disabled</string><string id="PrivacySandboxAdMeasurementEnabled_Explain">A policy to control whether the Privacy Sandbox Ad measurement setting can be disabled for your users.

If you set this policy to Disabled, then the Ad measurement setting will be turned off for your users.
If you set this policy to Enabled or keep it unset, your users will be able to turn on or off the Privacy Sandbox Ad measurement setting on their device.

Setting this policy requires setting the PrivacySandboxPromptEnabled policy to Disabled.</string><string id="PrivacySandboxAdTopicsEnabled">Choose whether the Privacy Sandbox Ad topics setting can be disabled</string><string id="PrivacySandboxAdTopicsEnabled_Explain">A policy to control whether the Privacy Sandbox Ad topics setting can be disabled for your users.

If you set this policy to Disabled, then the Ad topics setting will be turned off for your users.
If you set this policy to Enabled or keep it unset, your users will be able to turn on or off the Privacy Sandbox Ad topics setting on their device.

Setting this policy requires setting the PrivacySandboxPromptEnabled policy to Disabled.</string><string id="PrivacySandboxPromptEnabled">Choose whether the Privacy Sandbox prompt can be shown to your users</string><string id="PrivacySandboxPromptEnabled_Explain">A policy to control whether your users see the Privacy Sandbox prompt.
The prompt is a user-blocking flow which informs your users of the Privacy Sandbox settings. See https://privacysandbox.com for details about Chrome’s effort to deprecate third-party cookies.

If you set this policy to Disabled, then Google Chrome won’t show the Privacy Sandbox prompt.
If you set this policy to Enabled or keep it unset, then Google Chrome determines whether the Privacy Sandbox prompt can be shown or not and then show it if possible.

If any of the following policies are set, it’s required to set this policy to Disabled:
PrivacySandboxAdTopicsEnabled
PrivacySandboxSiteEnabledAdsEnabled
PrivacySandboxAdMeasurementEnabled</string><string id="PrivacySandboxSiteEnabledAdsEnabled">Choose whether the Privacy Sandbox Site-suggested ads setting can be disabled</string><string id="PrivacySandboxSiteEnabledAdsEnabled_Explain">A policy to control whether the Privacy Sandbox Site-suggested ads setting can be disabled for your users.

If you set this policy to Disabled, then the Site-suggested ads setting will be turned off for your users.
If you set this policy to Enabled or keep it unset, your users will be able to turn on or off the Privacy Sandbox Site-suggested ads setting on their device.

Setting this policy requires setting the PrivacySandboxPromptEnabled policy to Disabled.</string><string id="PrivateNetworkRequestSettings_group">Private network request settings</string><string id="InsecurePrivateNetworkRequestsAllowed">Specifies whether to allow websites to make requests to more-private network endpoints in an insecure manner</string><string id="InsecurePrivateNetworkRequestsAllowed_Explain">Controls whether websites are allowed to make requests to more-private network endpoints in an insecure manner.

When this policy is set to true, all Private Network Access checks are disabled for all origins. This may allow attackers to perform CSRF attacks on private network servers.

When this policy is either not set or set to false, the default behavior for requests to more-private network endpoints will depend on the user's personal configuration for the BlockInsecurePrivateNetworkRequests, PrivateNetworkAccessSendPreflights, and PrivateNetworkAccessRespectPreflightResults feature flags, which may be set by field trials or on the command line.

This policy relates to the Private Network Access specification. See https://wicg.github.io/private-network-access/ for more details.

A network endpoint is more private than another if:
1) Its IP address is localhost and the other is not.
2) Its IP address is private and the other is public.
In the future, depending on spec evolution, this policy might apply to all cross-origin requests directed at private IPs or localhost.

When this policy is set to true, websites are allowed to make requests to any network endpoint, subject to other cross-origin checks.</string><string id="InsecurePrivateNetworkRequestsAllowedForUrls">Allow the listed sites to make requests to more-private network endpoints in an insecure manner.</string><string id="InsecurePrivateNetworkRequestsAllowedForUrls_Explain">List of URL patterns. Requests initiated from websites served by matching origins are not subject to Private Network Access checks.

If unset, this policy behaves as if set to the empty list.

For origins not covered by the patterns specified here, the global default value will be used either from the InsecurePrivateNetworkRequestsAllowed policy, if it is set, or the user's personal configuration otherwise.

For detailed information on valid URL patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns.

Example value:

http://www.example.com:8080
[*.]example.edu</string><string id="InsecurePrivateNetworkRequestsAllowedForUrlsDesc">Allow the listed sites to make requests to more-private network endpoints in an insecure manner.</string><string id="PrivateNetworkAccessRestrictionsEnabled">Specifies whether to apply restrictions to requests to more-private network endpoints</string><string id="PrivateNetworkAccessRestrictionsEnabled_Explain">When this policy is set to Enabled, any time when a warning is supposed to be
displayed in the DevTools due to Private Network Access checks failing, the
main request will be blocked instead.

When this policy is set to Disabled or unset, all Private Network Access warnings will not
be enforced and the requests will not be blocked.

See https://wicg.github.io/private-network-access/ for Private Network Access restrictions.</string><string id="RelatedWebsiteSets_group">Related Website Sets Settings</string><string id="RelatedWebsiteSetsEnabled">Enable Related Website Sets</string><string id="RelatedWebsiteSetsEnabled_Explain">This policy allows to control the Related Website Sets feature enablement.

This policy overrides the FirstPartySetsEnabled policy.

When this policy is unset or set to True, the Related Website Sets feature is enabled.

When this policy is set to False, the Related Website Sets feature is disabled.</string><string id="RelatedWebsiteSetsOverrides">Override Related Website Sets.</string><string id="RelatedWebsiteSetsOverrides_Explain">This policy provides a way to override the list of sets the browser uses for Related Website Sets features.

This policy overrides the FirstPartySetsOverrides policy.

Each set in the browser's list of Related Website Sets must meet the requirements of a Related Website Set.
A Related Website Set must contain a primary site and one or more member sites.
A set can also contain a list of service sites that it owns, as well as a map from a site to all of its ccTLD variants.
See https://github.com/WICG/first-party-sets for more information on how Google Chrome uses Related Website Sets.


All sites in a Related Website Set must be a registrable domain served over HTTPS. Each site in a Related Website Set must also be unique,
meaning a site cannot be listed more than once in a Related Website Set.

When this policy is given an empty dictionary, the browser uses the public list of Related Website Sets.

For all sites in a Related Website Set from the replacements list, if a site is also present
on a Related Website Set in the browser's list, then that site will be removed from the browser's Related Website Set.
After this, the policy's Related Website Set will be added to the browser's list of Related Website Sets.

For all sites in a Related Website Set from the additions list, if a site is also present
on a Related Website Set in the browser's list, then the browser's Related Website Set will be updated so that the
new Related Website Set can be added to the browser's list. After the browser's list has been updated,
the policy's Related Website Set will be added to the browser's list of Related Website Sets.

The browser's list of Related Website Sets requires that for all sites in its list, no site is in
more than one set. This is also required for both the replacements list
and the additions list. Similarly, a site cannot be in both the
replacements list and the additions list.

Wildcards (*) are not supported as a policy value, nor within any Related Website Set in these lists.

All sets provided by the policy must be valid Related Website Sets, if they aren't then an
appropriate error will be outputted.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=RelatedWebsiteSetsOverrides for more information about schema and formatting.


Example value:

{
  &quot;additions&quot;: [
    {
      &quot;associatedSites&quot;: [
        &quot;https://associate2.test&quot;
      ],
      &quot;ccTLDs&quot;: {
        &quot;https://associate2.test&quot;: [
          &quot;https://associate2.com&quot;
        ]
      },
      &quot;primary&quot;: &quot;https://primary2.test&quot;,
      &quot;serviceSites&quot;: [
        &quot;https://associate2-content.test&quot;
      ]
    }
  ],
  &quot;replacements&quot;: [
    {
      &quot;associatedSites&quot;: [
        &quot;https://associate1.test&quot;
      ],
      &quot;ccTLDs&quot;: {
        &quot;https://associate1.test&quot;: [
          &quot;https://associate1.co.uk&quot;
        ]
      },
      &quot;primary&quot;: &quot;https://primary1.test&quot;,
      &quot;serviceSites&quot;: [
        &quot;https://associate1-content.test&quot;
      ]
    }
  ]
}</string><string id="RemoteAccess_group">Remote access</string><string id="RemoteAccessHostAllowClientPairing">Enable or disable PIN-less authentication for remote access hosts</string><string id="RemoteAccessHostAllowClientPairing_Explain">Setting the policy to Enabled or leaving it unset lets users pair clients and hosts at connection time, eliminating the need to enter a PIN every time.

Setting the policy to Disabled makes this feature unavailable.</string><string id="RemoteAccessHostAllowFileTransfer">Allow remote access users to transfer files to/from the host</string><string id="RemoteAccessHostAllowFileTransfer_Explain">Setting the policy to Enabled or leaving it unset allows users connected to a remote access host to transfer files between the client and the host. This doesn't apply to remote assistance connections, which don't support file transfer.

Setting the policy to Disabled disallows file transfer.</string><string id="RemoteAccessHostAllowPinAuthentication">Allow PIN and pairing authentication methods for remote access hosts</string><string id="RemoteAccessHostAllowPinAuthentication_Explain">Setting the policy to Enabled allows the remote access host to use PIN and pairing authentications when accepting client connections.

Setting the policy to Disabled disallows PIN or pairing authentications.

Leaving it unset lets the host decide whether PIN and/or pairing authentications can be used.

Note: If the setting results in no mutually supported authentication methods by both the host and the client, then the connection will be rejected.</string><string id="RemoteAccessHostAllowRelayedConnection">Enable the use of relay servers by the remote access host</string><string id="RemoteAccessHostAllowRelayedConnection_Explain">If RemoteAccessHostFirewallTraversal is set to Enabled, setting RemoteAccessHostAllowRelayedConnection to Enabled or leaving it unset allows the use of remote clients to use relay servers to connect to this machine when a direct connection is not available, for example, because of firewall restrictions.

Setting the policy to Disabled doesn't turn remote access off, but only allows connections from the same network (not NAT traversal or relay).</string><string id="RemoteAccessHostAllowRemoteAccessConnections">Allow remote access connections to this machine</string><string id="RemoteAccessHostAllowRemoteAccessConnections_Explain">If this policy is Disabled, the remote access host service cannot be started or configured to accept incoming connections.  This policy does not affect remote support scenarios.

This policy has no effect if it is set to Enabled, left empty, or is not set.</string><string id="RemoteAccessHostAllowRemoteSupportConnections">Allow remote support connections to this machine</string><string id="RemoteAccessHostAllowRemoteSupportConnections_Explain">If this policy is disabled, the remote support host cannot be started or configured to accept incoming connections.

This policy does not affect remote access scenarios.

This policy does not prevent enterprise admins from connecting to managed Google ChromeOS devices.

This policy has no effect if enabled, left empty, or is not set.</string><string id="RemoteAccessHostAllowUiAccessForRemoteAssistance">Allow remote users to interact with elevated windows in remote assistance sessions</string><string id="RemoteAccessHostAllowUiAccessForRemoteAssistance_Explain">Setting the policy to Enabled means the remote assistance host runs in a process with uiAccess permissions. This lets remote users interact with elevated windows on the local user's desktop.

Setting the policy to Disabled or leaving it unset means the remote assistance host runs in the user's context, and remote users can't interact with elevated windows on the desktop.</string><string id="RemoteAccessHostAllowUrlForwarding">Allow remote access users to open host-side URLs in their local client browser</string><string id="RemoteAccessHostAllowUrlForwarding_Explain">Setting the policy to Enabled or leaving it unset may allow users connected to a remote access host to open host-side URLs in their local client browser.

Setting the policy to Disabled will prevent the remote access host from sending URLs to the client.

This setting doesn't apply to remote assistance connections as the feature is not supported for that connection mode.

Note: This feature is not yet generally available so enabling it does not mean that the feature will be visible in the client UI.</string><string id="RemoteAccessHostClientDomainList">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostClientDomainList_Explain">Setting the policy specifies the client domain names that are imposed on remote access clients, and users can't change them. Only clients from one of the specified domains can connect to the host.

Setting the policy to an empty list or leaving it unset applies the default policy for the connection type. For remote assistance, this allows clients from any domain to connect to the host. For anytime remote access, only the host owner can connect.

See also RemoteAccessHostDomainList.

Note: This setting overrides RemoteAccessHostClientDomain, if present.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string><string id="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</string><string id="RemoteAccessHostClipboardSizeBytes">The maximum size, in bytes, that can be transferred between client and host via clipboard synchronization</string><string id="RemoteAccessHostClipboardSizeBytes_Explain">If this policy is set, clipboard data sent to and from the host will be truncated to the limit set by this policy.

If a value of 0 is set, then clipboard sync is disabled.

This policy affects both remote access and remote support scenarios.

This policy has no effect if it is not set.

Setting the policy to a value that is not within the min/max range may prevent the host from starting.

Please note that the actual upper bound for the clipboard size is based on the maximum WebRTC data channel message size which this policy does not control.</string><string id="RemoteAccessHostDomainList">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostDomainList_Explain">Setting the policy specifies the host domain names that are imposed on remote access hosts, and users can't change them. Hosts can be shared only using accounts registered on one of the specified domain names.

Setting the policy to an empty list or leaving it unset means hosts can be shared using any account.

See also RemoteAccessHostClientDomainList.

Note: This setting will override RemoteAccessHostDomain, if present.

Example value:

my-awesome-domain.com
my-auxiliary-domain.com</string><string id="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</string><string id="RemoteAccessHostFirewallTraversal">Enable firewall traversal from remote access host</string><string id="RemoteAccessHostFirewallTraversal_Explain">Setting the policy to Enabled or leaving it unset allows the usage of STUN servers, letting remote clients discover and connect to this machine, even if separated by a firewall.

Setting the policy to Disabled when outgoing UDP connections are filtered by the firewall means the machine only allows connections from client machines within the local network.</string><string id="RemoteAccessHostMaximumSessionDurationMinutes">Maximum session duration allowed for remote access connections</string><string id="RemoteAccessHostMaximumSessionDurationMinutes_Explain">If this policy is set, remote access connections will automatically disconnect after the number of minutes defined in the policy have elapsed. This does not prevent the client from reconnecting after the maximum session duration has been reached. Setting the policy to a value that is not within the min/max range may prevent the host from starting. This policy does not affect remote support scenarios.

This policy has no effect if it is not set. In this case, remote access connections will have no maximum duration on this machine.</string><string id="RemoteAccessHostRequireCurtain">Enable curtaining of remote access hosts</string><string id="RemoteAccessHostRequireCurtain_Explain">Setting the policy to Enabled turns off remote access hosts' physical input and output devices during a remote connection.

Setting the policy to Disabled or leaving it unset lets both local and remote users interact with the host while it's shared.</string><string id="RemoteAccessHostUdpPortRange">Restrict the UDP port range used by the remote access host</string><string id="RemoteAccessHostUdpPortRange_Explain">Setting the policy restricts the UDP port range used by the remote access host in this machine.

Leaving the policy unset or set to an empty string means the remote access host can use any available port.

Note: If RemoteAccessHostFirewallTraversal is Disabled, the remote access host will use UDP ports in the 12400-12409 range.

Example value: 12400-12409</string><string id="RemovedPolicies_group">Removed policies</string><string id="ChromeFrameContentTypes">Allow Google Chrome Frame to handle the listed content types</string><string id="ChromeFrameContentTypes_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeFrameContentTypesDesc">Allow Google Chrome Frame to handle the listed content types</string><string id="AdditionalLaunchParameters">Additional command line parameters for Google Chrome</string><string id="AdditionalLaunchParameters_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeFrameRendererSettings">Default HTML renderer for Google Chrome Frame</string><string id="ChromeFrameRendererSettings_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeFrameRendererSettings_RenderInHost">Use the host browser by default</string><string id="ChromeFrameRendererSettings_RenderInChromeFrame">Use Google Chrome Frame by default</string><string id="RenderInChromeFrameList">Always render the following URL patterns in Google Chrome Frame</string><string id="RenderInChromeFrameList_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RenderInChromeFrameListDesc">Always render the following URL patterns in Google Chrome Frame</string><string id="RenderInHostList">Always render the following URL patterns in the host browser</string><string id="RenderInHostList_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RenderInHostListDesc">Always render the following URL patterns in the host browser</string><string id="SkipMetadataCheck">Skip the meta tag check in Google Chrome Frame</string><string id="SkipMetadataCheck_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultFileHandlingGuardSetting">Control use of the File Handling API</string><string id="DefaultFileHandlingGuardSetting_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultFileHandlingGuardSetting_BlockFileHandling">Do not allow any web app to access file types via the File Handling API</string><string id="DefaultFileHandlingGuardSetting_AskFileHandling">Allow web apps to ask the user to grant access to file types via the File Handling API</string><string id="DefaultKeygenSetting">Default key generation setting</string><string id="DefaultKeygenSetting_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultKeygenSetting_AllowKeygen">Allow all sites to use key generation</string><string id="DefaultKeygenSetting_BlockKeygen">Do not allow any site to use key generation</string><string id="DefaultPluginsSetting">Default Flash setting</string><string id="DefaultPluginsSetting_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultPluginsSetting_AllowPlugins">Allow all sites to automatically run the Flash plugin</string><string id="DefaultPluginsSetting_BlockPlugins">Block the Flash plugin</string><string id="DefaultPluginsSetting_ClickToPlay">Click to play</string><string id="FileHandlingAllowedForUrls">Allow the File Handling API on these web apps</string><string id="FileHandlingAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="FileHandlingAllowedForUrlsDesc">Allow the File Handling API on these web apps</string><string id="FileHandlingBlockedForUrls">Block the File Handling API on these web apps</string><string id="FileHandlingBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="FileHandlingBlockedForUrlsDesc">Block the File Handling API on these web apps</string><string id="FileSystemSyncAccessHandleAsyncInterfaceEnabled">Re-enable the deprecated async interface for FileSystemSyncAccessHandle in File System Access API</string><string id="FileSystemSyncAccessHandleAsyncInterfaceEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="KeygenAllowedForUrls">Allow key generation on these sites</string><string id="KeygenAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="KeygenAllowedForUrlsDesc">Allow key generation on these sites</string><string id="KeygenBlockedForUrls">Block key generation on these sites</string><string id="KeygenBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="KeygenBlockedForUrlsDesc">Block key generation on these sites</string><string id="LegacySameSiteCookieBehaviorEnabled">Default legacy SameSite cookie behavior setting</string><string id="LegacySameSiteCookieBehaviorEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="LegacySameSiteCookieBehaviorEnabled_DefaultToLegacySameSiteCookieBehavior">Revert to legacy SameSite behavior for cookies on all sites</string><string id="LegacySameSiteCookieBehaviorEnabled_DefaultToSameSiteByDefaultCookieBehavior">Use SameSite-by-default behavior for cookies on all sites</string><string id="LegacySameSiteCookieBehaviorEnabledForDomainList">Revert to legacy SameSite behavior for cookies on these sites</string><string id="LegacySameSiteCookieBehaviorEnabledForDomainList_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="LegacySameSiteCookieBehaviorEnabledForDomainListDesc">Revert to legacy SameSite behavior for cookies on these sites</string><string id="PluginsAllowedForUrls">Allow the Flash plugin on these sites</string><string id="PluginsAllowedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</string><string id="PluginsBlockedForUrls">Block the Flash plugin on these sites</string><string id="PluginsBlockedForUrls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</string><string id="DefaultSearchProviderIconURL">Default search provider icon</string><string id="DefaultSearchProviderIconURL_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultSearchProviderInstantURL">Default search provider instant URL</string><string id="DefaultSearchProviderInstantURL_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultSearchProviderInstantURLPostParams">Parameters for instant URL which uses POST</string><string id="DefaultSearchProviderInstantURLPostParams_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DefaultSearchProviderSearchTermsReplacementKey">Parameter controlling search term placement for the default search provider</string><string id="DefaultSearchProviderSearchTermsReplacementKey_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeAppsWebViewPermissiveBehaviorAllowed">Restore permissive Chrome Apps &lt;webview&gt; behavior</string><string id="ChromeAppsWebViewPermissiveBehaviorAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ExtensionAllowInsecureUpdates">Allow insecure algorithms in integrity checks on extension updates and installs</string><string id="ExtensionAllowInsecureUpdates_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AssistantWebEnabled">Allow using Google Assistant on the web, e.g. to enable changing passwords automatically</string><string id="AssistantWebEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SupervisedUserCreationEnabled">Enable creation of supervised users</string><string id="SupervisedUserCreationEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AdvancedProtectionDeepScanningEnabled">Enable sending downloads to Google for deep scanning for users enrolled in the Advanced Protection program</string><string id="AdvancedProtectionDeepScanningEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AllowOutdatedPlugins">Allow running plugins that are outdated</string><string id="AllowOutdatedPlugins_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AllowPopupsDuringPageUnload">Allows a page to show pop-ups during its unloading</string><string id="AllowPopupsDuringPageUnload_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AllowSyncXHRInPageDismissal">Allows a page to perform synchronous XHR requests during page dismissal.</string><string id="AllowSyncXHRInPageDismissal_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AlwaysAuthorizePlugins">Always runs plugins that require authorization (deprecated)</string><string id="AlwaysAuthorizePlugins_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AppCacheForceEnabled">Allows the AppCache feature to be re-enabled even if it is off by default.</string><string id="AppCacheForceEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AuthNegotiateDelegateWhitelist">Kerberos delegation server allowlist</string><string id="AuthNegotiateDelegateWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AuthServerWhitelist">Authentication server allowlist</string><string id="AuthServerWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AutoplayWhitelist">Allow media autoplay on a allowlist of URL patterns</string><string id="AutoplayWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="AutoplayWhitelistDesc">Allow media autoplay on a allowlist of URL patterns</string><string id="BeforeunloadEventCancelByPreventDefaultEnabled">Control new behavior for the cancel dialog produced by the beforeunload event</string><string id="BeforeunloadEventCancelByPreventDefaultEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CECPQ2Enabled">CECPQ2 post-quantum key-agreement enabled for TLS</string><string id="CECPQ2Enabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CSSCustomStateDeprecatedSyntaxEnabled">Controls whether the deprecated :--foo syntax for CSS custom state is enabled</string><string id="CSSCustomStateDeprecatedSyntaxEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCas">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCas_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</string><string id="ChromeAppsEnabled">Extend support for Chrome Apps on Microsoft® Windows®, macOS, and Linux.</string><string id="ChromeAppsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeCleanupEnabled">Enable Chrome Cleanup on Windows</string><string id="ChromeCleanupEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeCleanupReportingEnabled">Control how Chrome Cleanup reports data to Google</string><string id="ChromeCleanupReportingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ChromeRootStoreEnabled">Determines whether the Chrome Root Store and built-in certificate verifier will be used to verify server certificates</string><string id="ChromeRootStoreEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ClearSiteDataOnExit">Clear site data on browser shutdown (deprecated)</string><string id="ClearSiteDataOnExit_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CorsLegacyModeEnabled">Use the legacy CORS implementation rather than new CORS</string><string id="CorsLegacyModeEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CorsMitigationList">Enable CORS check mitigations in the new CORS implementation</string><string id="CorsMitigationList_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CorsMitigationListDesc">Enable CORS check mitigations in the new CORS implementation</string><string id="CrossOriginWebAssemblyModuleSharingEnabled">Specifies whether WebAssembly modules can be sent cross-origin</string><string id="CrossOriginWebAssemblyModuleSharingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DHEEnabled">Enable DHE cipher suites in TLS</string><string id="DHEEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisablePluginFinder">Specify whether the plugin finder should be disabled (deprecated)</string><string id="DisablePluginFinder_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisableSSLRecordSplitting">Disable TLS False Start</string><string id="DisableSSLRecordSplitting_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisableSpdy">Disable SPDY protocol</string><string id="DisableSpdy_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledPlugins">Specify a list of disabled plugins</string><string id="DisabledPlugins_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledPluginsDesc">Specify a list of disabled plugins</string><string id="DisabledPluginsExceptions">Specify a list of plugins that the user can enable or disable</string><string id="DisabledPluginsExceptions_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DisabledPluginsExceptionsDesc">Specify a list of plugins that the user can enable or disable</string><string id="DisplayCapturePermissionsPolicyEnabled">Specifies whether the display-capture permissions-policy is checked or skipped.</string><string id="DisplayCapturePermissionsPolicyEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DnsPrefetchingEnabled">Enable network prediction</string><string id="DnsPrefetchingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="DownloadBubbleEnabled">Enable download bubble UI</string><string id="DownloadBubbleEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableCommonNameFallbackForLocalAnchors">Allow certificates issued by local trust anchors without subjectAlternativeName extension</string><string id="EnableCommonNameFallbackForLocalAnchors_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableDeprecatedPrivetPrinting">Enable deprecated privet printing</string><string id="EnableDeprecatedPrivetPrinting_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableDeprecatedWebBasedSignin">Enable the old web-based signin flow</string><string id="EnableDeprecatedWebBasedSignin_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableDeprecatedWebPlatformFeatures">Enable deprecated web platform features for a limited time</string><string id="EnableDeprecatedWebPlatformFeatures_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</string><string id="EnableSha1ForLocalAnchors">Allow SHA-1 signed certificates issued by local trust anchors</string><string id="EnableSha1ForLocalAnchors_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnableSymantecLegacyInfrastructure">Enable trust in Symantec Corporation's Legacy PKI Infrastructure</string><string id="EnableSymantecLegacyInfrastructure_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnabledPlugins">Specify a list of enabled plugins</string><string id="EnabledPlugins_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnabledPluginsDesc">Specify a list of enabled plugins</string><string id="EnforceLocalAnchorConstraintsEnabled">Determines whether the built-in certificate verifier will enforce constraints encoded into trust anchors loaded from the platform trust store.</string><string id="EnforceLocalAnchorConstraintsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnterpriseWebStoreName">Enterprise web store name (deprecated)</string><string id="EnterpriseWebStoreName_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EnterpriseWebStoreURL">Enterprise web store URL (deprecated)</string><string id="EnterpriseWebStoreURL_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="EventPathEnabled">Re-enable the Event.path API until M115.</string><string id="EventPathEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ExtensionInstallBlacklist">Configure extension installation blocklist</string><string id="ExtensionInstallBlacklist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ExtensionInstallBlacklistDesc">Configure extension installation blocklist</string><string id="ExtensionInstallWhitelist">Configure extension installation allowlist</string><string id="ExtensionInstallWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ExtensionInstallWhitelistDesc">Configure extension installation allowlist</string><string id="ForceEnablePepperVideoDecoderDevAPI">Enable support for the PPB_VideoDecoder(Dev) API.</string><string id="ForceEnablePepperVideoDecoderDevAPI_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceLegacyDefaultReferrerPolicy">Use a default referrer policy of no-referrer-when-downgrade.</string><string id="ForceLegacyDefaultReferrerPolicy_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceMajorVersionToMinorPositionInUserAgent">Freeze User-Agent string major version at 99</string><string id="ForceMajorVersionToMinorPositionInUserAgent_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ForceMajorVersionToMinorPositionInUserAgent_Default">Default to browser settings for User-Agent string version.</string><string id="ForceMajorVersionToMinorPositionInUserAgent_ForceDisabled">The User-Agent string will not freeze the major version.</string><string id="ForceMajorVersionToMinorPositionInUserAgent_ForceEnabled">The User-Agent string will freeze the major version as 99 and include the browser's major version in the minor position.</string><string id="ForceNetworkInProcess">Force networking code to run in the browser process</string><string id="ForceNetworkInProcess_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="GCFUserDataDir">Set Google Chrome Frame user data directory</string><string id="GCFUserDataDir_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="HideWebStorePromo">Prevent app promotions from appearing on the new tab page</string><string id="HideWebStorePromo_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="Http09OnNonDefaultPortsEnabled">Enable HTTP/0.9 support on non-default ports</string><string id="Http09OnNonDefaultPortsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="InsecureHashesInTLSHandshakesEnabled">Insecure Hashes in TLS Handshakes Enabled</string><string id="InsecureHashesInTLSHandshakesEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="InstantEnabled">Enable Instant</string><string id="InstantEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="LoadCryptoTokenExtension">Load the CryptoToken component extension at startup</string><string id="LoadCryptoTokenExtension_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="LocalDiscoveryEnabled">Enable chrome://devices</string><string id="LocalDiscoveryEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="LockIconInAddressBarEnabled">Enable lock icon in the omnibox for secure connections</string><string id="LockIconInAddressBarEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="MachineLevelUserCloudPolicyEnrollmentToken">The enrollment token of cloud policy on desktop</string><string id="MachineLevelUserCloudPolicyEnrollmentToken_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="MediaCacheSize">Set media disk cache size in bytes</string><string id="MediaCacheSize_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="NativeClientForceAllowed">Forces Native Client (NaCl) to be allowed to run.</string><string id="NativeClientForceAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="NativeMessagingBlacklist">Configure native messaging blocklist</string><string id="NativeMessagingBlacklist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="NativeMessagingBlacklistDesc">Configure native messaging blocklist</string><string id="NativeMessagingWhitelist">Configure native messaging allowlist</string><string id="NativeMessagingWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="NativeMessagingWhitelistDesc">Configure native messaging allowlist</string><string id="NativeWindowOcclusionEnabled">Enable Native Window Occlusion</string><string id="NativeWindowOcclusionEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="NewBaseUrlInheritanceBehaviorAllowed">Allows enabling the feature NewBaseUrlInheritanceBehavior</string><string id="NewBaseUrlInheritanceBehaviorAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="OffsetParentNewSpecBehaviorEnabled">Control the new behavior of HTMLElement.offsetParent</string><string id="OffsetParentNewSpecBehaviorEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="OptimizationGuideFetchingEnabled">Enable Optimization Guide Fetching</string><string id="OptimizationGuideFetchingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PPAPISharedImagesSwapChainAllowed">Allow modern buffer allocation for Graphics3D APIs PPAPI plugin.</string><string id="PPAPISharedImagesSwapChainAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PacHttpsUrlStrippingEnabled">Enable PAC URL stripping (for https://)</string><string id="PacHttpsUrlStrippingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PersistentQuotaEnabled">Force persistent quota to be enabled</string><string id="PersistentQuotaEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PrefixedStorageInfoEnabled">Re-enable the deprecated window.webkitStorageInfo API</string><string id="PrefixedStorageInfoEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PrefixedVideoFullscreenApiAvailability">Manage the deprecated prefixed video fullscreen API's availability</string><string id="PrefixedVideoFullscreenApiAvailability_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PrefixedVideoFullscreenApiAvailability_RuntimeEnabled">Follows regular deprecation timelines for the PrefixedVideoFullscreen API</string><string id="PrefixedVideoFullscreenApiAvailability_Disabled">Disables prefixed video fullscreen APIs</string><string id="PrefixedVideoFullscreenApiAvailability_Enabled">Enables prefixed video fullscreen APIs</string><string id="RC4Enabled">Enable RC4 cipher suites in TLS</string><string id="RC4Enabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RSAKeyUsageForLocalAnchorsEnabled">Check RSA key usage for server certificates issued by local trust anchors</string><string id="RSAKeyUsageForLocalAnchorsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RunAllFlashInAllowMode">Extend Flash content setting to all content (deprecated)</string><string id="RunAllFlashInAllowMode_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SSLVersionFallbackMin">Minimum TLS version to fallback to</string><string id="SSLVersionFallbackMin_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SSLVersionFallbackMin_TLSv1_1">TLS 1.1</string><string id="SSLVersionFallbackMin_TLSv1_2">TLS 1.2</string><string id="SSLVersionMax">Maximum SSL version enabled</string><string id="SSLVersionMax_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SSLVersionMax_TLSv1_2">TLS 1.2</string><string id="SSLVersionMax_TLSv1_3">TLS 1.3</string><string id="SSLVersionMin">Minimum SSL version enabled</string><string id="SSLVersionMin_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SSLVersionMin_TLSv1">TLS 1.0</string><string id="SSLVersionMin_TLSv1_1">TLS 1.1</string><string id="SSLVersionMin_TLSv1_2">TLS 1.2</string><string id="SafeBrowsingExtendedReportingOptInAllowed">Allow users to opt in to Safe Browsing extended reporting</string><string id="SafeBrowsingExtendedReportingOptInAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SafeBrowsingWhitelistDomains">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="SafeBrowsingWhitelistDomains_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="SendMouseEventsDisabledFormControlsEnabled">Control the new behavior for event dispatching on disabled form controls</string><string id="SendMouseEventsDisabledFormControlsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SetTimeoutWithout1MsClampEnabled">Control Javascript setTimeout() function minimum timeout.</string><string id="SetTimeoutWithout1MsClampEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SpellcheckLanguageBlacklist">Force disable spellcheck languages</string><string id="SpellcheckLanguageBlacklist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</string><string id="StricterMixedContentTreatmentEnabled">Enable stricter treatment for mixed content</string><string id="StricterMixedContentTreatmentEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SuppressChromeFrameTurndownPrompt">Suppress the Google Chrome Frame turndown prompt</string><string id="SuppressChromeFrameTurndownPrompt_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="TLS13HardeningForLocalAnchorsEnabled">Enable a TLS 1.3 security feature for local trust anchors.</string><string id="TLS13HardeningForLocalAnchorsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="TabFreezingEnabled">Allow background tabs freeze</string><string id="TabFreezingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="TabUnderAllowed">Allow sites to simultaneously navigate and open pop-ups</string><string id="TabUnderAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="TargetBlankImpliesNoOpener">Do not set window.opener for links targeting _blank</string><string id="TargetBlankImpliesNoOpener_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ThirdPartyBlockingEnabled">Enable third party software injection blocking</string><string id="ThirdPartyBlockingEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ThrottleNonVisibleCrossOriginIframesAllowed">Allows enabling throttling of non-visible, cross-origin iframes</string><string id="ThrottleNonVisibleCrossOriginIframesAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ToolbarAvatarLabelSettings">Managed toolbar avatar label setting</string><string id="ToolbarAvatarLabelSettings_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="ToolbarAvatarLabelSettings_display_management_label_permanent">Always display management label</string><string id="ToolbarAvatarLabelSettings_display_management_label_transient">Display management labels for 30s</string><string id="TripleDESEnabled">Enable 3DES cipher suites in TLS</string><string id="TripleDESEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="U2fSecurityKeyApiEnabled">Allow using the deprecated U2F Security Key API</string><string id="U2fSecurityKeyApiEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="URLBlacklist">Block access to a list of URLs</string><string id="URLBlacklist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="URLBlacklistDesc">Block access to a list of URLs</string><string id="URLWhitelist">Allow access to a list of URLs</string><string id="URLWhitelist_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="URLWhitelistDesc">Allow access to a list of URLs</string><string id="UnthrottledNestedTimeoutEnabled">Control the nesting threshold before which Javascript setTimeout() function start being clamped</string><string id="UnthrottledNestedTimeoutEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UrlParamFilterEnabled">Control the URL parameter filter feature</string><string id="UrlParamFilterEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UseLegacyFormControls">Use Legacy Form Controls until M84.</string><string id="UseLegacyFormControls_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UseMojoVideoDecoderForPepperAllowed">Allow Pepper to use a new decoder for hardware accelerated video decoding.</string><string id="UseMojoVideoDecoderForPepperAllowed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UserAgentClientHintsEnabled">Control the User-Agent Client Hints feature.</string><string id="UserAgentClientHintsEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="UserAgentClientHintsGREASEUpdateEnabled">Control the User-Agent Client Hints GREASE Update feature.</string><string id="UserAgentClientHintsGREASEUpdateEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebComponentsV0Enabled">Re-enable Web Components v0 API until M84.</string><string id="WebComponentsV0Enabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebDriverOverridesIncompatiblePolicies">Allow WebDriver to Override Incompatible Policies</string><string id="WebDriverOverridesIncompatiblePolicies_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebRtcAllowLegacyTLSProtocols">Allow legacy TLS/DTLS downgrade in WebRTC</string><string id="WebRtcAllowLegacyTLSProtocols_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebSQLAccess">Force WebSQL to be enabled.</string><string id="WebSQLAccess_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebSQLInThirdPartyContextEnabled">Force WebSQL in third-party contexts to be re-enabled.</string><string id="WebSQLInThirdPartyContextEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WebSQLNonSecureContextEnabled">Force WebSQL in non-secure contexts to be enabled.</string><string id="WebSQLNonSecureContextEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="WelcomePageOnOSUpgradeEnabled">Enable showing the welcome page on the first browser launch following OS upgrade</string><string id="WelcomePageOnOSUpgradeEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="BlockTruncatedCookies">Block truncated cookies</string><string id="BlockTruncatedCookies_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="PasswordManagerAllowShowPasswords">Allow users to show passwords in Password Manager (deprecated)</string><string id="PasswordManagerAllowShowPasswords_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CloudPrintSubmitEnabled">Enable submission of documents to Google Cloud Print</string><string id="CloudPrintSubmitEnabled_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="CloudPrintWarningsSuppressed">Suppress Google Cloud Print deprecation messages</string><string id="CloudPrintWarningsSuppressed_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RemoteAccessClientFirewallTraversal">Enable firewall traversal from remote access client</string><string id="RemoteAccessClientFirewallTraversal_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RemoteAccessHostDebugOverridePolicies">Policy overrides for Debug builds of the remote access host</string><string id="RemoteAccessHostDebugOverridePolicies_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RemoteAccessHostRequireTwoFactor">Enable two-factor authentication for remote access hosts</string><string id="RemoteAccessHostRequireTwoFactor_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="RemoteAccessHostTalkGadgetPrefix">Configure the TalkGadget prefix for remote access hosts</string><string id="RemoteAccessHostTalkGadgetPrefix_Explain">This policy is removed. It is not compatible with this version of Google Chrome. Read more at https://support.google.com/chrome/a/answer/7643500</string><string id="SafeBrowsing_group">Safe Browsing settings</string><string id="DisableSafeBrowsingProceedAnyway">Disable proceeding from the Safe Browsing warning page</string><string id="DisableSafeBrowsingProceedAnyway_Explain">Setting the policy to Enabled prevents users from proceeding past the warning page the Safe Browsing service shows to the malicious site. This policy only prevents users from proceeding on Safe Browsing warnings such as malware and phishing, not for SSL certificate-related issues such as invalid or expired certificates.

Setting the policy to Disabled or leaving it unset means users can choose to proceed to the flagged site after the warning appears.

See more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string><string id="PasswordProtectionChangePasswordURL">Configure the change password URL.</string><string id="PasswordProtectionChangePasswordURL_Explain">Setting the policy sets the URL for users to change their password after seeing a warning in the browser. The password protection service sends users to the URL (HTTP and HTTPS protocols only) you designate through this policy. For Google Chrome to correctly capture the salted hash of the new password on this change password page, make sure your change password page follows these guidelines ( https://www.chromium.org/developers/design-documents/create-amazing-password-forms ).

Turning the policy off or leaving it unset means the service sends users to https://myaccount.google.com to change their password.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Example value: https://mydomain.com/change_password.html</string><string id="PasswordProtectionLoginURLs">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</string><string id="PasswordProtectionLoginURLs_Explain">Setting the policy sets the list of enterprise login URLs (HTTP and HTTPS protocols only). Password protection service will capture salted hashes of passwords on these URLs and use them for password reuse detection. For Google Chrome to correctly capture password salted hashes, ensure your sign-in pages follow these guidelines ( https://www.chromium.org/developers/design-documents/create-amazing-password-forms ).

Turning this setting off or leaving it unset means the password protection service only captures the password salted hashes on https://accounts.google.com.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Example value:

https://mydomain.com/login.html
https://login.mydomain.com</string><string id="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</string><string id="PasswordProtectionWarningTrigger">Password protection warning trigger</string><string id="PasswordProtectionWarningTrigger_Explain">Setting the policy lets you control the triggering of password protection warning. Password protection alerts users when they reuse their protected password on potentially suspicious sites.

Use PasswordProtectionLoginURLs and PasswordProtectionChangePasswordURL to set which password to protect.

If this policy is set to:

* PasswordProtectionWarningOff, no password protection warning will be shown.

* PasswordProtectionWarningOnPasswordReuse, password protection warning will be shown when the user reuses their protected password on a non-allowed site.

* PasswordProtectionWarningOnPhishingReuse, password protection warning will be shown when the user reuses their protected password on a phishing site.

Leaving the policy unset has the password protection service only protect Google passwords, but users can change this setting.</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOff">Password protection warning is off</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPasswordReuse">Password protection warning is triggered by password reuse</string><string id="PasswordProtectionWarningTrigger_PasswordProtectionWarningOnPhishingReuse">Password protection warning is triggered by password reuse on phishing page</string><string id="SafeBrowsingAllowlistDomains">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="SafeBrowsingAllowlistDomains_Explain">Setting the policy to Enabled means Safe Browsing will trust the domains you designate. It won't check them for dangerous resources such as phishing, malware, or unwanted software. Safe Browsing's download protection service won't check downloads hosted on these domains. Its password protection service won't check for password reuse.

Leaving the policy unset means default Safe Browsing protection applies to all resources.

This policy does not support regular expressions; however, subdomains of a given domain are allowlisted. Fully qualified domain names (FQDNs) are not required.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Example value:

mydomain.com
myuniversity.edu</string><string id="SafeBrowsingAllowlistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</string><string id="SafeBrowsingDeepScanningEnabled">Allow download deep scanning for Safe Browsing-enabled users</string><string id="SafeBrowsingDeepScanningEnabled_Explain">When this policy is enabled or left unset, Google Chrome can send suspicious downloads from Safe Browsing-enabled users to Google to scan for malware, or prompt users to provide a password for encrypted archives.
When this policy is disabled, this scanning will not be performed.
This policy does not impact download content analysis configured by Chrome Enterprise Connectors.</string><string id="SafeBrowsingExtendedReportingEnabled">Enable Safe Browsing Extended Reporting</string><string id="SafeBrowsingExtendedReportingEnabled_Explain">Setting the policy to Enabled turns on Google Chrome's Safe Browsing Extended Reporting, which sends some system information and page content to Google servers to help detect dangerous apps and sites.

Setting the policy to Disabled means reports are never sent.

If you set this policy, users can't change it. If not set, users can decide whether to send reports or not.

See more about Safe Browsing ( https://developers.google.com/safe-browsing ).</string><string id="SafeBrowsingProtectionLevel">Safe Browsing Protection Level</string><string id="SafeBrowsingProtectionLevel_Explain">Allows you to control whether Google Chrome's Safe Browsing feature is enabled and the mode it operates in.

If this policy is set to 'NoProtection' (value 0), Safe Browsing is never active.

If this policy is set to 'StandardProtection' (value 1, which is the default), Safe Browsing is always active in the standard mode.

If this policy is set to 'EnhancedProtection' (value 2), Safe Browsing is always active in the enhanced mode, which provides better security, but requires sharing more browsing information with Google.

If you set this policy as mandatory, users cannot change or override the Safe Browsing setting in Google Chrome.

If this policy is left not set, Safe Browsing will operate in Standard Protection mode but users can change this setting.

See https://support.google.com/chrome?p=safe_browsing_preferences for more info on Safe Browsing.</string><string id="SafeBrowsingProtectionLevel_NoProtection">Safe Browsing is never active.</string><string id="SafeBrowsingProtectionLevel_StandardProtection">Safe Browsing is active in the standard mode.</string><string id="SafeBrowsingProtectionLevel_EnhancedProtection">Safe Browsing is active in the enhanced mode. This mode provides better security, but requires sharing more browsing information with Google.</string><string id="SafeBrowsingProxiedRealTimeChecksAllowed">Allow Safe Browsing Proxied Real Time Checks</string><string id="SafeBrowsingProxiedRealTimeChecksAllowed_Explain">This controls whether Safe Browsing's standard protection mode is allowed to
send partial hashes of URLs to Google through a proxy via Oblivious HTTP
in order to determine whether they are safe to visit.

The proxy allows browsers to upload partial hashes of URLs to Google
without them being linked to the user's IP address. The policy also allows
browsers to upload the partial hashes of URLs with higher frequency for
better Safe Browsing protection quality.

This policy will be ignored if Safe Browsing is disabled or set to enhanced
protection mode.

Setting the policy to Enabled or leaving it unset allows the
higher-protection proxied lookups.

Setting the policy to Disabled disallows the higher-protection proxied
lookups. Partial hashes of URLs will be uploaded to Google directly with much
lower frequency, which will degrade protection.</string><string id="SafeBrowsingSurveysEnabled">Allow Safe Browsing Surveys</string><string id="SafeBrowsingSurveysEnabled_Explain">When this policy is enabled or left unset, the user may receive surveys related to Safe Browsing.
When this policy is disabled, the user will not receive surveys related to Safe Browsing.</string><string id="Signin_group">Sign-in settings</string><string id="BoundSessionCredentialsEnabled">Bind Google credentials to a device</string><string id="BoundSessionCredentialsEnabled_Explain">Controls the state of the Device Bound Session Credentials feature.

Device Bound Session Credentials protects Google authentication cookies against cookie theft by regularly providing a cryptographic proof of device possession to Google servers.

If this policy is set to false, Device Bound Session Credentials feature will be disabled.

If this policy is set to true, Device Bound Session Credentials feature will be enabled.

If this policy is unset, Google Chrome will follow the default rollout process for the Device Bound Session Credentials feature, which means that the feature will be gradually rolled out to an increasing number of users.</string><string id="ProfileSeparationDomainExceptionList">Enterprise profile separation secondary domain allowlist</string><string id="ProfileSeparationDomainExceptionList_Explain">If this policy is unset, account logins will not be required to create a new separate profile.

If this policy is set, account logins from the listed domains will not be required to create a new separate profile.

This policy can be set to an empty string so that all account logins are required to create a new separate profile.

Example value:

domain.com
otherdomain.com</string><string id="ProfileSeparationDomainExceptionListDesc">Enterprise profile separation secondary domain allowlist</string><string id="Startup_group">Startup, Home page and New Tab page</string><string id="HomepageIsNewTabPage">Use New Tab Page as homepage</string><string id="HomepageIsNewTabPage_Explain">Setting the policy to Enabled makes the New Tab page the user's homepage, ignoring any homepage URL location. Setting the policy to Disabled means that their homepage is never the New Tab page, unless the user's homepage URL is set to chrome://newtab.

If you set the policy, users can't change their homepage type in Google Chrome. If not set, the user decides whether or not the New Tab page is their homepage.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.</string><string id="HomepageLocation">Configure the home page URL</string><string id="HomepageLocation_Explain">Setting the policy sets the default homepage URL in Google Chrome. You open the homepage using the Home button. On desktop, the RestoreOnStartup policies control the pages that open on startup.

If the homepage is set to the New Tab Page, by the user or HomepageIsNewTabPage, this policy has no effect.

The URL needs a standard scheme, such as http://example.com or https://example.com. When this policy is set, users can't change their homepage URL in Google Chrome.

Leaving both HomepageLocation and HomepageIsNewTabPage unset lets users choose their homepage.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Example value: https://www.chromium.org</string><string id="NewTabPageLocation">Configure the New Tab page URL</string><string id="NewTabPageLocation_Explain">Setting the policy configures the default New Tab page URL and prevents users from changing it.

The New Tab page opens with new tabs and windows.

This policy doesn't decide which pages open on start up. Those are controlled by the RestoreOnStartup policies. This policy does affect the homepage, if that's set to open the New Tab page, as well as the startup page if it's set to open the New Tab page.

It is a best practice to provide fully canonicalized URL, if the URL is not fully canonicalized Google Chrome will default to https://.

Leaving the policy unset or empty puts the default New Tab page in use.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.

Example value: https://www.chromium.org</string><string id="RestoreOnStartup">Action on startup</string><string id="RestoreOnStartup_Explain">Setting the policy lets you specify system behavior on startup. Turning this setting off amounts to leaving it unset as Google Chrome must have specified start up behavior.

If you set the policy, users can't change it in Google Chrome. If not set, users can change it.

Setting this policy to RestoreOnStartupIsLastSession or RestoreOnStartupIsLastSessionAndURLs turns off some settings that rely on sessions or that perform actions on exit, such as clearing browsing data on exit or session-only cookies.

If this policy is set to RestoreOnStartupIsLastSessionAndURLs, browser will restore previous session and open a separate window to show URLs that are set from RestoreOnStartupURLs. Note that users can choose to keep those URLs open and they will also be restored in the future session.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

On macOS, this policy is only available on instances that are managed via MDM, joined to a domain via MCX or enrolled in Chrome Enterprise Core.</string><string id="RestoreOnStartup_RestoreOnStartupIsNewTabPage">Open New Tab Page</string><string id="RestoreOnStartup_RestoreOnStartupIsLastSession">Restore the last session</string><string id="RestoreOnStartup_RestoreOnStartupIsURLs">Open a list of URLs</string><string id="RestoreOnStartup_RestoreOnStartupIsLastSessionAndURLs">Open a list of URLs and restore the last session</string><string id="RestoreOnStartupURLs">URLs to open on startup</string><string id="RestoreOnStartupURLs_Explain">If RestoreOnStartup is set to RestoreOnStartupIsURLs, then setting RestoreOnStartupURLs to a list of URLs specify which URLs open.

If not set, the New Tab page opens on start up.

On Microsoft® Windows®, this policy is only available on instances that are joined to a Microsoft® Active Directory® domain, joined to Microsoft® Azure® Active Directory® or enrolled in Chrome Enterprise Core.

Example value:

https://example.com
https://www.chromium.org</string><string id="RestoreOnStartupURLsDesc">URLs to open on startup</string><string id="ShowHomeButton">Show Home button on toolbar</string><string id="ShowHomeButton_Explain">Setting the policy to Enabled shows the Home button on Google Chrome's toolbar. Setting the policy to Disabled keeps the Home button from appearing.

If you set the policy, users can't change it in Google Chrome. If not set, users chooses whether to show the Home button.</string><string id="WebRtc_group">WebRtc settings</string><string id="WebRtcIPHandling">WebRTC IP handling</string><string id="WebRtcIPHandling_Explain">This policy allows restricting which IP addresses and interfaces WebRTC uses when attempting to find the best available connection.

Valid values:

* default - WebRTC uses all available network interfaces.

* default_public_and_private_interfaces - WebRTC uses all public and private interfaces.

* default_public_interface_only - WebRTC uses all public interfaces, but not private ones.

* disable_non_proxied_udp - WebRTC uses either UDP SOCKS proxying or will fallback to TCP proxying.

When unset, defaults to using all available network interfaces.

See RFC 8828 section 5.2 (https://tools.ietf.org/html/rfc8828.html#section-5.2) for a detailed description of all the handling values.

Example value: default</string><string id="WebRtcIPHandling_default">WebRTC will use all available interfaces when searching for the best path.</string><string id="WebRtcIPHandling_default_public_and_private_interfaces">WebRTC will only use the interface connecting to the public Internet, but may connect using private IP addresses.</string><string id="WebRtcIPHandling_default_public_interface_only">WebRTC will only use the interface connecting to the public Internet, and will not connect using private IP addresses.</string><string id="WebRtcIPHandling_disable_non_proxied_udp">WebRTC will use TCP on the public-facing interface, and will only use UDP if supported by a configured proxy.</string><string id="WebRtcIPHandlingUrl">WebRTC per URL IP Handling</string><string id="WebRtcIPHandlingUrl_Explain">This policy allows restricting which IP addresses and interfaces WebRTC uses when attempting to find the best available connection for each specific URL pattern.

It accepts a list of URL patterns and handling type pairs. The URL patterns are checked in order and the first match will configure which handling is used by WebRTC for the domain. When the URL of the current document is not matched against any entry, it uses the configuration set by the policy WebRtcIPHandling.

For detailed information on valid input patterns, please see https://cloud.google.com/docs/chrome-enterprise/policies/url-patterns. Wildcards, *, are allowed. This policy only matches based on origin, so any path in the URL pattern is ignored.

Valid handling values:

* default - WebRTC uses all network interfaces.

* default_public_and_private_interfaces - WebRTC uses all public and private interfaces.

* default_public_interface_only - WebRTC uses all public interfaces, but not private ones.

* disable_non_proxied_udp - WebRTC uses either UDP SOCKS proxying or will fallback to TCP proxying.

See RFC 8828 section 5.2 (https://tools.ietf.org/html/rfc8828.html#section-5.2) for a detailed description of all the handling values.
See https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebRtcIPHandlingUrl for more information about schema and formatting.


Example value:

[
  {
    &quot;url&quot;: &quot;https://www.example.com&quot;,
    &quot;handling&quot;: &quot;default_public_and_private_interfaces&quot;
  },
  {
    &quot;url&quot;: &quot;https://[*.]example.edu&quot;,
    &quot;handling&quot;: &quot;default_public_interface_only&quot;
  },
  {
    &quot;url&quot;: &quot;*&quot;,
    &quot;handling&quot;: &quot;disable_non_proxied_udp&quot;
  }
]</string></stringTable><presentationTable><presentation id="LiveTranslateEnabled"/><presentation id="UiAutomationProviderEnabled"/><presentation id="SameOriginTabCaptureAllowedByOrigins"><listBox refId="SameOriginTabCaptureAllowedByOriginsDesc">Allow Same Origin Tab capture by these origins</listBox></presentation><presentation id="ScreenCaptureAllowed"/><presentation id="ScreenCaptureAllowedByOrigins"><listBox refId="ScreenCaptureAllowedByOriginsDesc">Allow Desktop, Window, and Tab capture by these origins</listBox></presentation><presentation id="TabCaptureAllowedByOrigins"><listBox refId="TabCaptureAllowedByOriginsDesc">Allow Tab capture by these origins</listBox></presentation><presentation id="WindowCaptureAllowedByOrigins"><listBox refId="WindowCaptureAllowedByOriginsDesc">Allow Window and Tab capture by these origins</listBox></presentation><presentation id="CACertificateManagementAllowed"><dropdownList refId="CACertificateManagementAllowed">Allow users to manage installed CA certificates.</dropdownList></presentation><presentation id="CACertificates"><listBox refId="CACertificatesDesc">TLS certificates that should be trusted by Google Chrome for server authentication</listBox></presentation><presentation id="CACertificatesWithConstraints"><textBox refId="CACertificatesWithConstraints"><label>TLS certificates that should be trusted by Google Chrome for server authentication with constraints</label></textBox></presentation><presentation id="CADistrustedCertificates"><listBox refId="CADistrustedCertificatesDesc">TLS certificates that should be distrusted by Google Chrome for server authentication</listBox></presentation><presentation id="CAHintCertificates"><listBox refId="CAHintCertificatesDesc">TLS certificates that are not trusted or distrusted but can be used in path-building for server authentication</listBox></presentation><presentation id="CAPlatformIntegrationEnabled"/><presentation id="AutoSelectCertificateForUrls"><listBox refId="AutoSelectCertificateForUrlsDesc">Automatically select client certificates for these sites</listBox></presentation><presentation id="AutomaticFullscreenAllowedForUrls"><listBox refId="AutomaticFullscreenAllowedForUrlsDesc">Allow automatic fullscreen on these sites</listBox></presentation><presentation id="AutomaticFullscreenBlockedForUrls"><listBox refId="AutomaticFullscreenBlockedForUrlsDesc">Block automatic fullscreen on these sites</listBox></presentation><presentation id="ClipboardAllowedForUrls"><listBox refId="ClipboardAllowedForUrlsDesc">Allow clipboard on these sites</listBox></presentation><presentation id="ClipboardBlockedForUrls"><listBox refId="ClipboardBlockedForUrlsDesc">Block clipboard on these sites</listBox></presentation><presentation id="CookiesAllowedForUrls"><listBox refId="CookiesAllowedForUrlsDesc">Allow cookies on these sites</listBox></presentation><presentation id="CookiesBlockedForUrls"><listBox refId="CookiesBlockedForUrlsDesc">Block cookies on these sites</listBox></presentation><presentation id="CookiesSessionOnlyForUrls"><listBox refId="CookiesSessionOnlyForUrlsDesc">Limit cookies from matching URLs to the current session</listBox></presentation><presentation id="DataUrlInSvgUseEnabled"/><presentation id="DefaultClipboardSetting"><dropdownList refId="DefaultClipboardSetting">Default clipboard setting</dropdownList></presentation><presentation id="DefaultCookiesSetting"><dropdownList refId="DefaultCookiesSetting">Default cookies setting</dropdownList></presentation><presentation id="DefaultFileSystemReadGuardSetting"><dropdownList refId="DefaultFileSystemReadGuardSetting">Control use of the File System API for reading</dropdownList></presentation><presentation id="DefaultFileSystemWriteGuardSetting"><dropdownList refId="DefaultFileSystemWriteGuardSetting">Control use of the File System API for writing</dropdownList></presentation><presentation id="DefaultGeolocationSetting"><dropdownList refId="DefaultGeolocationSetting">Default geolocation setting</dropdownList></presentation><presentation id="DefaultImagesSetting"><dropdownList refId="DefaultImagesSetting">Default images setting</dropdownList></presentation><presentation id="DefaultInsecureContentSetting"><dropdownList refId="DefaultInsecureContentSetting">Control use of insecure content exceptions</dropdownList></presentation><presentation id="DefaultJavaScriptJitSetting"><dropdownList refId="DefaultJavaScriptJitSetting">Control use of JavaScript JIT</dropdownList></presentation><presentation id="DefaultJavaScriptOptimizerSetting"><dropdownList refId="DefaultJavaScriptOptimizerSetting">Control use of JavaScript optimizers</dropdownList></presentation><presentation id="DefaultJavaScriptSetting"><dropdownList refId="DefaultJavaScriptSetting">Default JavaScript setting</dropdownList></presentation><presentation id="DefaultLocalFontsSetting"><dropdownList refId="DefaultLocalFontsSetting">Default Local Fonts permission setting</dropdownList></presentation><presentation id="DefaultNotificationsSetting"><dropdownList refId="DefaultNotificationsSetting">Default notification setting</dropdownList></presentation><presentation id="DefaultPopupsSetting"><dropdownList refId="DefaultPopupsSetting">Default pop-ups setting</dropdownList></presentation><presentation id="DefaultSensorsSetting"><dropdownList refId="DefaultSensorsSetting">Default sensors setting</dropdownList></presentation><presentation id="DefaultSerialGuardSetting"><dropdownList refId="DefaultSerialGuardSetting">Control use of the Serial API</dropdownList></presentation><presentation id="DefaultThirdPartyStoragePartitioningSetting"><dropdownList refId="DefaultThirdPartyStoragePartitioningSetting">Default third-party storage partitioning setting</dropdownList></presentation><presentation id="DefaultWebBluetoothGuardSetting"><dropdownList refId="DefaultWebBluetoothGuardSetting">Control use of the Web Bluetooth API</dropdownList></presentation><presentation id="DefaultWebHidGuardSetting"><dropdownList refId="DefaultWebHidGuardSetting">Control use of the WebHID API</dropdownList></presentation><presentation id="DefaultWebUsbGuardSetting"><dropdownList refId="DefaultWebUsbGuardSetting">Control use of the WebUSB API</dropdownList></presentation><presentation id="DefaultWindowManagementSetting"><dropdownList refId="DefaultWindowManagementSetting">Default Window Management permission setting</dropdownList></presentation><presentation id="FileSystemReadAskForUrls"><listBox refId="FileSystemReadAskForUrlsDesc">Allow read access via the File System API on these sites</listBox></presentation><presentation id="FileSystemReadBlockedForUrls"><listBox refId="FileSystemReadBlockedForUrlsDesc">Block read access via the File System API on these sites</listBox></presentation><presentation id="FileSystemWriteAskForUrls"><listBox refId="FileSystemWriteAskForUrlsDesc">Allow write access to files and directories on these sites</listBox></presentation><presentation id="FileSystemWriteBlockedForUrls"><listBox refId="FileSystemWriteBlockedForUrlsDesc">Block write access to files and directories on these sites</listBox></presentation><presentation id="ImagesAllowedForUrls"><listBox refId="ImagesAllowedForUrlsDesc">Allow images on these sites</listBox></presentation><presentation id="ImagesBlockedForUrls"><listBox refId="ImagesBlockedForUrlsDesc">Block images on these sites</listBox></presentation><presentation id="InsecureContentAllowedForUrls"><listBox refId="InsecureContentAllowedForUrlsDesc">Allow insecure content on these sites</listBox></presentation><presentation id="InsecureContentBlockedForUrls"><listBox refId="InsecureContentBlockedForUrlsDesc">Block insecure content on these sites</listBox></presentation><presentation id="JavaScriptAllowedForUrls"><listBox refId="JavaScriptAllowedForUrlsDesc">Allow JavaScript on these sites</listBox></presentation><presentation id="JavaScriptBlockedForUrls"><listBox refId="JavaScriptBlockedForUrlsDesc">Block JavaScript on these sites</listBox></presentation><presentation id="JavaScriptJitAllowedForSites"><listBox refId="JavaScriptJitAllowedForSitesDesc">Allow JavaScript to use JIT on these sites</listBox></presentation><presentation id="JavaScriptJitBlockedForSites"><listBox refId="JavaScriptJitBlockedForSitesDesc">Block JavaScript from using JIT on these sites</listBox></presentation><presentation id="JavaScriptOptimizerAllowedForSites"><listBox refId="JavaScriptOptimizerAllowedForSitesDesc">Allow JavaScript optimization on these sites</listBox></presentation><presentation id="JavaScriptOptimizerBlockedForSites"><listBox refId="JavaScriptOptimizerBlockedForSitesDesc">Block JavaScript optimizations on these sites</listBox></presentation><presentation id="LocalFontsAllowedForUrls"><listBox refId="LocalFontsAllowedForUrlsDesc">Allow Local Fonts permission on these sites</listBox></presentation><presentation id="LocalFontsBlockedForUrls"><listBox refId="LocalFontsBlockedForUrlsDesc">Block Local Fonts permission on these sites</listBox></presentation><presentation id="NotificationsAllowedForUrls"><listBox refId="NotificationsAllowedForUrlsDesc">Allow notifications on these sites</listBox></presentation><presentation id="NotificationsBlockedForUrls"><listBox refId="NotificationsBlockedForUrlsDesc">Block notifications on these sites</listBox></presentation><presentation id="PartitionedBlobUrlUsage"/><presentation id="PdfLocalFileAccessAllowedForDomains"><listBox refId="PdfLocalFileAccessAllowedForDomainsDesc">Allow local file access to file:// URLs on these sites in the PDF Viewer</listBox></presentation><presentation id="PopupsAllowedForUrls"><listBox refId="PopupsAllowedForUrlsDesc">Allow pop-ups on these sites</listBox></presentation><presentation id="PopupsBlockedForUrls"><listBox refId="PopupsBlockedForUrlsDesc">Block pop-ups on these sites</listBox></presentation><presentation id="RegisteredProtocolHandlers"><textBox refId="RegisteredProtocolHandlers"><label>Register protocol handlers</label></textBox></presentation><presentation id="SensorsAllowedForUrls"><listBox refId="SensorsAllowedForUrlsDesc">Allow access to sensors on these sites</listBox></presentation><presentation id="SensorsBlockedForUrls"><listBox refId="SensorsBlockedForUrlsDesc">Block access to sensors on these sites</listBox></presentation><presentation id="SerialAllowAllPortsForUrls"><listBox refId="SerialAllowAllPortsForUrlsDesc">Automatically grant permission to sites to connect all serial ports.</listBox></presentation><presentation id="SerialAllowUsbDevicesForUrls"><textBox refId="SerialAllowUsbDevicesForUrls"><label>Automatically grant permission to sites to connect to USB serial devices.</label></textBox></presentation><presentation id="SerialAskForUrls"><listBox refId="SerialAskForUrlsDesc">Allow the Serial API on these sites</listBox></presentation><presentation id="SerialBlockedForUrls"><listBox refId="SerialBlockedForUrlsDesc">Block the Serial API on these sites</listBox></presentation><presentation id="ThirdPartyStoragePartitioningBlockedForOrigins"><listBox refId="ThirdPartyStoragePartitioningBlockedForOriginsDesc">Disable third-party storage partitioning for specific top-level origins</listBox></presentation><presentation id="WebHidAllowAllDevicesForUrls"><listBox refId="WebHidAllowAllDevicesForUrlsDesc">Automatically grant permission to sites to connect to any HID device.</listBox></presentation><presentation id="WebHidAllowDevicesForUrls"><textBox refId="WebHidAllowDevicesForUrls"><label>Automatically grant permission to these sites to connect to HID devices with the given vendor and product IDs.</label></textBox></presentation><presentation id="WebHidAllowDevicesWithHidUsagesForUrls"><textBox refId="WebHidAllowDevicesWithHidUsagesForUrls"><label>Automatically grant permission to these sites to connect to HID devices containing top-level collections with the given HID usage.</label></textBox></presentation><presentation id="WebHidAskForUrls"><listBox refId="WebHidAskForUrlsDesc">Allow the WebHID API on these sites</listBox></presentation><presentation id="WebHidBlockedForUrls"><listBox refId="WebHidBlockedForUrlsDesc">Block the WebHID API on these sites</listBox></presentation><presentation id="WebUsbAllowDevicesForUrls"><textBox refId="WebUsbAllowDevicesForUrls"><label>Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.</label></textBox></presentation><presentation id="WebUsbAskForUrls"><listBox refId="WebUsbAskForUrlsDesc">Allow WebUSB on these sites</listBox></presentation><presentation id="WebUsbBlockedForUrls"><listBox refId="WebUsbBlockedForUrlsDesc">Block WebUSB on these sites</listBox></presentation><presentation id="WindowManagementAllowedForUrls"><listBox refId="WindowManagementAllowedForUrlsDesc">Allow Window Management permission on these sites</listBox></presentation><presentation id="WindowManagementBlockedForUrls"><listBox refId="WindowManagementBlockedForUrlsDesc">Block Window Management permission on these sites</listBox></presentation><presentation id="DefaultSearchProviderAlternateURLs"><listBox refId="DefaultSearchProviderAlternateURLsDesc">List of alternate URLs for the default search provider</listBox></presentation><presentation id="DefaultSearchProviderEnabled"/><presentation id="DefaultSearchProviderEncodings"><listBox refId="DefaultSearchProviderEncodingsDesc">Default search provider encodings</listBox></presentation><presentation id="DefaultSearchProviderImageURL"><textBox refId="DefaultSearchProviderImageURL"><label>Parameter providing search-by-image feature for the default search provider</label></textBox></presentation><presentation id="DefaultSearchProviderImageURLPostParams"><textBox refId="DefaultSearchProviderImageURLPostParams"><label>Parameters for image URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderKeyword"><textBox refId="DefaultSearchProviderKeyword"><label>Default search provider keyword</label></textBox></presentation><presentation id="DefaultSearchProviderName"><textBox refId="DefaultSearchProviderName"><label>Default search provider name</label></textBox></presentation><presentation id="DefaultSearchProviderNewTabURL"><textBox refId="DefaultSearchProviderNewTabURL"><label>Default search provider new tab page URL</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURL"><textBox refId="DefaultSearchProviderSearchURL"><label>Default search provider search URL</label></textBox></presentation><presentation id="DefaultSearchProviderSearchURLPostParams"><textBox refId="DefaultSearchProviderSearchURLPostParams"><label>Parameters for search URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURL"><textBox refId="DefaultSearchProviderSuggestURL"><label>Default search provider suggest URL</label></textBox></presentation><presentation id="DefaultSearchProviderSuggestURLPostParams"><textBox refId="DefaultSearchProviderSuggestURLPostParams"><label>Parameters for suggest URL which uses POST</label></textBox></presentation><presentation id="DefaultMediaStreamSetting"><dropdownList refId="DefaultMediaStreamSetting">Default mediastream setting</dropdownList></presentation><presentation id="DefaultWindowPlacementSetting"><dropdownList refId="DefaultWindowPlacementSetting">Default Window Placement permission setting</dropdownList></presentation><presentation id="WindowPlacementAllowedForUrls"><listBox refId="WindowPlacementAllowedForUrlsDesc">Allow Window Placement permission on these sites</listBox></presentation><presentation id="WindowPlacementBlockedForUrls"><listBox refId="WindowPlacementBlockedForUrlsDesc">Block Window Placement permission on these sites</listBox></presentation><presentation id="TabOrganizerSettings"><dropdownList refId="TabOrganizerSettings">Settings for Tab Organizer</dropdownList></presentation><presentation id="AutoFillEnabled"/><presentation id="DeveloperToolsDisabled"/><presentation id="DisabledSchemes"><listBox refId="DisabledSchemesDesc">List of disabled protocol schemes</listBox></presentation><presentation id="ForceBrowserSignin"/><presentation id="ForceSafeSearch"/><presentation id="ForceYouTubeSafetyMode"/><presentation id="IncognitoEnabled"/><presentation id="InsecureFormsWarningsEnabled"/><presentation id="JavascriptEnabled"/><presentation id="MutationEventsEnabled"/><presentation id="PromotionalTabsEnabled"/><presentation id="RendererCodeIntegrityEnabled"/><presentation id="SigninAllowed"/><presentation id="UnsafelyTreatInsecureOriginAsSecure"><listBox refId="UnsafelyTreatInsecureOriginAsSecureDesc">Origins or hostname patterns for which restrictions on insecure origins should not apply</listBox></presentation><presentation id="ProxyBypassList"><textBox refId="ProxyBypassList"><label>Comma-separated list of proxy bypass rules</label></textBox></presentation><presentation id="ProxyMode"><dropdownList refId="ProxyMode">Choose how to specify proxy server settings</dropdownList></presentation><presentation id="ProxyPacUrl"><textBox refId="ProxyPacUrl"><label>URL to a proxy .pac file</label></textBox></presentation><presentation id="ProxyServer"><textBox refId="ProxyServer"><label>Address or URL of proxy server</label></textBox></presentation><presentation id="ProxyServerMode"><dropdownList refId="ProxyServerMode">Choose how to specify proxy server settings</dropdownList></presentation><presentation id="RemoteAccessHostClientDomain"><textBox refId="RemoteAccessHostClientDomain"><label>Configure the required domain name for remote access clients</label></textBox></presentation><presentation id="RemoteAccessHostDomain"><textBox refId="RemoteAccessHostDomain"><label>Configure the required domain name for remote access hosts</label></textBox></presentation><presentation id="SafeBrowsingEnabled"/><presentation id="BlockExternalExtensions"/><presentation id="ExtensionAllowedTypes"><listBox refId="ExtensionAllowedTypesDesc">Types of extensions/apps that are allowed to be installed</listBox></presentation><presentation id="ExtensionDeveloperModeSettings"><dropdownList refId="ExtensionDeveloperModeSettings">Control the availability of developer mode on extensions page</dropdownList></presentation><presentation id="ExtensionExtendedBackgroundLifetimeForPortConnectionsToUrls"><listBox refId="ExtensionExtendedBackgroundLifetimeForPortConnectionsToUrlsDesc">Configure a list of origins that grant extended background lifetime to the connecting extensions.</listBox></presentation><presentation id="ExtensionInstallAllowlist"><listBox refId="ExtensionInstallAllowlistDesc">Extension IDs to exempt from the blocklist</listBox></presentation><presentation id="ExtensionInstallBlocklist"><listBox refId="ExtensionInstallBlocklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox></presentation><presentation id="ExtensionInstallForcelist"><listBox refId="ExtensionInstallForcelistDesc">Extension/App IDs and update URLs to be silently installed</listBox></presentation><presentation id="ExtensionInstallSources"><listBox refId="ExtensionInstallSourcesDesc">URL patterns to allow extension, app, and user script installs from</listBox></presentation><presentation id="ExtensionInstallTypeBlocklist"><listBox refId="ExtensionInstallTypeBlocklistDesc">Blocklist for install types of extensions</listBox></presentation><presentation id="ExtensionManifestV2Availability"><dropdownList refId="ExtensionManifestV2Availability">Control Manifest v2 extension availability</dropdownList></presentation><presentation id="ExtensionSettings"><textBox refId="ExtensionSettings"><label>Extension management settings</label></textBox></presentation><presentation id="ExtensionUnpublishedAvailability"><dropdownList refId="ExtensionUnpublishedAvailability">Control availability of extensions unpublished on the Chrome Web Store.</dropdownList></presentation><presentation id="FirstPartySetsEnabled"/><presentation id="FirstPartySetsOverrides"><textBox refId="FirstPartySetsOverrides"><label>Override First-Party Sets.</label></textBox></presentation><presentation id="CreateThemesSettings"><dropdownList refId="CreateThemesSettings">Settings for Create Themes with AI</dropdownList></presentation><presentation id="DevToolsGenAiSettings"><dropdownList refId="DevToolsGenAiSettings">Settings for DevTools Generative AI Features</dropdownList></presentation><presentation id="GenAILocalFoundationalModelSettings"><dropdownList refId="GenAILocalFoundationalModelSettings">Settings for GenAI local foundational model</dropdownList></presentation><presentation id="HelpMeWriteSettings"><dropdownList refId="HelpMeWriteSettings">Settings for Help Me Write</dropdownList></presentation><presentation id="HistorySearchSettings"><dropdownList refId="HistorySearchSettings">Settings for AI-powered History Search</dropdownList></presentation><presentation id="TabCompareSettings"><dropdownList refId="TabCompareSettings">Tab Compare settings</dropdownList></presentation><presentation id="AccessCodeCastDeviceDuration"><decimalTextBox refId="AccessCodeCastDeviceDuration">Specifies how long (in seconds) a cast device selected with an access code or QR code stays in the Google Cast menu's list of cast devices.:</decimalTextBox></presentation><presentation id="AccessCodeCastEnabled"/><presentation id="EnableMediaRouter"/><presentation id="MediaRouterCastAllowAllIPs"/><presentation id="ShowCastIconInToolbar"/><presentation id="ShowCastSessionsStartedByOtherDevices"/><presentation id="AllHttpAuthSchemesAllowedForOrigins"><listBox refId="AllHttpAuthSchemesAllowedForOriginsDesc">List of origins allowing all HTTP authentication</listBox></presentation><presentation id="AllowCrossOriginAuthPrompt"/><presentation id="AuthNegotiateDelegateAllowlist"><textBox refId="AuthNegotiateDelegateAllowlist"><label>Kerberos delegation server allowlist</label></textBox></presentation><presentation id="AuthSchemes"><textBox refId="AuthSchemes"><label>Supported authentication schemes</label></textBox></presentation><presentation id="AuthServerAllowlist"><textBox refId="AuthServerAllowlist"><label>Authentication server allowlist</label></textBox></presentation><presentation id="BasicAuthOverHttpEnabled"/><presentation id="DisableAuthNegotiateCnameLookup"/><presentation id="EnableAuthNegotiatePort"/><presentation id="IdleTimeout"><decimalTextBox refId="IdleTimeout">Delay before running idle actions:</decimalTextBox></presentation><presentation id="IdleTimeoutActions"><listBox refId="IdleTimeoutActionsDesc">Actions to run when the computer is idle</listBox></presentation><presentation id="AlternativeBrowserParameters"><listBox refId="AlternativeBrowserParametersDesc">Command-line parameters for the alternative browser.</listBox></presentation><presentation id="AlternativeBrowserPath"><textBox refId="AlternativeBrowserPath"><label>Alternative browser to launch for configured websites.</label></textBox></presentation><presentation id="BrowserSwitcherChromeParameters"><listBox refId="BrowserSwitcherChromeParametersDesc">Command-line parameters for switching from the alternative browser.</listBox></presentation><presentation id="BrowserSwitcherChromePath"><textBox refId="BrowserSwitcherChromePath"><label>Path to Chrome for switching from the alternative browser.</label></textBox></presentation><presentation id="BrowserSwitcherDelay"><decimalTextBox refId="BrowserSwitcherDelay">Delay before launching alternative browser (milliseconds):</decimalTextBox></presentation><presentation id="BrowserSwitcherEnabled"/><presentation id="BrowserSwitcherExternalGreylistUrl"><textBox refId="BrowserSwitcherExternalGreylistUrl"><label>URL of an XML file that contains URLs that should never trigger a browser switch.</label></textBox></presentation><presentation id="BrowserSwitcherExternalSitelistUrl"><textBox refId="BrowserSwitcherExternalSitelistUrl"><label>URL of an XML file that contains URLs to load in an alternative browser.</label></textBox></presentation><presentation id="BrowserSwitcherKeepLastChromeTab"/><presentation id="BrowserSwitcherParsingMode"><dropdownList refId="BrowserSwitcherParsingMode">Sitelist parsing mode</dropdownList></presentation><presentation id="BrowserSwitcherUrlGreylist"><listBox refId="BrowserSwitcherUrlGreylistDesc">Websites that should never trigger a browser switch.</listBox></presentation><presentation id="BrowserSwitcherUrlList"><listBox refId="BrowserSwitcherUrlListDesc">Websites to open in alternative browser</listBox></presentation><presentation id="BrowserSwitcherUseIeSitelist"/><presentation id="CloudAPAuthEnabled"><dropdownList refId="CloudAPAuthEnabled">Allow automatic sign-in to Microsoft® cloud identity providers</dropdownList></presentation><presentation id="AbusiveExperienceInterventionEnforce"/><presentation id="AccessibilityImageLabelsEnabled"/><presentation id="AdditionalDnsQueryTypesEnabled"/><presentation id="AdsSettingForIntrusiveAdsSites"><dropdownList refId="AdsSettingForIntrusiveAdsSites">Ads setting for sites with intrusive ads</dropdownList></presentation><presentation id="AdvancedProtectionAllowed"/><presentation id="AllowBackForwardCacheForCacheControlNoStorePageEnabled"/><presentation id="AllowDeletingBrowserHistory"/><presentation id="AllowDinosaurEasterEgg"/><presentation id="AllowFileSelectionDialogs"/><presentation id="AllowWebAuthnWithBrokenTlsCerts"/><presentation id="AllowedDomainsForApps"><textBox refId="AllowedDomainsForApps"><label>Define domains allowed to access Google Workspace</label></textBox></presentation><presentation id="AlternateErrorPagesEnabled"/><presentation id="AlwaysOpenPdfExternally"/><presentation id="AmbientAuthenticationInPrivateModesEnabled"><dropdownList refId="AmbientAuthenticationInPrivateModesEnabled">Enable Ambient Authentication for profile types.</dropdownList></presentation><presentation id="ApplicationBoundEncryptionEnabled"/><presentation id="ApplicationLocaleValue"><textBox refId="ApplicationLocaleValue"><label>Application locale</label></textBox></presentation><presentation id="AudioCaptureAllowed"/><presentation id="AudioCaptureAllowedUrls"><listBox refId="AudioCaptureAllowedUrlsDesc">URLs that will be granted access to audio capture devices without prompt</listBox></presentation><presentation id="AudioProcessHighPriorityEnabled"/><presentation id="AudioSandboxEnabled"/><presentation id="AutoLaunchProtocolsFromOrigins"><textBox refId="AutoLaunchProtocolsFromOrigins"><label>Define a list of protocols that can launch an external application from listed origins without prompting the user</label></textBox></presentation><presentation id="AutoOpenAllowedForURLs"><listBox refId="AutoOpenAllowedForURLsDesc">URLs where AutoOpenFileTypes can apply</listBox></presentation><presentation id="AutoOpenFileTypes"><listBox refId="AutoOpenFileTypesDesc">List of file types that should be automatically opened on download</listBox></presentation><presentation id="AutofillAddressEnabled"/><presentation id="AutofillCreditCardEnabled"/><presentation id="AutoplayAllowed"/><presentation id="AutoplayAllowlist"><listBox refId="AutoplayAllowlistDesc">Allow media autoplay on a allowlist of URL patterns</listBox></presentation><presentation id="BackgroundModeEnabled"/><presentation id="BatterySaverModeAvailability"><dropdownList refId="BatterySaverModeAvailability">Enable Battery Saver Mode</dropdownList></presentation><presentation id="BlockThirdPartyCookies"/><presentation id="BookmarkBarEnabled"/><presentation id="BrowserAddPersonEnabled"/><presentation id="BrowserGuestModeEnabled"/><presentation id="BrowserGuestModeEnforced"/><presentation id="BrowserLabsEnabled"/><presentation id="BrowserLegacyExtensionPointsBlocked"/><presentation id="BrowserNetworkTimeQueriesEnabled"/><presentation id="BrowserSignin"><dropdownList refId="BrowserSignin">Browser sign in settings</dropdownList></presentation><presentation id="BrowserThemeColor"><textBox refId="BrowserThemeColor"><label>Configure the color of the browser's theme</label></textBox></presentation><presentation id="BrowsingDataLifetime"><textBox refId="BrowsingDataLifetime"><label>Browsing Data Lifetime Settings</label></textBox></presentation><presentation id="BuiltInDnsClientEnabled"/><presentation id="CORSNonWildcardRequestHeadersSupport"/><presentation id="CertificateTransparencyEnforcementDisabledForCas"><listBox refId="CertificateTransparencyEnforcementDisabledForCasDesc">Disable Certificate Transparency enforcement for a list of subjectPublicKeyInfo hashes</listBox></presentation><presentation id="CertificateTransparencyEnforcementDisabledForUrls"><listBox refId="CertificateTransparencyEnforcementDisabledForUrlsDesc">Disable Certificate Transparency enforcement for a list of URLs</listBox></presentation><presentation id="ChromeForTestingAllowed"/><presentation id="ChromeVariations"><dropdownList refId="ChromeVariations">Determine the availability of variations</dropdownList></presentation><presentation id="ClearBrowsingDataOnExitList"><listBox refId="ClearBrowsingDataOnExitListDesc">Clear Browsing Data on Exit</listBox></presentation><presentation id="ClickToCallEnabled"/><presentation id="CloudManagementEnrollmentMandatory"/><presentation id="CloudManagementEnrollmentToken"><textBox refId="CloudManagementEnrollmentToken"><label>The enrollment token of cloud policy</label></textBox></presentation><presentation id="CloudPolicyOverridesPlatformPolicy"/><presentation id="CloudUserPolicyMerge"/><presentation id="CloudUserPolicyOverridesCloudMachinePolicy"/><presentation id="CommandLineFlagSecurityWarningsEnabled"/><presentation id="ComponentUpdatesEnabled"/><presentation id="DNSInterceptionChecksEnabled"/><presentation id="DefaultBrowserSettingEnabled"/><presentation id="DefaultDownloadDirectory"><textBox refId="DefaultDownloadDirectory"><label>Set default download directory</label></textBox></presentation><presentation id="DefaultSearchProviderContextMenuAccessAllowed"/><presentation id="DesktopSharingHubEnabled"/><presentation id="DeveloperToolsAvailability"><dropdownList refId="DeveloperToolsAvailability">Control where Developer Tools can be used</dropdownList></presentation><presentation id="Disable3DAPIs"/><presentation id="DisableScreenshots"/><presentation id="DiskCacheDir"><textBox refId="DiskCacheDir"><label>Set disk cache directory</label></textBox></presentation><presentation id="DiskCacheSize"><decimalTextBox refId="DiskCacheSize">Set disk cache size:</decimalTextBox></presentation><presentation id="DnsOverHttpsMode"><dropdownList refId="DnsOverHttpsMode">Controls the mode of DNS-over-HTTPS</dropdownList></presentation><presentation id="DnsOverHttpsTemplates"><textBox refId="DnsOverHttpsTemplates"><label>Specify URI template of desired DNS-over-HTTPS resolver</label></textBox></presentation><presentation id="DomainReliabilityAllowed"/><presentation id="DownloadDirectory"><textBox refId="DownloadDirectory"><label>Set download directory</label></textBox></presentation><presentation id="DownloadRestrictions"><dropdownList refId="DownloadRestrictions">Download restrictions</dropdownList></presentation><presentation id="DynamicCodeSettings"><dropdownList refId="DynamicCodeSettings">Dynamic Code Settings</dropdownList></presentation><presentation id="EditBookmarksEnabled"/><presentation id="EnableExperimentalPolicies"><listBox refId="EnableExperimentalPoliciesDesc">Enables experimental policies</listBox></presentation><presentation id="EnableOnlineRevocationChecks"/><presentation id="EncryptedClientHelloEnabled"/><presentation id="EnterpriseCustomLabel"><textBox refId="EnterpriseCustomLabel"><label>Set a custom enterprise label</label></textBox></presentation><presentation id="EnterpriseHardwarePlatformAPIEnabled"/><presentation id="EnterpriseLogoUrl"><textBox refId="EnterpriseLogoUrl"><label>Enterprise Logo URL</label></textBox></presentation><presentation id="EnterpriseProfileBadgeToolbarSettings"><dropdownList refId="EnterpriseProfileBadgeToolbarSettings">Controls visibility of enterprise profile badge in the toolbar</dropdownList></presentation><presentation id="EnterpriseProfileCreationKeepBrowsingData"/><presentation id="EnterpriseSearchAggregatorSettings"><textBox refId="EnterpriseSearchAggregatorSettings"><label>Enterprise search aggregator settings (Beta)</label></textBox></presentation><presentation id="ExemptDomainFileTypePairsFromFileTypeDownloadWarnings"><textBox refId="ExemptDomainFileTypePairsFromFileTypeDownloadWarnings"><label>Disable download file type extension-based warnings for specified file types on domains</label></textBox></presentation><presentation id="ExplicitlyAllowedNetworkPorts"><listBox refId="ExplicitlyAllowedNetworkPortsDesc">Explicitly allowed network ports</listBox></presentation><presentation id="ExternalProtocolDialogShowAlwaysOpenCheckbox"/><presentation id="FeedbackSurveysEnabled"/><presentation id="FetchKeepaliveDurationSecondsOnShutdown"><decimalTextBox refId="FetchKeepaliveDurationSecondsOnShutdown">Fetch keepalive duration on Shutdown:</decimalTextBox></presentation><presentation id="FileOrDirectoryPickerWithoutGestureAllowedForOrigins"><listBox refId="FileOrDirectoryPickerWithoutGestureAllowedForOriginsDesc">Allow file or directory picker APIs to be called without prior user gesture</listBox></presentation><presentation id="ForceEphemeralProfiles"/><presentation id="ForceGoogleSafeSearch"/><presentation id="ForcePermissionPolicyUnloadDefaultEnabled"/><presentation id="ForceYouTubeRestrict"><dropdownList refId="ForceYouTubeRestrict">Force minimum YouTube Restricted Mode</dropdownList></presentation><presentation id="ForcedLanguages"><listBox refId="ForcedLanguagesDesc">Configure the content and order of preferred languages</listBox></presentation><presentation id="FullscreenAllowed"/><presentation id="GloballyScopeHTTPAuthCacheEnabled"/><presentation id="GoogleSearchSidePanelEnabled"/><presentation id="HSTSPolicyBypassList"><listBox refId="HSTSPolicyBypassListDesc">List of names that will bypass the HSTS policy check</listBox></presentation><presentation id="HardwareAccelerationModeEnabled"/><presentation id="HeadlessMode"><dropdownList refId="HeadlessMode">Control use of the Headless Mode</dropdownList></presentation><presentation id="HideWebStoreIcon"/><presentation id="HighEfficiencyModeEnabled"/><presentation id="HistoryClustersVisible"/><presentation id="HttpAllowlist"><listBox refId="HttpAllowlistDesc">HTTP Allowlist</listBox></presentation><presentation id="HttpsOnlyMode"><dropdownList refId="HttpsOnlyMode">Allow HTTPS-Only Mode to be enabled</dropdownList></presentation><presentation id="HttpsUpgradesEnabled"/><presentation id="ImportAutofillFormData"/><presentation id="ImportBookmarks"/><presentation id="ImportHistory"/><presentation id="ImportHomepage"/><presentation id="ImportSavedPasswords"/><presentation id="ImportSearchEngine"/><presentation id="IncognitoModeAvailability"><dropdownList refId="IncognitoModeAvailability">Incognito mode availability</dropdownList></presentation><presentation id="IntensiveWakeUpThrottlingEnabled"/><presentation id="IntranetRedirectBehavior"><dropdownList refId="IntranetRedirectBehavior">Intranet Redirection Behavior</dropdownList></presentation><presentation id="IsolateOrigins"><textBox refId="IsolateOrigins"><label>Enable Site Isolation for specified origins</label></textBox></presentation><presentation id="KeyboardFocusableScrollersEnabled"/><presentation id="LensDesktopNTPSearchEnabled"/><presentation id="LensOverlaySettings"><dropdownList refId="LensOverlaySettings">Settings for the Lens Overlay feature</dropdownList></presentation><presentation id="LensRegionSearchEnabled"/><presentation id="LookalikeWarningAllowlistDomains"><listBox refId="LookalikeWarningAllowlistDomainsDesc">Suppress lookalike domain warnings on domains</listBox></presentation><presentation id="ManagedAccountsSigninRestriction"><dropdownList refId="ManagedAccountsSigninRestriction">Add restrictions on managed accounts</dropdownList></presentation><presentation id="ManagedBookmarks"><textBox refId="ManagedBookmarks"><label>Managed Bookmarks</label></textBox></presentation><presentation id="ManagedConfigurationPerOrigin"><textBox refId="ManagedConfigurationPerOrigin"><label>Sets managed configuration values to websites to specific origins</label></textBox></presentation><presentation id="MaxConnectionsPerProxy"><decimalTextBox refId="MaxConnectionsPerProxy">Maximal number of concurrent connections to the proxy server:</decimalTextBox></presentation><presentation id="MaxInvalidationFetchDelay"><decimalTextBox refId="MaxInvalidationFetchDelay">Maximum fetch delay after a policy invalidation:</decimalTextBox></presentation><presentation id="MediaRecommendationsEnabled"/><presentation id="MemorySaverModeSavings"><dropdownList refId="MemorySaverModeSavings">Change Memory Saver Mode Savings</dropdownList></presentation><presentation id="MetricsReportingEnabled"/><presentation id="NTPCardsVisible"/><presentation id="NTPCustomBackgroundEnabled"/><presentation id="NTPMiddleSlotAnnouncementVisible"/><presentation id="NTPOutlookCardVisible"/><presentation id="NTPSharepointCardVisible"/><presentation id="NativeHostsExecutablesLaunchDirectly"/><presentation id="NetworkPredictionOptions"><dropdownList refId="NetworkPredictionOptions">Enable network prediction</dropdownList></presentation><presentation id="NetworkServiceSandboxEnabled"/><presentation id="OriginAgentClusterDefaultEnabled"/><presentation id="OverrideSecurityRestrictionsOnInsecureOrigin"><listBox refId="OverrideSecurityRestrictionsOnInsecureOriginDesc">Origins or hostname patterns for which restrictions on insecure origins should not apply</listBox></presentation><presentation id="PaymentMethodQueryEnabled"/><presentation id="PdfUseSkiaRendererEnabled"/><presentation id="PdfViewerOutOfProcessIframeEnabled"/><presentation id="PolicyAtomicGroupsEnabled"/><presentation id="PolicyDictionaryMultipleSourceMergeList"><listBox refId="PolicyDictionaryMultipleSourceMergeListDesc">Allow merging dictionary policies from different sources</listBox></presentation><presentation id="PolicyListMultipleSourceMergeList"><listBox refId="PolicyListMultipleSourceMergeListDesc">Allow merging list policies from different sources</listBox></presentation><presentation id="PolicyRefreshRate"><decimalTextBox refId="PolicyRefreshRate">Refresh rate for user policy:</decimalTextBox></presentation><presentation id="PostQuantumKeyAgreementEnabled"/><presentation id="ProfilePickerOnStartupAvailability"><dropdownList refId="ProfilePickerOnStartupAvailability">Profile picker availability on startup</dropdownList></presentation><presentation id="ProfileReauthPrompt"><dropdownList refId="ProfileReauthPrompt">Prompt users to re-authenticate to the profile</dropdownList></presentation><presentation id="PromotionsEnabled"/><presentation id="PromptForDownloadLocation"/><presentation id="PromptOnMultipleMatchingCertificates"/><presentation id="ProxySettings"><textBox refId="ProxySettings"><label>Proxy settings</label></textBox></presentation><presentation id="QRCodeGeneratorEnabled"/><presentation id="QuicAllowed"/><presentation id="ReduceAcceptLanguageEnabled"/><presentation id="RelaunchNotification"><dropdownList refId="RelaunchNotification">Notify a user that a browser relaunch or device restart is recommended or required</dropdownList></presentation><presentation id="RelaunchNotificationPeriod"><decimalTextBox refId="RelaunchNotificationPeriod">Time period (milliseconds):</decimalTextBox></presentation><presentation id="RelaunchWindow"><textBox refId="RelaunchWindow"><label>Relaunch time window</label></textBox></presentation><presentation id="RemoteDebuggingAllowed"/><presentation id="RendererAppContainerEnabled"/><presentation id="RequireOnlineRevocationChecksForLocalAnchors"/><presentation id="RestrictSigninToPattern"><textBox refId="RestrictSigninToPattern"><label>Restrict which Google accounts are allowed to be set as browser primary accounts in Google Chrome</label></textBox></presentation><presentation id="RoamingProfileLocation"><textBox refId="RoamingProfileLocation"><label>Set the roaming profile directory</label></textBox></presentation><presentation id="RoamingProfileSupportEnabled"/><presentation id="SSLErrorOverrideAllowed"/><presentation id="SSLErrorOverrideAllowedForOrigins"><listBox refId="SSLErrorOverrideAllowedForOriginsDesc">Allow proceeding from the SSL warning page on specific origins</listBox></presentation><presentation id="SafeBrowsingForTrustedSourcesEnabled"/><presentation id="SafeSitesFilterBehavior"><dropdownList refId="SafeSitesFilterBehavior">Control SafeSites adult content filtering.</dropdownList></presentation><presentation id="SandboxExternalProtocolBlocked"/><presentation id="SavingBrowserHistoryDisabled"/><presentation id="ScreenCaptureWithoutGestureAllowedForOrigins"><listBox refId="ScreenCaptureWithoutGestureAllowedForOriginsDesc">Allow screen capture without prior user gesture</listBox></presentation><presentation id="ScrollToTextFragmentEnabled"/><presentation id="SearchSuggestEnabled"/><presentation id="SecurityKeyPermitAttestation"><listBox refId="SecurityKeyPermitAttestationDesc">URLs/domains automatically permitted direct Security Key attestation</listBox></presentation><presentation id="SelectParserRelaxationEnabled"/><presentation id="ServiceWorkerToControlSrcdocIframeEnabled"/><presentation id="SharedArrayBufferUnrestrictedAccessAllowed"/><presentation id="SharedClipboardEnabled"/><presentation id="SharedWorkerBlobURLFixEnabled"/><presentation id="ShoppingListEnabled"/><presentation id="ShowAppsShortcutInBookmarkBar"/><presentation id="ShowFullUrlsInAddressBar"/><presentation id="SideSearchEnabled"/><presentation id="SignedHTTPExchangeEnabled"/><presentation id="SigninInterceptionEnabled"/><presentation id="SitePerProcess"/><presentation id="SiteSearchSettings"><textBox refId="SiteSearchSettings"><label>Site search settings</label></textBox></presentation><presentation id="SpellCheckServiceEnabled"/><presentation id="SpellcheckEnabled"/><presentation id="SpellcheckLanguage"><listBox refId="SpellcheckLanguageDesc">Force enable spellcheck languages</listBox></presentation><presentation id="SpellcheckLanguageBlocklist"><listBox refId="SpellcheckLanguageBlocklistDesc">Force disable spellcheck languages</listBox></presentation><presentation id="StandardizedBrowserZoomEnabled"/><presentation id="StrictMimetypeCheckForWorkerScriptsEnabled"/><presentation id="SuppressDifferentOriginSubframeDialogs"/><presentation id="SuppressUnsupportedOSWarning"/><presentation id="SyncDisabled"/><presentation id="SyncTypesListDisabled"><listBox refId="SyncTypesListDisabledDesc">List of types that should be excluded from synchronization</listBox></presentation><presentation id="TabDiscardingExceptions"><listBox refId="TabDiscardingExceptionsDesc">URL pattern Exceptions to tab discarding</listBox></presentation><presentation id="TaskManagerEndProcessEnabled"/><presentation id="TotalMemoryLimitMb"><decimalTextBox refId="TotalMemoryLimitMb">Set memory limit for Chrome instances:</decimalTextBox></presentation><presentation id="TranslateEnabled"/><presentation id="TranslatorAPIAllowed"/><presentation id="URLAllowlist"><listBox refId="URLAllowlistDesc">Allow access to a list of URLs</listBox></presentation><presentation id="URLBlocklist"><listBox refId="URLBlocklistDesc">Block access to a list of URLs</listBox></presentation><presentation id="UrlKeyedAnonymizedDataCollectionEnabled"/><presentation id="UserAgentReduction"><dropdownList refId="UserAgentReduction">Enable or disable the User-Agent Reduction.</dropdownList></presentation><presentation id="UserDataDir"><textBox refId="UserDataDir"><label>Set user data directory</label></textBox></presentation><presentation id="UserDataSnapshotRetentionLimit"><decimalTextBox refId="UserDataSnapshotRetentionLimit">Limits the number of user data snapshots retained for use in case of emergency rollback.:</decimalTextBox></presentation><presentation id="UserFeedbackAllowed"/><presentation id="VideoCaptureAllowed"/><presentation id="VideoCaptureAllowedUrls"><listBox refId="VideoCaptureAllowedUrlsDesc">URLs that will be granted access to video capture devices without prompt</listBox></presentation><presentation id="WPADQuickCheckEnabled"/><presentation id="WebAppInstallForceList"><textBox refId="WebAppInstallForceList"><label>URLs for Web Apps to be silently installed.</label></textBox></presentation><presentation id="WebAppSettings"><textBox refId="WebAppSettings"><label>Web App management settings</label></textBox></presentation><presentation id="WebAudioOutputBufferingEnabled"/><presentation id="WebAuthenticationRemoteDesktopAllowedOrigins"><listBox refId="WebAuthenticationRemoteDesktopAllowedOriginsDesc">Allowed Origins for Proxied WebAuthn Requests from Remote Desktop Applications.</listBox></presentation><presentation id="WebRtcEventLogCollectionAllowed"/><presentation id="WebRtcLocalIpsAllowedUrls"><listBox refId="WebRtcLocalIpsAllowedUrlsDesc">URLs for which local IPs are exposed in WebRTC ICE candidates</listBox></presentation><presentation id="WebRtcTextLogCollectionAllowed"/><presentation id="WebRtcUdpPortRange"><textBox refId="WebRtcUdpPortRange"><label>Restrict the range of local UDP ports used by WebRTC</label></textBox></presentation><presentation id="WindowOcclusionEnabled"/><presentation id="NativeMessagingAllowlist"><listBox refId="NativeMessagingAllowlistDesc">Names of the native messaging hosts to exempt from the blocklist</listBox></presentation><presentation id="NativeMessagingBlocklist"><listBox refId="NativeMessagingBlocklistDesc">Names of the forbidden native messaging hosts (or * for all)</listBox></presentation><presentation id="NativeMessagingUserLevelHosts"/><presentation id="AccessControlAllowMethodsInCORSPreflightSpecConformant"/><presentation id="CompressionDictionaryTransportEnabled"/><presentation id="DataURLWhitespacePreservationEnabled"/><presentation id="HappyEyeballsV3Enabled"/><presentation id="IPv6ReachabilityOverrideEnabled"/><presentation id="ZstdContentEncodingEnabled"/><presentation id="DeletingUndecryptablePasswordsEnabled"/><presentation id="PasswordDismissCompromisedAlertEnabled"/><presentation id="PasswordLeakDetectionEnabled"/><presentation id="PasswordManagerEnabled"/><presentation id="PasswordManagerPasskeysEnabled"/><presentation id="PasswordSharingEnabled"/><presentation id="CloudPrintProxyEnabled"/><presentation id="DefaultPrinterSelection"><textBox refId="DefaultPrinterSelection"><label>Default printer selection rules</label></textBox></presentation><presentation id="DisablePrintPreview"/><presentation id="OopPrintDriversAllowed"/><presentation id="PrintHeaderFooter"/><presentation id="PrintPdfAsImageAvailability"/><presentation id="PrintPdfAsImageDefault"/><presentation id="PrintPostScriptMode"><dropdownList refId="PrintPostScriptMode">Print PostScript Mode</dropdownList></presentation><presentation id="PrintPreviewUseSystemDefaultPrinter"/><presentation id="PrintRasterizationMode"><dropdownList refId="PrintRasterizationMode">Print Rasterization Mode</dropdownList></presentation><presentation id="PrintRasterizePdfDpi"><decimalTextBox refId="PrintRasterizePdfDpi">Print Rasterize PDF DPI:</decimalTextBox></presentation><presentation id="PrinterTypeDenyList"><listBox refId="PrinterTypeDenyListDesc">Disable printer types on the deny list</listBox></presentation><presentation id="PrintingAllowedBackgroundGraphicsModes"><dropdownList refId="PrintingAllowedBackgroundGraphicsModes">Restrict background graphics printing mode</dropdownList></presentation><presentation id="PrintingBackgroundGraphicsDefault"><dropdownList refId="PrintingBackgroundGraphicsDefault">Default background graphics printing mode</dropdownList></presentation><presentation id="PrintingEnabled"/><presentation id="PrintingLPACSandboxEnabled"/><presentation id="PrintingPaperSizeDefault"><textBox refId="PrintingPaperSizeDefault"><label>Default printing page size</label></textBox></presentation><presentation id="PrivacySandboxAdMeasurementEnabled"/><presentation id="PrivacySandboxAdTopicsEnabled"/><presentation id="PrivacySandboxPromptEnabled"/><presentation id="PrivacySandboxSiteEnabledAdsEnabled"/><presentation id="InsecurePrivateNetworkRequestsAllowed"/><presentation id="InsecurePrivateNetworkRequestsAllowedForUrls"><listBox refId="InsecurePrivateNetworkRequestsAllowedForUrlsDesc">Allow the listed sites to make requests to more-private network endpoints in an insecure manner.</listBox></presentation><presentation id="PrivateNetworkAccessRestrictionsEnabled"/><presentation id="RelatedWebsiteSetsEnabled"/><presentation id="RelatedWebsiteSetsOverrides"><textBox refId="RelatedWebsiteSetsOverrides"><label>Override Related Website Sets.</label></textBox></presentation><presentation id="RemoteAccessHostAllowClientPairing"/><presentation id="RemoteAccessHostAllowFileTransfer"/><presentation id="RemoteAccessHostAllowPinAuthentication"/><presentation id="RemoteAccessHostAllowRelayedConnection"/><presentation id="RemoteAccessHostAllowRemoteAccessConnections"/><presentation id="RemoteAccessHostAllowRemoteSupportConnections"/><presentation id="RemoteAccessHostAllowUiAccessForRemoteAssistance"/><presentation id="RemoteAccessHostAllowUrlForwarding"/><presentation id="RemoteAccessHostClientDomainList"><listBox refId="RemoteAccessHostClientDomainListDesc">Configure the required domain names for remote access clients</listBox></presentation><presentation id="RemoteAccessHostClipboardSizeBytes"><decimalTextBox refId="RemoteAccessHostClipboardSizeBytes">The maximum size, in bytes, that can be transferred between client and host via clipboard synchronization:</decimalTextBox></presentation><presentation id="RemoteAccessHostDomainList"><listBox refId="RemoteAccessHostDomainListDesc">Configure the required domain names for remote access hosts</listBox></presentation><presentation id="RemoteAccessHostFirewallTraversal"/><presentation id="RemoteAccessHostMaximumSessionDurationMinutes"><decimalTextBox refId="RemoteAccessHostMaximumSessionDurationMinutes">Maximum session duration allowed for remote access connections:</decimalTextBox></presentation><presentation id="RemoteAccessHostRequireCurtain"/><presentation id="RemoteAccessHostUdpPortRange"><textBox refId="RemoteAccessHostUdpPortRange"><label>Restrict the UDP port range used by the remote access host</label></textBox></presentation><presentation id="ChromeFrameContentTypes"><listBox refId="ChromeFrameContentTypesDesc">Allow Google Chrome Frame to handle the listed content types</listBox></presentation><presentation id="AdditionalLaunchParameters"><textBox refId="AdditionalLaunchParameters"><label>Additional command line parameters for Google Chrome</label></textBox></presentation><presentation id="ChromeFrameRendererSettings"><dropdownList refId="ChromeFrameRendererSettings">Default HTML renderer for Google Chrome Frame</dropdownList></presentation><presentation id="RenderInChromeFrameList"><listBox refId="RenderInChromeFrameListDesc">Always render the following URL patterns in Google Chrome Frame</listBox></presentation><presentation id="RenderInHostList"><listBox refId="RenderInHostListDesc">Always render the following URL patterns in the host browser</listBox></presentation><presentation id="SkipMetadataCheck"/><presentation id="DefaultFileHandlingGuardSetting"><dropdownList refId="DefaultFileHandlingGuardSetting">Control use of the File Handling API</dropdownList></presentation><presentation id="DefaultKeygenSetting"><dropdownList refId="DefaultKeygenSetting">Default key generation setting</dropdownList></presentation><presentation id="DefaultPluginsSetting"><dropdownList refId="DefaultPluginsSetting">Default Flash setting</dropdownList></presentation><presentation id="FileHandlingAllowedForUrls"><listBox refId="FileHandlingAllowedForUrlsDesc">Allow the File Handling API on these web apps</listBox></presentation><presentation id="FileHandlingBlockedForUrls"><listBox refId="FileHandlingBlockedForUrlsDesc">Block the File Handling API on these web apps</listBox></presentation><presentation id="FileSystemSyncAccessHandleAsyncInterfaceEnabled"/><presentation id="KeygenAllowedForUrls"><listBox refId="KeygenAllowedForUrlsDesc">Allow key generation on these sites</listBox></presentation><presentation id="KeygenBlockedForUrls"><listBox refId="KeygenBlockedForUrlsDesc">Block key generation on these sites</listBox></presentation><presentation id="LegacySameSiteCookieBehaviorEnabled"><dropdownList refId="LegacySameSiteCookieBehaviorEnabled">Default legacy SameSite cookie behavior setting</dropdownList></presentation><presentation id="LegacySameSiteCookieBehaviorEnabledForDomainList"><listBox refId="LegacySameSiteCookieBehaviorEnabledForDomainListDesc">Revert to legacy SameSite behavior for cookies on these sites</listBox></presentation><presentation id="PluginsAllowedForUrls"><listBox refId="PluginsAllowedForUrlsDesc">Allow the Flash plugin on these sites</listBox></presentation><presentation id="PluginsBlockedForUrls"><listBox refId="PluginsBlockedForUrlsDesc">Block the Flash plugin on these sites</listBox></presentation><presentation id="DefaultSearchProviderIconURL"><textBox refId="DefaultSearchProviderIconURL"><label>Default search provider icon</label></textBox></presentation><presentation id="DefaultSearchProviderInstantURL"><textBox refId="DefaultSearchProviderInstantURL"><label>Default search provider instant URL</label></textBox></presentation><presentation id="DefaultSearchProviderInstantURLPostParams"><textBox refId="DefaultSearchProviderInstantURLPostParams"><label>Parameters for instant URL which uses POST</label></textBox></presentation><presentation id="DefaultSearchProviderSearchTermsReplacementKey"><textBox refId="DefaultSearchProviderSearchTermsReplacementKey"><label>Parameter controlling search term placement for the default search provider</label></textBox></presentation><presentation id="ChromeAppsWebViewPermissiveBehaviorAllowed"/><presentation id="ExtensionAllowInsecureUpdates"/><presentation id="AssistantWebEnabled"/><presentation id="SupervisedUserCreationEnabled"/><presentation id="AdvancedProtectionDeepScanningEnabled"/><presentation id="AllowOutdatedPlugins"/><presentation id="AllowPopupsDuringPageUnload"/><presentation id="AllowSyncXHRInPageDismissal"/><presentation id="AlwaysAuthorizePlugins"/><presentation id="AppCacheForceEnabled"/><presentation id="AuthNegotiateDelegateWhitelist"><textBox refId="AuthNegotiateDelegateWhitelist"><label>Kerberos delegation server allowlist</label></textBox></presentation><presentation id="AuthServerWhitelist"><textBox refId="AuthServerWhitelist"><label>Authentication server allowlist</label></textBox></presentation><presentation id="AutoplayWhitelist"><listBox refId="AutoplayWhitelistDesc">Allow media autoplay on a allowlist of URL patterns</listBox></presentation><presentation id="BeforeunloadEventCancelByPreventDefaultEnabled"/><presentation id="CECPQ2Enabled"/><presentation id="CSSCustomStateDeprecatedSyntaxEnabled"/><presentation id="CertificateTransparencyEnforcementDisabledForLegacyCas"><listBox refId="CertificateTransparencyEnforcementDisabledForLegacyCasDesc">Disable Certificate Transparency enforcement for a list of Legacy Certificate Authorities</listBox></presentation><presentation id="ChromeAppsEnabled"/><presentation id="ChromeCleanupEnabled"/><presentation id="ChromeCleanupReportingEnabled"/><presentation id="ChromeRootStoreEnabled"/><presentation id="ClearSiteDataOnExit"/><presentation id="CorsLegacyModeEnabled"/><presentation id="CorsMitigationList"><listBox refId="CorsMitigationListDesc">Enable CORS check mitigations in the new CORS implementation</listBox></presentation><presentation id="CrossOriginWebAssemblyModuleSharingEnabled"/><presentation id="DHEEnabled"/><presentation id="DisablePluginFinder"/><presentation id="DisableSSLRecordSplitting"/><presentation id="DisableSpdy"/><presentation id="DisabledPlugins"><listBox refId="DisabledPluginsDesc">List of disabled plugins</listBox></presentation><presentation id="DisabledPluginsExceptions"><listBox refId="DisabledPluginsExceptionsDesc">List of exceptions to the list of disabled plugins</listBox></presentation><presentation id="DisplayCapturePermissionsPolicyEnabled"/><presentation id="DnsPrefetchingEnabled"/><presentation id="DownloadBubbleEnabled"/><presentation id="EnableCommonNameFallbackForLocalAnchors"/><presentation id="EnableDeprecatedPrivetPrinting"/><presentation id="EnableDeprecatedWebBasedSignin"/><presentation id="EnableDeprecatedWebPlatformFeatures"><listBox refId="EnableDeprecatedWebPlatformFeaturesDesc">Enable deprecated web platform features for a limited time</listBox></presentation><presentation id="EnableSha1ForLocalAnchors"/><presentation id="EnableSymantecLegacyInfrastructure"/><presentation id="EnabledPlugins"><listBox refId="EnabledPluginsDesc">List of enabled plugins</listBox></presentation><presentation id="EnforceLocalAnchorConstraintsEnabled"/><presentation id="EnterpriseWebStoreName"><textBox refId="EnterpriseWebStoreName"><label>Enterprise web store name (deprecated)</label></textBox></presentation><presentation id="EnterpriseWebStoreURL"><textBox refId="EnterpriseWebStoreURL"><label>Enterprise web store URL (deprecated)</label></textBox></presentation><presentation id="EventPathEnabled"/><presentation id="ExtensionInstallBlacklist"><listBox refId="ExtensionInstallBlacklistDesc">Extension IDs the user should be prevented from installing (or * for all)</listBox></presentation><presentation id="ExtensionInstallWhitelist"><listBox refId="ExtensionInstallWhitelistDesc">Extension IDs to exempt from the blocklist</listBox></presentation><presentation id="ForceEnablePepperVideoDecoderDevAPI"/><presentation id="ForceLegacyDefaultReferrerPolicy"/><presentation id="ForceMajorVersionToMinorPositionInUserAgent"><dropdownList refId="ForceMajorVersionToMinorPositionInUserAgent">Freeze User-Agent string major version at 99</dropdownList></presentation><presentation id="ForceNetworkInProcess"/><presentation id="GCFUserDataDir"><textBox refId="GCFUserDataDir"><label>Set user data directory</label></textBox></presentation><presentation id="HideWebStorePromo"/><presentation id="Http09OnNonDefaultPortsEnabled"/><presentation id="InsecureHashesInTLSHandshakesEnabled"/><presentation id="InstantEnabled"/><presentation id="LoadCryptoTokenExtension"/><presentation id="LocalDiscoveryEnabled"/><presentation id="LockIconInAddressBarEnabled"/><presentation id="MachineLevelUserCloudPolicyEnrollmentToken"><textBox refId="MachineLevelUserCloudPolicyEnrollmentToken"><label>The enrollment token of cloud policy on desktop</label></textBox></presentation><presentation id="MediaCacheSize"><decimalTextBox refId="MediaCacheSize">Set media disk cache size:</decimalTextBox></presentation><presentation id="NativeClientForceAllowed"/><presentation id="NativeMessagingBlacklist"><listBox refId="NativeMessagingBlacklistDesc">Names of the forbidden native messaging hosts (or * for all)</listBox></presentation><presentation id="NativeMessagingWhitelist"><listBox refId="NativeMessagingWhitelistDesc">Names of the native messaging hosts to exempt from the blocklist</listBox></presentation><presentation id="NativeWindowOcclusionEnabled"/><presentation id="NewBaseUrlInheritanceBehaviorAllowed"/><presentation id="OffsetParentNewSpecBehaviorEnabled"/><presentation id="OptimizationGuideFetchingEnabled"/><presentation id="PPAPISharedImagesSwapChainAllowed"/><presentation id="PacHttpsUrlStrippingEnabled"/><presentation id="PersistentQuotaEnabled"/><presentation id="PrefixedStorageInfoEnabled"/><presentation id="PrefixedVideoFullscreenApiAvailability"><dropdownList refId="PrefixedVideoFullscreenApiAvailability">Manage the deprecated prefixed video fullscreen API's availability</dropdownList></presentation><presentation id="RC4Enabled"/><presentation id="RSAKeyUsageForLocalAnchorsEnabled"/><presentation id="RunAllFlashInAllowMode"/><presentation id="SSLVersionFallbackMin"><dropdownList refId="SSLVersionFallbackMin">Minimum TLS version to fallback to</dropdownList></presentation><presentation id="SSLVersionMax"><dropdownList refId="SSLVersionMax">Maximum SSL version enabled</dropdownList></presentation><presentation id="SSLVersionMin"><dropdownList refId="SSLVersionMin">Minimum SSL version enabled</dropdownList></presentation><presentation id="SafeBrowsingExtendedReportingOptInAllowed"/><presentation id="SafeBrowsingWhitelistDomains"><listBox refId="SafeBrowsingWhitelistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</listBox></presentation><presentation id="SendMouseEventsDisabledFormControlsEnabled"/><presentation id="SetTimeoutWithout1MsClampEnabled"/><presentation id="SpellcheckLanguageBlacklist"><listBox refId="SpellcheckLanguageBlacklistDesc">Force disable spellcheck languages</listBox></presentation><presentation id="StricterMixedContentTreatmentEnabled"/><presentation id="SuppressChromeFrameTurndownPrompt"/><presentation id="TLS13HardeningForLocalAnchorsEnabled"/><presentation id="TabFreezingEnabled"/><presentation id="TabUnderAllowed"/><presentation id="TargetBlankImpliesNoOpener"/><presentation id="ThirdPartyBlockingEnabled"/><presentation id="ThrottleNonVisibleCrossOriginIframesAllowed"/><presentation id="ToolbarAvatarLabelSettings"><dropdownList refId="ToolbarAvatarLabelSettings">Managed toolbar avatar label setting</dropdownList></presentation><presentation id="TripleDESEnabled"/><presentation id="U2fSecurityKeyApiEnabled"/><presentation id="URLBlacklist"><listBox refId="URLBlacklistDesc">Block access to a list of URLs</listBox></presentation><presentation id="URLWhitelist"><listBox refId="URLWhitelistDesc">Allow access to a list of URLs</listBox></presentation><presentation id="UnthrottledNestedTimeoutEnabled"/><presentation id="UrlParamFilterEnabled"/><presentation id="UseLegacyFormControls"/><presentation id="UseMojoVideoDecoderForPepperAllowed"/><presentation id="UserAgentClientHintsEnabled"/><presentation id="UserAgentClientHintsGREASEUpdateEnabled"/><presentation id="WebComponentsV0Enabled"/><presentation id="WebDriverOverridesIncompatiblePolicies"/><presentation id="WebRtcAllowLegacyTLSProtocols"/><presentation id="WebSQLAccess"/><presentation id="WebSQLInThirdPartyContextEnabled"/><presentation id="WebSQLNonSecureContextEnabled"/><presentation id="WelcomePageOnOSUpgradeEnabled"/><presentation id="BlockTruncatedCookies"/><presentation id="PasswordManagerAllowShowPasswords"/><presentation id="CloudPrintSubmitEnabled"/><presentation id="CloudPrintWarningsSuppressed"/><presentation id="RemoteAccessClientFirewallTraversal"/><presentation id="RemoteAccessHostDebugOverridePolicies"><textBox refId="RemoteAccessHostDebugOverridePolicies"><label>Policy overrides for Debug builds of the remote access host</label></textBox></presentation><presentation id="RemoteAccessHostRequireTwoFactor"/><presentation id="RemoteAccessHostTalkGadgetPrefix"><textBox refId="RemoteAccessHostTalkGadgetPrefix"><label>Configure the TalkGadget prefix for remote access hosts</label></textBox></presentation><presentation id="DisableSafeBrowsingProceedAnyway"/><presentation id="PasswordProtectionChangePasswordURL"><textBox refId="PasswordProtectionChangePasswordURL"><label>Configure the change password URL.</label></textBox></presentation><presentation id="PasswordProtectionLoginURLs"><listBox refId="PasswordProtectionLoginURLsDesc">Configure the list of enterprise login URLs where password protection service should capture salted hashes of passwords.</listBox></presentation><presentation id="PasswordProtectionWarningTrigger"><dropdownList refId="PasswordProtectionWarningTrigger">Password protection warning trigger</dropdownList></presentation><presentation id="SafeBrowsingAllowlistDomains"><listBox refId="SafeBrowsingAllowlistDomainsDesc">Configure the list of domains on which Safe Browsing will not trigger warnings.</listBox></presentation><presentation id="SafeBrowsingDeepScanningEnabled"/><presentation id="SafeBrowsingExtendedReportingEnabled"/><presentation id="SafeBrowsingProtectionLevel"><dropdownList refId="SafeBrowsingProtectionLevel">Safe Browsing Protection Level</dropdownList></presentation><presentation id="SafeBrowsingProxiedRealTimeChecksAllowed"/><presentation id="SafeBrowsingSurveysEnabled"/><presentation id="BoundSessionCredentialsEnabled"/><presentation id="ProfileSeparationDomainExceptionList"><listBox refId="ProfileSeparationDomainExceptionListDesc">Enterprise profile separation secondary domain allowlist</listBox></presentation><presentation id="HomepageIsNewTabPage"/><presentation id="HomepageLocation"><textBox refId="HomepageLocation"><label>Home page URL</label></textBox></presentation><presentation id="NewTabPageLocation"><textBox refId="NewTabPageLocation"><label>New Tab page URL</label></textBox></presentation><presentation id="RestoreOnStartup"><dropdownList refId="RestoreOnStartup">Action on startup</dropdownList></presentation><presentation id="RestoreOnStartupURLs"><listBox refId="RestoreOnStartupURLsDesc">URLs to open on startup</listBox></presentation><presentation id="ShowHomeButton"/><presentation id="WebRtcIPHandling"><dropdownList refId="WebRtcIPHandling">WebRTC IP handling</dropdownList></presentation><presentation id="WebRtcIPHandlingUrl"><textBox refId="WebRtcIPHandlingUrl"><label>WebRTC per URL IP Handling</label></textBox></presentation></presentationTable></resources></policyDefinitionResources>
